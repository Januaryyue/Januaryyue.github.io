{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"themes/hexo-theme-next-master/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/images/logo.svg","path":"images/logo.svg","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/algolia-search.js","path":"js/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/bookmark.js","path":"js/bookmark.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/local-search.js","path":"js/local-search.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/motion.js","path":"js/motion.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/next-boot.js","path":"js/next-boot.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/anime.min.js","path":"lib/anime.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/js/schemes/pisces.js","path":"js/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/all.min.css","path":"lib/font-awesome/css/all.min.css","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/webfonts/fa-brands-400.woff2","path":"lib/font-awesome/webfonts/fa-brands-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/webfonts/fa-regular-400.woff2","path":"lib/font-awesome/webfonts/fa-regular-400.woff2","modified":1,"renderable":1},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/webfonts/fa-solid-900.woff2","path":"lib/font-awesome/webfonts/fa-solid-900.woff2","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/picture/pic2.drawio","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1693299656906},{"_id":"source/_posts/hello-world.md","hash":"acad91ace80b80295b11a9b7ad4c29a2dcfdd8fb","modified":1693299656905},{"_id":"source/_posts/kddi_mu底层版本详细设计.md","hash":"8e50025c8ae8eb9c598033ec55b20e6e1400b23d","modified":1693377505398},{"_id":"source/_posts/m2ru底层启动详细设计.md","hash":"0b9760a959b3fb413cbe63535c7edc3e069c9cf5","modified":1693377487007},{"_id":"source/_posts/petalinux.md","hash":"4367a56e31f15dd3caa27eb3030b227e86ba532b","modified":1693377522629},{"_id":"source/tags/index-1.md","hash":"74f39e88a0880e848f808ba4ce502d2c8154637f","modified":1693375540794},{"_id":"source/tags/index.md","hash":"646f8103580c7f89bd7c5f84125616eb8a20cbd2","modified":1693375788923},{"_id":"source/_posts/picture/pic-分区.svg","hash":"e9a73ec9e57649eddfe349dc34c57118595214f6","modified":1693299656906},{"_id":"source/_posts/picture/pic1.drawio","hash":"e76caaef9635eca9e68b91571d07aeecfae3bc37","modified":1693299656906},{"_id":"source/_posts/picture/pic1.svg","hash":"90fe4e48722b03c92cbbe6a83c783ae5adba8ea1","modified":1693299656906},{"_id":"source/_posts/picture/pic_compare_partition.svg","hash":"3350dbc34c84406b6e5af5b95ddcd148189ddf65","modified":1693299656907},{"_id":"source/_posts/picture/pic_partition.svg","hash":"c64aa60fb9010a4cf583a3159b4516fb242e763f","modified":1693299656908},{"_id":"themes/hexo-theme-next-master/languages/default.yml","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1693303027680},{"_id":"themes/hexo-theme-next-master/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/_config.yml","hash":"e1d14d48b02d09b97ad50a5edca5e650cd73553e","modified":1693377763830},{"_id":"themes/hexo-theme-next-master/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1627608806000},{"_id":"themes/hexo-theme-next-master/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1627608806000},{"_id":"public/tags/index-1.html","hash":"864b074fde6875f569ee66a4070487292fd9b3dd","modified":1693378050485},{"_id":"public/tags/index.html","hash":"08a2a413781d792618f68937be273e5a4f7c955d","modified":1693378050485},{"_id":"public/2023/08/29/hello-world/index.html","hash":"c818cc51289bcef22bd2dfec16101095913f0b3b","modified":1693378050485},{"_id":"public/archives/index.html","hash":"85aabc958e0db78c46115624edd7455c971d20a5","modified":1693378050485},{"_id":"public/archives/2020/index.html","hash":"5c8d718c72923119efa2d7efa9a913549b306e00","modified":1693378050485},{"_id":"public/archives/2020/05/index.html","hash":"63dafac5a65722e676970cb9c1865e99ae944051","modified":1693378050485},{"_id":"public/archives/2022/index.html","hash":"90f602bd34095fe7c63027d6865627f2e1feac60","modified":1693378050485},{"_id":"public/archives/2023/index.html","hash":"47fd088826086cd0b5a1bbd86cee694e3df36cfb","modified":1693378050485},{"_id":"public/archives/2022/03/index.html","hash":"4375fbba4c70b9de7ac9f1c9da1077bd03887e92","modified":1693378050485},{"_id":"public/archives/2023/02/index.html","hash":"9d1f336bb54e75a00d3d825d88e83704e0af2b04","modified":1693378050485},{"_id":"public/archives/2023/08/index.html","hash":"1bc344282a7a375fb2625916203e948998a6b5d7","modified":1693378050485},{"_id":"public/tags/Linux/index.html","hash":"66316fe106fa4a88a735dbae27dc16fe714bd25b","modified":1693378050485},{"_id":"public/2023/02/20/kddi_mu底层版本详细设计/index.html","hash":"c25b9c2992998ac842c8e671a12f913de8befc12","modified":1693378050485},{"_id":"public/2022/03/15/m2ru底层启动详细设计/index.html","hash":"492ff27fd7d905ea9e7dd5db8542a54cada2f42f","modified":1693378050485},{"_id":"public/2020/05/20/petalinux/index.html","hash":"a31a639400a8af3d5565f1b2333b5645b3f5b3d5","modified":1693378050485},{"_id":"public/index.html","hash":"ff18808ec89793f900a67675de96dbfa6d81f5f5","modified":1693378050485},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1693378050485},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1693378050485},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1693378050485},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1693378050485},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1693378050485},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1693378050485},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1693378050485},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1693378050485},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1693378050485},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1693378050485},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1693378050485},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1693378050485},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1693378050485},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1693378050485},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1693378050485},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1693378050485},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1693378050485},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1693378050485},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1693378050485},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1693378050485},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1693378050485},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1693378050485},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1693378050485},{"_id":"public/css/main.css","hash":"a2385bda910cfef3db425a96e65903cbc708262f","modified":1693378050485},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1693378050485},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1693378050485},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1693378050485},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1693378050485},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1693378050485}],"Category":[],"Data":[],"Page":[{"title":"tags","date":"2023-08-30T06:05:40.000Z","_content":"","source":"tags/index-1.md","raw":"---\ntitle: tags\ndate: 2023-08-30 14:05:40\n---\n","updated":"2023-08-30T06:05:40.794Z","path":"tags/index-1.html","comments":1,"layout":"page","_id":"cllxdkidk00008sm4f7ai4aey","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"tags","date":"2023-08-30T06:00:09.000Z","type":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2023-08-30 14:00:09\ntype: \"tags\"\n---\n","updated":"2023-08-30T06:09:48.923Z","path":"tags/index.html","comments":1,"layout":"page","_id":"cllxdkidq00028sm4h9w892ah","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-08-29T09:00:56.905Z","updated":"2023-08-29T09:00:56.905Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllxdkidn00018sm49kdr4emh","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"KDDI_MU底层详细设计","date":"2023-02-19T16:00:00.000Z","_content":"\n<div align=\"center\">\n<font size=9 > KDDI_MU底层详细设计\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n|版本|简介|编辑日期|作者|\n|---|:---|----|----|\n|V0.1|初稿|2023-2-20|January|\n\n</div>\n\n<div STYLE=\"page-break-after: always;\"></div>\n\n<div align=\"center\">\n<font size=7 > \n目录\n</font>\n</div>\n\n[toc]\n\n\n<div STYLE=\"page-break-after: always;\"></div>\n#综述\n\n#  1. 概述 \n\n## 详细设计背景\n- <font color=\"black\">m2ru-oran底层只有一个boot备份，一旦启动坏掉，设备即刻成砖，急需提高设备容错率</font>\n- <font color=\"black\">目前产线生产流程中，ORAN设备需要在DAS设备基础上进行烧写底层，才能转换成ORAN设备，增加了产线负担</font>\n- <font color=\"black\">外场das设备升级成oran设备过程中，往往伴随着升级风险</font>\n\n## 详细设计目的\n\n- boot启动分区增加至4个，大大减小设备启动失败的风险\n- 减少产线在线升级oran底层带来的额外操作及风险\n- 合并das/oran底层版本，减少底层后期维护成本\n\n---\n\n# 2. 模块设计\n\n## UBOOT模块设计\n\n### uboot启动逻辑设计\n- 在uboot加载内核kernel时，通过解析kernel头部信息获取内核加载地址、设备树等信息\n- 通过获取到的fit_uname_config到kernel头部轮询到设备树节点(按字符串为key值)，再将其加载到内存中\n- uboot将设备树dtb的地址传给kernel，然后进行加载内核，控制权移交给内核即可\n\n### 设备识别das/oran\n\n- 设备采用环境变量的方式进行das/oran机型识别\n- 该环境变量名称为das_platform\n- 当设备处于默认情况下，das_platform环境变量为空，该设备为oran设备\n- 当setenv das_platform das@system-top.dtb时，设备转变成das设备\n\n```mermaid\ngraph LR\n    A[fsbl] --> B(uboot) \n    B --> C{platform}\n    C -->|platform = das| D(das_dtb)\n    C -->|platform = NULL| E(oran_dtb)\n    E -->|加载| G[kernel]\n    D --> |加载| G\n```\n\n## 设备树模块设计\n\n- 由于m2ru平台的das和oran的FPGA完全不同，无法做到兼容，故需要设备自己知道是oran还是das设备，以按照不同的FPGA版本加载对应的设备树，进而加载不同的设备驱动\n- m2ru设备按照das和oran的FPGA的xsa文件进行分开编译各自平台设备树\n- 根据oran/das项目需求，自行添加完善设备树\n\n## 内核模块设计\n\n- das/oran共用驱动，如flash驱动、eth0驱动等不用特殊进行处理\n- ptp驱动、ecpri/cpri网卡驱动等务必使用设备树配置进行加载\n- DTB文件按照das_fdt@system-top.dtb/fdt@system-top.dtb描述符链接到image文件中\n<div align=\"center\">\n\n![bd](picture/pic1.svg)\n\n</div>\n\n## 驱动模块设计\n\n### ecpri/cpri网卡加载\n\n- das设备加载cpri网卡，对时钟没有额外要求，故不受影响，可正常进行加载\n- oran设备加载ecpri网卡时，由于该网卡需要n850晶振输出时钟作为clk，因此，加载该网卡时需要配置850晶振\n- 目前m2的设计是850晶振通过FPGA连线到ARM侧，因此需要提前加载FPGA，然后控制850时钟，最后加载ecpri网卡\n\n此时有个疑问，没有加载FPGA的话，xilinx_axienet驱动能否正常加载PHY驱动，因为此时mdio是找不到PHY的(由FPGA模拟产生)\n```mermaid\ngraph LR\n    A(axienet_open) --> B(axienet_device_reset) -.-> K(重置xilinx_axienet mac)\n    A --> C(of_phy_connect) \n    C --> D(phy_connect_direct) -->E(phy_init_hw)\n    D --> X(phy_start_machine) -.-> 开启phy状态机\n    C --> T(of_phy_find_device) -->bus_find_device-.->找到PHY设备\n    E --> F(phy_device_reset)\n    E --> G(soft_reset)\n    E --> H(phy_scan_fixups)\n```\n通过上述梳理源码可知，xilinx_axienet的Mac驱动初始化只针对Mac层操作，虚拟phy并不需要对应的驱动，包含在axienet_open操作中\n\n**DAS设备加载cpri网卡加载顺序为：**\n\n```mermaid\ngraph LR\n    A(kernel) --> |加载|B(FPGA.bit) \n    B --> |启用网卡| D(ifconfig eth0 up)-.->E(使用网卡)\n```\n**或者**\n```mermaid\ngraph LR\n    A(kernel) --> |启用网卡| D(ifconfig eth0 up) --> |加载|B(FPGA.bit) -.->E(使用网卡)\n```\n**ORAN设备加载ecpri网卡加载顺序为：**\n```mermaid\ngraph LR\n    A(kernel) --> |加载|B(FPGA.bit) \n    B --> |配置| C(n850时钟)\n    C --> |启用网卡| D(ifconfig eth0 up)\n```\n### ptp驱动加载\n\n**由于只有oran设备才有ptp驱动，故需要在驱动和设备树中进行修改**\n- 在oran平台的设备树中添加关于ptp的节点描述sunwave,timer-1588-2.0\n- 将sunwave_ptp_timer驱动移植到内核中进行加载，加载的描述符由设备树进行指定\n- ptp驱动针对FPGA的timer模块进行相应的功能控制和中断注册\n\n\n## 设备分区划分\n\n<div align=\"center\">\n\n![bd](picture/pic_partition.svg)\n\n</div>\n\n## 升级模块设计\n\n#### <font color=\"black\">向前升级兼容</font>\n\n##### 需求描述\n\n- 在外的oran设备，有些客户需要对以前的大包进行升级，因为该以前版本大包是其仔细验证过的版本，是可靠的，只认准该版本进行升级，所以m2ru项目需要向前升级进行兼容。\n- 升级过程中，设备应用层数据确保不能丢失。\n\n##### 存在问题\n\n- 以前oran版本大包是自带底层升级包的，该底层版本是没有备份系统的，分区划分也不一致，执行旧的大包中的升级底层脚本会导致设备挂掉。\n- 设备应用层的数据是不能丢失的，一旦分区改变，该ubi文件系统被破坏掉，arm等配置文件均会丢失\n\n##### 解决方案\n\n- kernel分区和rootfs分区的flash相对偏移offset均保持不变，详情见下图分区划分对比。这样可以做到升级过程中不破坏rootfs及rootfs_bak分区，完好保留上层数据。\n- boot分区(boot0)分配32M内存，用以保留升级以前boot文件的能力，还能保证当初底层默认bit文件(以前的oran设备是使用底层bit文件的，并不另行加载)\n\n\n<div align=\"center\">\n\n![bd](picture/pic_compare_partition.svg)\n\n</div>\n\n##### 结果验证\n\n- 由于目前在线升级系统，均是使用mtd进行升级，因此按照之前升级脚本逻辑，会对mtd0/mtd2进行擦写操作。\n- 对于新底层而言，擦写以前的boot是可以执行成功的(mtd0空间足够)，但mtd2由于分区改变只有2M，因此读写操作失败，退出升级流程。\n- 结果而言，设备重启后，设备的boot换成了旧大包中的boot，boot_bak1/boot_bak3仍为升级前boot备份，boot_bak2被擦掉。kernel保留升级前内核。\n- 设备可以正常运行，应用层数据完好无损，已通过测试验证。\n\n##### 升级风险\n\n- 以前存在某个版本的大包里的升级脚本，有个升级逻辑是，只要读写flash不一致，就会无限次数进行升级操作，断电重启后仍然会继续无线升级。该大包会导致设备陷入无限重启中，设备无法正常运行。\n- 由于需要向前兼容，所以，该版本是没有对boot进行备份的，仅有boot_bak1/3的新底层boot备份，可能会有坏块等未知风险存在，建议升级使用最新的底层包。\n\n#### <font color=\"black\">向后升级兼容</font>\n\n- 向后进行兼容升级，由于分区一致，故可以直接使用升级脚本进行升级操作即可。\n- 目前经过测试，该升级功能一切正常，未出现升级失败情况。\n\n#### <font color=\"black\">das/oran互相升级</font>\n\n##### 需求描述\n\n- 产线生产过程中，先是生产处das版本，然后通过在线升级成oran版本进行测试的\n- 外面的das设备也是有需求转换成oran设备的\n- 某些特点情况下，oran设备需要保留转换成das设备的能力\n\n##### 实现方案\n\n**<font size = \"3\" color = \"purple\">DAS设备转换成ORAN设备：</font>**\n\n- 擦除env分区，或者擦除das_platform环境变量\n- 升级大包中包含kernel_load_fpga.sh脚本进行替换，默认使用initramfs文件系统中的bit文件进行加载，若/dryfly/app/FPGA.bit存在即加载最新的bit文件\n- 使用n850时钟配置工具配置ORAN时钟\n- 再启用ecpri网卡进行使用\n\n**<font size = \"3\" color = \"purple\">ORAN设备转换成DAS设备：</font>**\n\n- 烧写env分区，或者修改das_platform环境变量\n- 升级大包中将/drgfly/etc/kernel_load_fpga.sh脚本使用/etc/kernel_load_fpga.sh底层默认脚本进行替换\n\n**<font size = \"3\" color = \"purple\">产线裸板升级成DAS设备：</font>**\n\n- 产线自动烧写脚本中增加一行命令\"setenv das_platform das@system-top.dtb\" \"seveenv\"命令即可底层进行切换\n\n**<font size = \"3\" color = \"purple\">注意事项：</font>**\n\n- 理论上不支持ORAN设备切换成DAS设备，只是设计上保留该情况下设备的升级能力，实际测试也ok，但不建议。\n- 目前该设计底层不存在ORAN/DAS底层，需搭配相应的上层才能切换到相应的平台。\n\n# 接口设计\n\n## FPGA驱动接口设计\n\n**略**\n\n## GPIO驱动接口设计\n\n**略**\n\n## N850时钟驱动接口设计\n\n**略**\n\n## PTP状态/配置/驱动接口设计\n\n**略**\n\n\n# 评审结果须知\n\n## 底层方案评审结果\n\n以下是评审得出的新底层v4.0需要满足的要求，如下：\n\n1、Das和oran共用底层（v4.0）  \n2、Das应用层不需修改  \n3、Das不带boot备份底层可以升级新版本  \n4、Oran新旧版本互相升级版本，不会挂掉  \n5、Das带boot备份版本（>=v1.5）不能升级到v4.0版本  \n6、V4.0适用范围在制、库存、返修 \n\n## 结果评析\n\n- 产线目前das带boot版本(>=v1.5)是大改过底层分区的，与当前ORAN底层、以前ORAN底层、以前DAS底层均不兼容，无法通过在线升级进行更新。\n- DAS带boot备份版本(>=v1.5),无法与现网中ORAN设备进行兼容，当前似乎也没有ORAN版本与之搭配使用。\n- 该新方案仅需满足在制、库存、返修设备的适用范围，不需要兼容当前产线最新das设备，似乎也没法进行兼容。","source":"_posts/kddi_mu底层版本详细设计.md","raw":"---\ntitle: KDDI_MU底层详细设计\ndate: 2023-02-20\ntags:\n- Linux\n---\n\n<div align=\"center\">\n<font size=9 > KDDI_MU底层详细设计\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n|版本|简介|编辑日期|作者|\n|---|:---|----|----|\n|V0.1|初稿|2023-2-20|January|\n\n</div>\n\n<div STYLE=\"page-break-after: always;\"></div>\n\n<div align=\"center\">\n<font size=7 > \n目录\n</font>\n</div>\n\n[toc]\n\n\n<div STYLE=\"page-break-after: always;\"></div>\n#综述\n\n#  1. 概述 \n\n## 详细设计背景\n- <font color=\"black\">m2ru-oran底层只有一个boot备份，一旦启动坏掉，设备即刻成砖，急需提高设备容错率</font>\n- <font color=\"black\">目前产线生产流程中，ORAN设备需要在DAS设备基础上进行烧写底层，才能转换成ORAN设备，增加了产线负担</font>\n- <font color=\"black\">外场das设备升级成oran设备过程中，往往伴随着升级风险</font>\n\n## 详细设计目的\n\n- boot启动分区增加至4个，大大减小设备启动失败的风险\n- 减少产线在线升级oran底层带来的额外操作及风险\n- 合并das/oran底层版本，减少底层后期维护成本\n\n---\n\n# 2. 模块设计\n\n## UBOOT模块设计\n\n### uboot启动逻辑设计\n- 在uboot加载内核kernel时，通过解析kernel头部信息获取内核加载地址、设备树等信息\n- 通过获取到的fit_uname_config到kernel头部轮询到设备树节点(按字符串为key值)，再将其加载到内存中\n- uboot将设备树dtb的地址传给kernel，然后进行加载内核，控制权移交给内核即可\n\n### 设备识别das/oran\n\n- 设备采用环境变量的方式进行das/oran机型识别\n- 该环境变量名称为das_platform\n- 当设备处于默认情况下，das_platform环境变量为空，该设备为oran设备\n- 当setenv das_platform das@system-top.dtb时，设备转变成das设备\n\n```mermaid\ngraph LR\n    A[fsbl] --> B(uboot) \n    B --> C{platform}\n    C -->|platform = das| D(das_dtb)\n    C -->|platform = NULL| E(oran_dtb)\n    E -->|加载| G[kernel]\n    D --> |加载| G\n```\n\n## 设备树模块设计\n\n- 由于m2ru平台的das和oran的FPGA完全不同，无法做到兼容，故需要设备自己知道是oran还是das设备，以按照不同的FPGA版本加载对应的设备树，进而加载不同的设备驱动\n- m2ru设备按照das和oran的FPGA的xsa文件进行分开编译各自平台设备树\n- 根据oran/das项目需求，自行添加完善设备树\n\n## 内核模块设计\n\n- das/oran共用驱动，如flash驱动、eth0驱动等不用特殊进行处理\n- ptp驱动、ecpri/cpri网卡驱动等务必使用设备树配置进行加载\n- DTB文件按照das_fdt@system-top.dtb/fdt@system-top.dtb描述符链接到image文件中\n<div align=\"center\">\n\n![bd](picture/pic1.svg)\n\n</div>\n\n## 驱动模块设计\n\n### ecpri/cpri网卡加载\n\n- das设备加载cpri网卡，对时钟没有额外要求，故不受影响，可正常进行加载\n- oran设备加载ecpri网卡时，由于该网卡需要n850晶振输出时钟作为clk，因此，加载该网卡时需要配置850晶振\n- 目前m2的设计是850晶振通过FPGA连线到ARM侧，因此需要提前加载FPGA，然后控制850时钟，最后加载ecpri网卡\n\n此时有个疑问，没有加载FPGA的话，xilinx_axienet驱动能否正常加载PHY驱动，因为此时mdio是找不到PHY的(由FPGA模拟产生)\n```mermaid\ngraph LR\n    A(axienet_open) --> B(axienet_device_reset) -.-> K(重置xilinx_axienet mac)\n    A --> C(of_phy_connect) \n    C --> D(phy_connect_direct) -->E(phy_init_hw)\n    D --> X(phy_start_machine) -.-> 开启phy状态机\n    C --> T(of_phy_find_device) -->bus_find_device-.->找到PHY设备\n    E --> F(phy_device_reset)\n    E --> G(soft_reset)\n    E --> H(phy_scan_fixups)\n```\n通过上述梳理源码可知，xilinx_axienet的Mac驱动初始化只针对Mac层操作，虚拟phy并不需要对应的驱动，包含在axienet_open操作中\n\n**DAS设备加载cpri网卡加载顺序为：**\n\n```mermaid\ngraph LR\n    A(kernel) --> |加载|B(FPGA.bit) \n    B --> |启用网卡| D(ifconfig eth0 up)-.->E(使用网卡)\n```\n**或者**\n```mermaid\ngraph LR\n    A(kernel) --> |启用网卡| D(ifconfig eth0 up) --> |加载|B(FPGA.bit) -.->E(使用网卡)\n```\n**ORAN设备加载ecpri网卡加载顺序为：**\n```mermaid\ngraph LR\n    A(kernel) --> |加载|B(FPGA.bit) \n    B --> |配置| C(n850时钟)\n    C --> |启用网卡| D(ifconfig eth0 up)\n```\n### ptp驱动加载\n\n**由于只有oran设备才有ptp驱动，故需要在驱动和设备树中进行修改**\n- 在oran平台的设备树中添加关于ptp的节点描述sunwave,timer-1588-2.0\n- 将sunwave_ptp_timer驱动移植到内核中进行加载，加载的描述符由设备树进行指定\n- ptp驱动针对FPGA的timer模块进行相应的功能控制和中断注册\n\n\n## 设备分区划分\n\n<div align=\"center\">\n\n![bd](picture/pic_partition.svg)\n\n</div>\n\n## 升级模块设计\n\n#### <font color=\"black\">向前升级兼容</font>\n\n##### 需求描述\n\n- 在外的oran设备，有些客户需要对以前的大包进行升级，因为该以前版本大包是其仔细验证过的版本，是可靠的，只认准该版本进行升级，所以m2ru项目需要向前升级进行兼容。\n- 升级过程中，设备应用层数据确保不能丢失。\n\n##### 存在问题\n\n- 以前oran版本大包是自带底层升级包的，该底层版本是没有备份系统的，分区划分也不一致，执行旧的大包中的升级底层脚本会导致设备挂掉。\n- 设备应用层的数据是不能丢失的，一旦分区改变，该ubi文件系统被破坏掉，arm等配置文件均会丢失\n\n##### 解决方案\n\n- kernel分区和rootfs分区的flash相对偏移offset均保持不变，详情见下图分区划分对比。这样可以做到升级过程中不破坏rootfs及rootfs_bak分区，完好保留上层数据。\n- boot分区(boot0)分配32M内存，用以保留升级以前boot文件的能力，还能保证当初底层默认bit文件(以前的oran设备是使用底层bit文件的，并不另行加载)\n\n\n<div align=\"center\">\n\n![bd](picture/pic_compare_partition.svg)\n\n</div>\n\n##### 结果验证\n\n- 由于目前在线升级系统，均是使用mtd进行升级，因此按照之前升级脚本逻辑，会对mtd0/mtd2进行擦写操作。\n- 对于新底层而言，擦写以前的boot是可以执行成功的(mtd0空间足够)，但mtd2由于分区改变只有2M，因此读写操作失败，退出升级流程。\n- 结果而言，设备重启后，设备的boot换成了旧大包中的boot，boot_bak1/boot_bak3仍为升级前boot备份，boot_bak2被擦掉。kernel保留升级前内核。\n- 设备可以正常运行，应用层数据完好无损，已通过测试验证。\n\n##### 升级风险\n\n- 以前存在某个版本的大包里的升级脚本，有个升级逻辑是，只要读写flash不一致，就会无限次数进行升级操作，断电重启后仍然会继续无线升级。该大包会导致设备陷入无限重启中，设备无法正常运行。\n- 由于需要向前兼容，所以，该版本是没有对boot进行备份的，仅有boot_bak1/3的新底层boot备份，可能会有坏块等未知风险存在，建议升级使用最新的底层包。\n\n#### <font color=\"black\">向后升级兼容</font>\n\n- 向后进行兼容升级，由于分区一致，故可以直接使用升级脚本进行升级操作即可。\n- 目前经过测试，该升级功能一切正常，未出现升级失败情况。\n\n#### <font color=\"black\">das/oran互相升级</font>\n\n##### 需求描述\n\n- 产线生产过程中，先是生产处das版本，然后通过在线升级成oran版本进行测试的\n- 外面的das设备也是有需求转换成oran设备的\n- 某些特点情况下，oran设备需要保留转换成das设备的能力\n\n##### 实现方案\n\n**<font size = \"3\" color = \"purple\">DAS设备转换成ORAN设备：</font>**\n\n- 擦除env分区，或者擦除das_platform环境变量\n- 升级大包中包含kernel_load_fpga.sh脚本进行替换，默认使用initramfs文件系统中的bit文件进行加载，若/dryfly/app/FPGA.bit存在即加载最新的bit文件\n- 使用n850时钟配置工具配置ORAN时钟\n- 再启用ecpri网卡进行使用\n\n**<font size = \"3\" color = \"purple\">ORAN设备转换成DAS设备：</font>**\n\n- 烧写env分区，或者修改das_platform环境变量\n- 升级大包中将/drgfly/etc/kernel_load_fpga.sh脚本使用/etc/kernel_load_fpga.sh底层默认脚本进行替换\n\n**<font size = \"3\" color = \"purple\">产线裸板升级成DAS设备：</font>**\n\n- 产线自动烧写脚本中增加一行命令\"setenv das_platform das@system-top.dtb\" \"seveenv\"命令即可底层进行切换\n\n**<font size = \"3\" color = \"purple\">注意事项：</font>**\n\n- 理论上不支持ORAN设备切换成DAS设备，只是设计上保留该情况下设备的升级能力，实际测试也ok，但不建议。\n- 目前该设计底层不存在ORAN/DAS底层，需搭配相应的上层才能切换到相应的平台。\n\n# 接口设计\n\n## FPGA驱动接口设计\n\n**略**\n\n## GPIO驱动接口设计\n\n**略**\n\n## N850时钟驱动接口设计\n\n**略**\n\n## PTP状态/配置/驱动接口设计\n\n**略**\n\n\n# 评审结果须知\n\n## 底层方案评审结果\n\n以下是评审得出的新底层v4.0需要满足的要求，如下：\n\n1、Das和oran共用底层（v4.0）  \n2、Das应用层不需修改  \n3、Das不带boot备份底层可以升级新版本  \n4、Oran新旧版本互相升级版本，不会挂掉  \n5、Das带boot备份版本（>=v1.5）不能升级到v4.0版本  \n6、V4.0适用范围在制、库存、返修 \n\n## 结果评析\n\n- 产线目前das带boot版本(>=v1.5)是大改过底层分区的，与当前ORAN底层、以前ORAN底层、以前DAS底层均不兼容，无法通过在线升级进行更新。\n- DAS带boot备份版本(>=v1.5),无法与现网中ORAN设备进行兼容，当前似乎也没有ORAN版本与之搭配使用。\n- 该新方案仅需满足在制、库存、返修设备的适用范围，不需要兼容当前产线最新das设备，似乎也没法进行兼容。","slug":"kddi_mu底层版本详细设计","published":1,"updated":"2023-08-30T06:38:25.398Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllxdkidr00038sm4asyiar5r","content":"<div align=\"center\">\n<font size=9 > KDDI_MU底层详细设计\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n<table>\n<thead>\n<tr>\n<th>版本</th>\n<th align=\"left\">简介</th>\n<th>编辑日期</th>\n<th>作者</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>V0.1</td>\n<td align=\"left\">初稿</td>\n<td>2023-2-20</td>\n<td>January</td>\n</tr>\n</tbody></table>\n</div>\n\n<div STYLE=\"page-break-after: always;\"></div>\n\n<div align=\"center\">\n<font size=7 > \n目录\n</font>\n</div>\n\n<p>[toc]</p>\n<div STYLE=\"page-break-after: always;\"></div>\n#综述\n\n<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h1><h2 id=\"详细设计背景\"><a href=\"#详细设计背景\" class=\"headerlink\" title=\"详细设计背景\"></a>详细设计背景</h2><ul>\n<li><font color=\"black\">m2ru-oran底层只有一个boot备份，一旦启动坏掉，设备即刻成砖，急需提高设备容错率</font></li>\n<li><font color=\"black\">目前产线生产流程中，ORAN设备需要在DAS设备基础上进行烧写底层，才能转换成ORAN设备，增加了产线负担</font></li>\n<li><font color=\"black\">外场das设备升级成oran设备过程中，往往伴随着升级风险</font></li>\n</ul>\n<h2 id=\"详细设计目的\"><a href=\"#详细设计目的\" class=\"headerlink\" title=\"详细设计目的\"></a>详细设计目的</h2><ul>\n<li>boot启动分区增加至4个，大大减小设备启动失败的风险</li>\n<li>减少产线在线升级oran底层带来的额外操作及风险</li>\n<li>合并das&#x2F;oran底层版本，减少底层后期维护成本</li>\n</ul>\n<hr>\n<h1 id=\"2-模块设计\"><a href=\"#2-模块设计\" class=\"headerlink\" title=\"2. 模块设计\"></a>2. 模块设计</h1><h2 id=\"UBOOT模块设计\"><a href=\"#UBOOT模块设计\" class=\"headerlink\" title=\"UBOOT模块设计\"></a>UBOOT模块设计</h2><h3 id=\"uboot启动逻辑设计\"><a href=\"#uboot启动逻辑设计\" class=\"headerlink\" title=\"uboot启动逻辑设计\"></a>uboot启动逻辑设计</h3><ul>\n<li>在uboot加载内核kernel时，通过解析kernel头部信息获取内核加载地址、设备树等信息</li>\n<li>通过获取到的fit_uname_config到kernel头部轮询到设备树节点(按字符串为key值)，再将其加载到内存中</li>\n<li>uboot将设备树dtb的地址传给kernel，然后进行加载内核，控制权移交给内核即可</li>\n</ul>\n<h3 id=\"设备识别das-oran\"><a href=\"#设备识别das-oran\" class=\"headerlink\" title=\"设备识别das&#x2F;oran\"></a>设备识别das&#x2F;oran</h3><ul>\n<li>设备采用环境变量的方式进行das&#x2F;oran机型识别</li>\n<li>该环境变量名称为das_platform</li>\n<li>当设备处于默认情况下，das_platform环境变量为空，该设备为oran设备</li>\n<li>当setenv das_platform <a href=\"mailto:&#x64;&#97;&#x73;&#x40;&#115;&#121;&#115;&#x74;&#101;&#x6d;&#45;&#116;&#x6f;&#x70;&#x2e;&#100;&#x74;&#98;\">&#x64;&#97;&#x73;&#x40;&#115;&#121;&#115;&#x74;&#101;&#x6d;&#45;&#116;&#x6f;&#x70;&#x2e;&#100;&#x74;&#98;</a>时，设备转变成das设备</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A[fsbl] --&gt; B(uboot) </span><br><span class=\"line\">    B --&gt; C&#123;platform&#125;</span><br><span class=\"line\">    C --&gt;|platform = das| D(das_dtb)</span><br><span class=\"line\">    C --&gt;|platform = NULL| E(oran_dtb)</span><br><span class=\"line\">    E --&gt;|加载| G[kernel]</span><br><span class=\"line\">    D --&gt; |加载| G</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设备树模块设计\"><a href=\"#设备树模块设计\" class=\"headerlink\" title=\"设备树模块设计\"></a>设备树模块设计</h2><ul>\n<li>由于m2ru平台的das和oran的FPGA完全不同，无法做到兼容，故需要设备自己知道是oran还是das设备，以按照不同的FPGA版本加载对应的设备树，进而加载不同的设备驱动</li>\n<li>m2ru设备按照das和oran的FPGA的xsa文件进行分开编译各自平台设备树</li>\n<li>根据oran&#x2F;das项目需求，自行添加完善设备树</li>\n</ul>\n<h2 id=\"内核模块设计\"><a href=\"#内核模块设计\" class=\"headerlink\" title=\"内核模块设计\"></a>内核模块设计</h2><ul>\n<li>das&#x2F;oran共用驱动，如flash驱动、eth0驱动等不用特殊进行处理</li>\n<li>ptp驱动、ecpri&#x2F;cpri网卡驱动等务必使用设备树配置进行加载</li>\n<li>DTB文件按照<a href=\"mailto:&#100;&#97;&#x73;&#95;&#x66;&#100;&#x74;&#64;&#115;&#121;&#x73;&#116;&#101;&#109;&#x2d;&#x74;&#111;&#112;&#x2e;&#100;&#116;&#98;\">&#100;&#97;&#x73;&#95;&#x66;&#100;&#x74;&#64;&#115;&#121;&#x73;&#116;&#101;&#109;&#x2d;&#x74;&#111;&#112;&#x2e;&#100;&#116;&#98;</a>&#x2F;<a href=\"mailto:&#102;&#100;&#116;&#x40;&#115;&#121;&#x73;&#x74;&#x65;&#109;&#x2d;&#116;&#111;&#x70;&#46;&#x64;&#x74;&#x62;\">&#102;&#100;&#116;&#x40;&#115;&#121;&#x73;&#x74;&#x65;&#109;&#x2d;&#116;&#111;&#x70;&#46;&#x64;&#x74;&#x62;</a>描述符链接到image文件中<div align=\"center\"></li>\n</ul>\n<p><img src=\"/picture/pic1.svg\" alt=\"bd\"></p>\n</div>\n\n<h2 id=\"驱动模块设计\"><a href=\"#驱动模块设计\" class=\"headerlink\" title=\"驱动模块设计\"></a>驱动模块设计</h2><h3 id=\"ecpri-cpri网卡加载\"><a href=\"#ecpri-cpri网卡加载\" class=\"headerlink\" title=\"ecpri&#x2F;cpri网卡加载\"></a>ecpri&#x2F;cpri网卡加载</h3><ul>\n<li>das设备加载cpri网卡，对时钟没有额外要求，故不受影响，可正常进行加载</li>\n<li>oran设备加载ecpri网卡时，由于该网卡需要n850晶振输出时钟作为clk，因此，加载该网卡时需要配置850晶振</li>\n<li>目前m2的设计是850晶振通过FPGA连线到ARM侧，因此需要提前加载FPGA，然后控制850时钟，最后加载ecpri网卡</li>\n</ul>\n<p>此时有个疑问，没有加载FPGA的话，xilinx_axienet驱动能否正常加载PHY驱动，因为此时mdio是找不到PHY的(由FPGA模拟产生)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(axienet_open) --&gt; B(axienet_device_reset) -.-&gt; K(重置xilinx_axienet mac)</span><br><span class=\"line\">    A --&gt; C(of_phy_connect) </span><br><span class=\"line\">    C --&gt; D(phy_connect_direct) --&gt;E(phy_init_hw)</span><br><span class=\"line\">    D --&gt; X(phy_start_machine) -.-&gt; 开启phy状态机</span><br><span class=\"line\">    C --&gt; T(of_phy_find_device) --&gt;bus_find_device-.-&gt;找到PHY设备</span><br><span class=\"line\">    E --&gt; F(phy_device_reset)</span><br><span class=\"line\">    E --&gt; G(soft_reset)</span><br><span class=\"line\">    E --&gt; H(phy_scan_fixups)</span><br></pre></td></tr></table></figure>\n<p>通过上述梳理源码可知，xilinx_axienet的Mac驱动初始化只针对Mac层操作，虚拟phy并不需要对应的驱动，包含在axienet_open操作中</p>\n<p><strong>DAS设备加载cpri网卡加载顺序为：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(kernel) --&gt; |加载|B(FPGA.bit) </span><br><span class=\"line\">    B --&gt; |启用网卡| D(ifconfig eth0 up)-.-&gt;E(使用网卡)</span><br></pre></td></tr></table></figure>\n<p><strong>或者</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(kernel) --&gt; |启用网卡| D(ifconfig eth0 up) --&gt; |加载|B(FPGA.bit) -.-&gt;E(使用网卡)</span><br></pre></td></tr></table></figure>\n<p><strong>ORAN设备加载ecpri网卡加载顺序为：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(kernel) --&gt; |加载|B(FPGA.bit) </span><br><span class=\"line\">    B --&gt; |配置| C(n850时钟)</span><br><span class=\"line\">    C --&gt; |启用网卡| D(ifconfig eth0 up)</span><br></pre></td></tr></table></figure>\n<h3 id=\"ptp驱动加载\"><a href=\"#ptp驱动加载\" class=\"headerlink\" title=\"ptp驱动加载\"></a>ptp驱动加载</h3><p><strong>由于只有oran设备才有ptp驱动，故需要在驱动和设备树中进行修改</strong></p>\n<ul>\n<li>在oran平台的设备树中添加关于ptp的节点描述sunwave,timer-1588-2.0</li>\n<li>将sunwave_ptp_timer驱动移植到内核中进行加载，加载的描述符由设备树进行指定</li>\n<li>ptp驱动针对FPGA的timer模块进行相应的功能控制和中断注册</li>\n</ul>\n<h2 id=\"设备分区划分\"><a href=\"#设备分区划分\" class=\"headerlink\" title=\"设备分区划分\"></a>设备分区划分</h2><div align=\"center\">\n\n<p><img src=\"/picture/pic_partition.svg\" alt=\"bd\"></p>\n</div>\n\n<h2 id=\"升级模块设计\"><a href=\"#升级模块设计\" class=\"headerlink\" title=\"升级模块设计\"></a>升级模块设计</h2><h4 id=\"向前升级兼容\"><a href=\"#向前升级兼容\" class=\"headerlink\" title=\"向前升级兼容\"></a><font color=\"black\">向前升级兼容</font></h4><h5 id=\"需求描述\"><a href=\"#需求描述\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h5><ul>\n<li>在外的oran设备，有些客户需要对以前的大包进行升级，因为该以前版本大包是其仔细验证过的版本，是可靠的，只认准该版本进行升级，所以m2ru项目需要向前升级进行兼容。</li>\n<li>升级过程中，设备应用层数据确保不能丢失。</li>\n</ul>\n<h5 id=\"存在问题\"><a href=\"#存在问题\" class=\"headerlink\" title=\"存在问题\"></a>存在问题</h5><ul>\n<li>以前oran版本大包是自带底层升级包的，该底层版本是没有备份系统的，分区划分也不一致，执行旧的大包中的升级底层脚本会导致设备挂掉。</li>\n<li>设备应用层的数据是不能丢失的，一旦分区改变，该ubi文件系统被破坏掉，arm等配置文件均会丢失</li>\n</ul>\n<h5 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h5><ul>\n<li>kernel分区和rootfs分区的flash相对偏移offset均保持不变，详情见下图分区划分对比。这样可以做到升级过程中不破坏rootfs及rootfs_bak分区，完好保留上层数据。</li>\n<li>boot分区(boot0)分配32M内存，用以保留升级以前boot文件的能力，还能保证当初底层默认bit文件(以前的oran设备是使用底层bit文件的，并不另行加载)</li>\n</ul>\n<div align=\"center\">\n\n<p><img src=\"/picture/pic_compare_partition.svg\" alt=\"bd\"></p>\n</div>\n\n<h5 id=\"结果验证\"><a href=\"#结果验证\" class=\"headerlink\" title=\"结果验证\"></a>结果验证</h5><ul>\n<li>由于目前在线升级系统，均是使用mtd进行升级，因此按照之前升级脚本逻辑，会对mtd0&#x2F;mtd2进行擦写操作。</li>\n<li>对于新底层而言，擦写以前的boot是可以执行成功的(mtd0空间足够)，但mtd2由于分区改变只有2M，因此读写操作失败，退出升级流程。</li>\n<li>结果而言，设备重启后，设备的boot换成了旧大包中的boot，boot_bak1&#x2F;boot_bak3仍为升级前boot备份，boot_bak2被擦掉。kernel保留升级前内核。</li>\n<li>设备可以正常运行，应用层数据完好无损，已通过测试验证。</li>\n</ul>\n<h5 id=\"升级风险\"><a href=\"#升级风险\" class=\"headerlink\" title=\"升级风险\"></a>升级风险</h5><ul>\n<li>以前存在某个版本的大包里的升级脚本，有个升级逻辑是，只要读写flash不一致，就会无限次数进行升级操作，断电重启后仍然会继续无线升级。该大包会导致设备陷入无限重启中，设备无法正常运行。</li>\n<li>由于需要向前兼容，所以，该版本是没有对boot进行备份的，仅有boot_bak1&#x2F;3的新底层boot备份，可能会有坏块等未知风险存在，建议升级使用最新的底层包。</li>\n</ul>\n<h4 id=\"向后升级兼容\"><a href=\"#向后升级兼容\" class=\"headerlink\" title=\"向后升级兼容\"></a><font color=\"black\">向后升级兼容</font></h4><ul>\n<li>向后进行兼容升级，由于分区一致，故可以直接使用升级脚本进行升级操作即可。</li>\n<li>目前经过测试，该升级功能一切正常，未出现升级失败情况。</li>\n</ul>\n<h4 id=\"das-oran互相升级\"><a href=\"#das-oran互相升级\" class=\"headerlink\" title=\"das&#x2F;oran互相升级\"></a><font color=\"black\">das&#x2F;oran互相升级</font></h4><h5 id=\"需求描述-1\"><a href=\"#需求描述-1\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h5><ul>\n<li>产线生产过程中，先是生产处das版本，然后通过在线升级成oran版本进行测试的</li>\n<li>外面的das设备也是有需求转换成oran设备的</li>\n<li>某些特点情况下，oran设备需要保留转换成das设备的能力</li>\n</ul>\n<h5 id=\"实现方案\"><a href=\"#实现方案\" class=\"headerlink\" title=\"实现方案\"></a>实现方案</h5><p><strong><font size = \"3\" color = \"purple\">DAS设备转换成ORAN设备：</font></strong></p>\n<ul>\n<li>擦除env分区，或者擦除das_platform环境变量</li>\n<li>升级大包中包含kernel_load_fpga.sh脚本进行替换，默认使用initramfs文件系统中的bit文件进行加载，若&#x2F;dryfly&#x2F;app&#x2F;FPGA.bit存在即加载最新的bit文件</li>\n<li>使用n850时钟配置工具配置ORAN时钟</li>\n<li>再启用ecpri网卡进行使用</li>\n</ul>\n<p><strong><font size = \"3\" color = \"purple\">ORAN设备转换成DAS设备：</font></strong></p>\n<ul>\n<li>烧写env分区，或者修改das_platform环境变量</li>\n<li>升级大包中将&#x2F;drgfly&#x2F;etc&#x2F;kernel_load_fpga.sh脚本使用&#x2F;etc&#x2F;kernel_load_fpga.sh底层默认脚本进行替换</li>\n</ul>\n<p><strong><font size = \"3\" color = \"purple\">产线裸板升级成DAS设备：</font></strong></p>\n<ul>\n<li>产线自动烧写脚本中增加一行命令”setenv das_platform <a href=\"mailto:&#100;&#x61;&#x73;&#64;&#115;&#x79;&#x73;&#116;&#101;&#x6d;&#45;&#x74;&#x6f;&#112;&#x2e;&#x64;&#116;&#x62;\">&#100;&#x61;&#x73;&#64;&#115;&#x79;&#x73;&#116;&#101;&#x6d;&#45;&#x74;&#x6f;&#112;&#x2e;&#x64;&#116;&#x62;</a>“ “seveenv”命令即可底层进行切换</li>\n</ul>\n<p><strong><font size = \"3\" color = \"purple\">注意事项：</font></strong></p>\n<ul>\n<li>理论上不支持ORAN设备切换成DAS设备，只是设计上保留该情况下设备的升级能力，实际测试也ok，但不建议。</li>\n<li>目前该设计底层不存在ORAN&#x2F;DAS底层，需搭配相应的上层才能切换到相应的平台。</li>\n</ul>\n<h1 id=\"接口设计\"><a href=\"#接口设计\" class=\"headerlink\" title=\"接口设计\"></a>接口设计</h1><h2 id=\"FPGA驱动接口设计\"><a href=\"#FPGA驱动接口设计\" class=\"headerlink\" title=\"FPGA驱动接口设计\"></a>FPGA驱动接口设计</h2><p><strong>略</strong></p>\n<h2 id=\"GPIO驱动接口设计\"><a href=\"#GPIO驱动接口设计\" class=\"headerlink\" title=\"GPIO驱动接口设计\"></a>GPIO驱动接口设计</h2><p><strong>略</strong></p>\n<h2 id=\"N850时钟驱动接口设计\"><a href=\"#N850时钟驱动接口设计\" class=\"headerlink\" title=\"N850时钟驱动接口设计\"></a>N850时钟驱动接口设计</h2><p><strong>略</strong></p>\n<h2 id=\"PTP状态-配置-驱动接口设计\"><a href=\"#PTP状态-配置-驱动接口设计\" class=\"headerlink\" title=\"PTP状态&#x2F;配置&#x2F;驱动接口设计\"></a>PTP状态&#x2F;配置&#x2F;驱动接口设计</h2><p><strong>略</strong></p>\n<h1 id=\"评审结果须知\"><a href=\"#评审结果须知\" class=\"headerlink\" title=\"评审结果须知\"></a>评审结果须知</h1><h2 id=\"底层方案评审结果\"><a href=\"#底层方案评审结果\" class=\"headerlink\" title=\"底层方案评审结果\"></a>底层方案评审结果</h2><p>以下是评审得出的新底层v4.0需要满足的要求，如下：</p>\n<p>1、Das和oran共用底层（v4.0）<br>2、Das应用层不需修改<br>3、Das不带boot备份底层可以升级新版本<br>4、Oran新旧版本互相升级版本，不会挂掉<br>5、Das带boot备份版本（&gt;&#x3D;v1.5）不能升级到v4.0版本<br>6、V4.0适用范围在制、库存、返修 </p>\n<h2 id=\"结果评析\"><a href=\"#结果评析\" class=\"headerlink\" title=\"结果评析\"></a>结果评析</h2><ul>\n<li>产线目前das带boot版本(&gt;&#x3D;v1.5)是大改过底层分区的，与当前ORAN底层、以前ORAN底层、以前DAS底层均不兼容，无法通过在线升级进行更新。</li>\n<li>DAS带boot备份版本(&gt;&#x3D;v1.5),无法与现网中ORAN设备进行兼容，当前似乎也没有ORAN版本与之搭配使用。</li>\n<li>该新方案仅需满足在制、库存、返修设备的适用范围，不需要兼容当前产线最新das设备，似乎也没法进行兼容。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<div align=\"center\">\n<font size=9 > KDDI_MU底层详细设计\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n<table>\n<thead>\n<tr>\n<th>版本</th>\n<th align=\"left\">简介</th>\n<th>编辑日期</th>\n<th>作者</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>V0.1</td>\n<td align=\"left\">初稿</td>\n<td>2023-2-20</td>\n<td>January</td>\n</tr>\n</tbody></table>\n</div>\n\n<div STYLE=\"page-break-after: always;\"></div>\n\n<div align=\"center\">\n<font size=7 > \n目录\n</font>\n</div>\n\n<p>[toc]</p>\n<div STYLE=\"page-break-after: always;\"></div>\n#综述\n\n<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h1><h2 id=\"详细设计背景\"><a href=\"#详细设计背景\" class=\"headerlink\" title=\"详细设计背景\"></a>详细设计背景</h2><ul>\n<li><font color=\"black\">m2ru-oran底层只有一个boot备份，一旦启动坏掉，设备即刻成砖，急需提高设备容错率</font></li>\n<li><font color=\"black\">目前产线生产流程中，ORAN设备需要在DAS设备基础上进行烧写底层，才能转换成ORAN设备，增加了产线负担</font></li>\n<li><font color=\"black\">外场das设备升级成oran设备过程中，往往伴随着升级风险</font></li>\n</ul>\n<h2 id=\"详细设计目的\"><a href=\"#详细设计目的\" class=\"headerlink\" title=\"详细设计目的\"></a>详细设计目的</h2><ul>\n<li>boot启动分区增加至4个，大大减小设备启动失败的风险</li>\n<li>减少产线在线升级oran底层带来的额外操作及风险</li>\n<li>合并das&#x2F;oran底层版本，减少底层后期维护成本</li>\n</ul>\n<hr>\n<h1 id=\"2-模块设计\"><a href=\"#2-模块设计\" class=\"headerlink\" title=\"2. 模块设计\"></a>2. 模块设计</h1><h2 id=\"UBOOT模块设计\"><a href=\"#UBOOT模块设计\" class=\"headerlink\" title=\"UBOOT模块设计\"></a>UBOOT模块设计</h2><h3 id=\"uboot启动逻辑设计\"><a href=\"#uboot启动逻辑设计\" class=\"headerlink\" title=\"uboot启动逻辑设计\"></a>uboot启动逻辑设计</h3><ul>\n<li>在uboot加载内核kernel时，通过解析kernel头部信息获取内核加载地址、设备树等信息</li>\n<li>通过获取到的fit_uname_config到kernel头部轮询到设备树节点(按字符串为key值)，再将其加载到内存中</li>\n<li>uboot将设备树dtb的地址传给kernel，然后进行加载内核，控制权移交给内核即可</li>\n</ul>\n<h3 id=\"设备识别das-oran\"><a href=\"#设备识别das-oran\" class=\"headerlink\" title=\"设备识别das&#x2F;oran\"></a>设备识别das&#x2F;oran</h3><ul>\n<li>设备采用环境变量的方式进行das&#x2F;oran机型识别</li>\n<li>该环境变量名称为das_platform</li>\n<li>当设备处于默认情况下，das_platform环境变量为空，该设备为oran设备</li>\n<li>当setenv das_platform <a href=\"mailto:&#x64;&#97;&#x73;&#x40;&#115;&#121;&#115;&#x74;&#101;&#x6d;&#45;&#116;&#x6f;&#x70;&#x2e;&#100;&#x74;&#98;\">&#x64;&#97;&#x73;&#x40;&#115;&#121;&#115;&#x74;&#101;&#x6d;&#45;&#116;&#x6f;&#x70;&#x2e;&#100;&#x74;&#98;</a>时，设备转变成das设备</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A[fsbl] --&gt; B(uboot) </span><br><span class=\"line\">    B --&gt; C&#123;platform&#125;</span><br><span class=\"line\">    C --&gt;|platform = das| D(das_dtb)</span><br><span class=\"line\">    C --&gt;|platform = NULL| E(oran_dtb)</span><br><span class=\"line\">    E --&gt;|加载| G[kernel]</span><br><span class=\"line\">    D --&gt; |加载| G</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设备树模块设计\"><a href=\"#设备树模块设计\" class=\"headerlink\" title=\"设备树模块设计\"></a>设备树模块设计</h2><ul>\n<li>由于m2ru平台的das和oran的FPGA完全不同，无法做到兼容，故需要设备自己知道是oran还是das设备，以按照不同的FPGA版本加载对应的设备树，进而加载不同的设备驱动</li>\n<li>m2ru设备按照das和oran的FPGA的xsa文件进行分开编译各自平台设备树</li>\n<li>根据oran&#x2F;das项目需求，自行添加完善设备树</li>\n</ul>\n<h2 id=\"内核模块设计\"><a href=\"#内核模块设计\" class=\"headerlink\" title=\"内核模块设计\"></a>内核模块设计</h2><ul>\n<li>das&#x2F;oran共用驱动，如flash驱动、eth0驱动等不用特殊进行处理</li>\n<li>ptp驱动、ecpri&#x2F;cpri网卡驱动等务必使用设备树配置进行加载</li>\n<li>DTB文件按照<a href=\"mailto:&#100;&#97;&#x73;&#95;&#x66;&#100;&#x74;&#64;&#115;&#121;&#x73;&#116;&#101;&#109;&#x2d;&#x74;&#111;&#112;&#x2e;&#100;&#116;&#98;\">&#100;&#97;&#x73;&#95;&#x66;&#100;&#x74;&#64;&#115;&#121;&#x73;&#116;&#101;&#109;&#x2d;&#x74;&#111;&#112;&#x2e;&#100;&#116;&#98;</a>&#x2F;<a href=\"mailto:&#102;&#100;&#116;&#x40;&#115;&#121;&#x73;&#x74;&#x65;&#109;&#x2d;&#116;&#111;&#x70;&#46;&#x64;&#x74;&#x62;\">&#102;&#100;&#116;&#x40;&#115;&#121;&#x73;&#x74;&#x65;&#109;&#x2d;&#116;&#111;&#x70;&#46;&#x64;&#x74;&#x62;</a>描述符链接到image文件中<div align=\"center\"></li>\n</ul>\n<p><img src=\"/picture/pic1.svg\" alt=\"bd\"></p>\n</div>\n\n<h2 id=\"驱动模块设计\"><a href=\"#驱动模块设计\" class=\"headerlink\" title=\"驱动模块设计\"></a>驱动模块设计</h2><h3 id=\"ecpri-cpri网卡加载\"><a href=\"#ecpri-cpri网卡加载\" class=\"headerlink\" title=\"ecpri&#x2F;cpri网卡加载\"></a>ecpri&#x2F;cpri网卡加载</h3><ul>\n<li>das设备加载cpri网卡，对时钟没有额外要求，故不受影响，可正常进行加载</li>\n<li>oran设备加载ecpri网卡时，由于该网卡需要n850晶振输出时钟作为clk，因此，加载该网卡时需要配置850晶振</li>\n<li>目前m2的设计是850晶振通过FPGA连线到ARM侧，因此需要提前加载FPGA，然后控制850时钟，最后加载ecpri网卡</li>\n</ul>\n<p>此时有个疑问，没有加载FPGA的话，xilinx_axienet驱动能否正常加载PHY驱动，因为此时mdio是找不到PHY的(由FPGA模拟产生)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(axienet_open) --&gt; B(axienet_device_reset) -.-&gt; K(重置xilinx_axienet mac)</span><br><span class=\"line\">    A --&gt; C(of_phy_connect) </span><br><span class=\"line\">    C --&gt; D(phy_connect_direct) --&gt;E(phy_init_hw)</span><br><span class=\"line\">    D --&gt; X(phy_start_machine) -.-&gt; 开启phy状态机</span><br><span class=\"line\">    C --&gt; T(of_phy_find_device) --&gt;bus_find_device-.-&gt;找到PHY设备</span><br><span class=\"line\">    E --&gt; F(phy_device_reset)</span><br><span class=\"line\">    E --&gt; G(soft_reset)</span><br><span class=\"line\">    E --&gt; H(phy_scan_fixups)</span><br></pre></td></tr></table></figure>\n<p>通过上述梳理源码可知，xilinx_axienet的Mac驱动初始化只针对Mac层操作，虚拟phy并不需要对应的驱动，包含在axienet_open操作中</p>\n<p><strong>DAS设备加载cpri网卡加载顺序为：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(kernel) --&gt; |加载|B(FPGA.bit) </span><br><span class=\"line\">    B --&gt; |启用网卡| D(ifconfig eth0 up)-.-&gt;E(使用网卡)</span><br></pre></td></tr></table></figure>\n<p><strong>或者</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(kernel) --&gt; |启用网卡| D(ifconfig eth0 up) --&gt; |加载|B(FPGA.bit) -.-&gt;E(使用网卡)</span><br></pre></td></tr></table></figure>\n<p><strong>ORAN设备加载ecpri网卡加载顺序为：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(kernel) --&gt; |加载|B(FPGA.bit) </span><br><span class=\"line\">    B --&gt; |配置| C(n850时钟)</span><br><span class=\"line\">    C --&gt; |启用网卡| D(ifconfig eth0 up)</span><br></pre></td></tr></table></figure>\n<h3 id=\"ptp驱动加载\"><a href=\"#ptp驱动加载\" class=\"headerlink\" title=\"ptp驱动加载\"></a>ptp驱动加载</h3><p><strong>由于只有oran设备才有ptp驱动，故需要在驱动和设备树中进行修改</strong></p>\n<ul>\n<li>在oran平台的设备树中添加关于ptp的节点描述sunwave,timer-1588-2.0</li>\n<li>将sunwave_ptp_timer驱动移植到内核中进行加载，加载的描述符由设备树进行指定</li>\n<li>ptp驱动针对FPGA的timer模块进行相应的功能控制和中断注册</li>\n</ul>\n<h2 id=\"设备分区划分\"><a href=\"#设备分区划分\" class=\"headerlink\" title=\"设备分区划分\"></a>设备分区划分</h2><div align=\"center\">\n\n<p><img src=\"/picture/pic_partition.svg\" alt=\"bd\"></p>\n</div>\n\n<h2 id=\"升级模块设计\"><a href=\"#升级模块设计\" class=\"headerlink\" title=\"升级模块设计\"></a>升级模块设计</h2><h4 id=\"向前升级兼容\"><a href=\"#向前升级兼容\" class=\"headerlink\" title=\"向前升级兼容\"></a><font color=\"black\">向前升级兼容</font></h4><h5 id=\"需求描述\"><a href=\"#需求描述\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h5><ul>\n<li>在外的oran设备，有些客户需要对以前的大包进行升级，因为该以前版本大包是其仔细验证过的版本，是可靠的，只认准该版本进行升级，所以m2ru项目需要向前升级进行兼容。</li>\n<li>升级过程中，设备应用层数据确保不能丢失。</li>\n</ul>\n<h5 id=\"存在问题\"><a href=\"#存在问题\" class=\"headerlink\" title=\"存在问题\"></a>存在问题</h5><ul>\n<li>以前oran版本大包是自带底层升级包的，该底层版本是没有备份系统的，分区划分也不一致，执行旧的大包中的升级底层脚本会导致设备挂掉。</li>\n<li>设备应用层的数据是不能丢失的，一旦分区改变，该ubi文件系统被破坏掉，arm等配置文件均会丢失</li>\n</ul>\n<h5 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h5><ul>\n<li>kernel分区和rootfs分区的flash相对偏移offset均保持不变，详情见下图分区划分对比。这样可以做到升级过程中不破坏rootfs及rootfs_bak分区，完好保留上层数据。</li>\n<li>boot分区(boot0)分配32M内存，用以保留升级以前boot文件的能力，还能保证当初底层默认bit文件(以前的oran设备是使用底层bit文件的，并不另行加载)</li>\n</ul>\n<div align=\"center\">\n\n<p><img src=\"/picture/pic_compare_partition.svg\" alt=\"bd\"></p>\n</div>\n\n<h5 id=\"结果验证\"><a href=\"#结果验证\" class=\"headerlink\" title=\"结果验证\"></a>结果验证</h5><ul>\n<li>由于目前在线升级系统，均是使用mtd进行升级，因此按照之前升级脚本逻辑，会对mtd0&#x2F;mtd2进行擦写操作。</li>\n<li>对于新底层而言，擦写以前的boot是可以执行成功的(mtd0空间足够)，但mtd2由于分区改变只有2M，因此读写操作失败，退出升级流程。</li>\n<li>结果而言，设备重启后，设备的boot换成了旧大包中的boot，boot_bak1&#x2F;boot_bak3仍为升级前boot备份，boot_bak2被擦掉。kernel保留升级前内核。</li>\n<li>设备可以正常运行，应用层数据完好无损，已通过测试验证。</li>\n</ul>\n<h5 id=\"升级风险\"><a href=\"#升级风险\" class=\"headerlink\" title=\"升级风险\"></a>升级风险</h5><ul>\n<li>以前存在某个版本的大包里的升级脚本，有个升级逻辑是，只要读写flash不一致，就会无限次数进行升级操作，断电重启后仍然会继续无线升级。该大包会导致设备陷入无限重启中，设备无法正常运行。</li>\n<li>由于需要向前兼容，所以，该版本是没有对boot进行备份的，仅有boot_bak1&#x2F;3的新底层boot备份，可能会有坏块等未知风险存在，建议升级使用最新的底层包。</li>\n</ul>\n<h4 id=\"向后升级兼容\"><a href=\"#向后升级兼容\" class=\"headerlink\" title=\"向后升级兼容\"></a><font color=\"black\">向后升级兼容</font></h4><ul>\n<li>向后进行兼容升级，由于分区一致，故可以直接使用升级脚本进行升级操作即可。</li>\n<li>目前经过测试，该升级功能一切正常，未出现升级失败情况。</li>\n</ul>\n<h4 id=\"das-oran互相升级\"><a href=\"#das-oran互相升级\" class=\"headerlink\" title=\"das&#x2F;oran互相升级\"></a><font color=\"black\">das&#x2F;oran互相升级</font></h4><h5 id=\"需求描述-1\"><a href=\"#需求描述-1\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h5><ul>\n<li>产线生产过程中，先是生产处das版本，然后通过在线升级成oran版本进行测试的</li>\n<li>外面的das设备也是有需求转换成oran设备的</li>\n<li>某些特点情况下，oran设备需要保留转换成das设备的能力</li>\n</ul>\n<h5 id=\"实现方案\"><a href=\"#实现方案\" class=\"headerlink\" title=\"实现方案\"></a>实现方案</h5><p><strong><font size = \"3\" color = \"purple\">DAS设备转换成ORAN设备：</font></strong></p>\n<ul>\n<li>擦除env分区，或者擦除das_platform环境变量</li>\n<li>升级大包中包含kernel_load_fpga.sh脚本进行替换，默认使用initramfs文件系统中的bit文件进行加载，若&#x2F;dryfly&#x2F;app&#x2F;FPGA.bit存在即加载最新的bit文件</li>\n<li>使用n850时钟配置工具配置ORAN时钟</li>\n<li>再启用ecpri网卡进行使用</li>\n</ul>\n<p><strong><font size = \"3\" color = \"purple\">ORAN设备转换成DAS设备：</font></strong></p>\n<ul>\n<li>烧写env分区，或者修改das_platform环境变量</li>\n<li>升级大包中将&#x2F;drgfly&#x2F;etc&#x2F;kernel_load_fpga.sh脚本使用&#x2F;etc&#x2F;kernel_load_fpga.sh底层默认脚本进行替换</li>\n</ul>\n<p><strong><font size = \"3\" color = \"purple\">产线裸板升级成DAS设备：</font></strong></p>\n<ul>\n<li>产线自动烧写脚本中增加一行命令”setenv das_platform <a href=\"mailto:&#100;&#x61;&#x73;&#64;&#115;&#x79;&#x73;&#116;&#101;&#x6d;&#45;&#x74;&#x6f;&#112;&#x2e;&#x64;&#116;&#x62;\">&#100;&#x61;&#x73;&#64;&#115;&#x79;&#x73;&#116;&#101;&#x6d;&#45;&#x74;&#x6f;&#112;&#x2e;&#x64;&#116;&#x62;</a>“ “seveenv”命令即可底层进行切换</li>\n</ul>\n<p><strong><font size = \"3\" color = \"purple\">注意事项：</font></strong></p>\n<ul>\n<li>理论上不支持ORAN设备切换成DAS设备，只是设计上保留该情况下设备的升级能力，实际测试也ok，但不建议。</li>\n<li>目前该设计底层不存在ORAN&#x2F;DAS底层，需搭配相应的上层才能切换到相应的平台。</li>\n</ul>\n<h1 id=\"接口设计\"><a href=\"#接口设计\" class=\"headerlink\" title=\"接口设计\"></a>接口设计</h1><h2 id=\"FPGA驱动接口设计\"><a href=\"#FPGA驱动接口设计\" class=\"headerlink\" title=\"FPGA驱动接口设计\"></a>FPGA驱动接口设计</h2><p><strong>略</strong></p>\n<h2 id=\"GPIO驱动接口设计\"><a href=\"#GPIO驱动接口设计\" class=\"headerlink\" title=\"GPIO驱动接口设计\"></a>GPIO驱动接口设计</h2><p><strong>略</strong></p>\n<h2 id=\"N850时钟驱动接口设计\"><a href=\"#N850时钟驱动接口设计\" class=\"headerlink\" title=\"N850时钟驱动接口设计\"></a>N850时钟驱动接口设计</h2><p><strong>略</strong></p>\n<h2 id=\"PTP状态-配置-驱动接口设计\"><a href=\"#PTP状态-配置-驱动接口设计\" class=\"headerlink\" title=\"PTP状态&#x2F;配置&#x2F;驱动接口设计\"></a>PTP状态&#x2F;配置&#x2F;驱动接口设计</h2><p><strong>略</strong></p>\n<h1 id=\"评审结果须知\"><a href=\"#评审结果须知\" class=\"headerlink\" title=\"评审结果须知\"></a>评审结果须知</h1><h2 id=\"底层方案评审结果\"><a href=\"#底层方案评审结果\" class=\"headerlink\" title=\"底层方案评审结果\"></a>底层方案评审结果</h2><p>以下是评审得出的新底层v4.0需要满足的要求，如下：</p>\n<p>1、Das和oran共用底层（v4.0）<br>2、Das应用层不需修改<br>3、Das不带boot备份底层可以升级新版本<br>4、Oran新旧版本互相升级版本，不会挂掉<br>5、Das带boot备份版本（&gt;&#x3D;v1.5）不能升级到v4.0版本<br>6、V4.0适用范围在制、库存、返修 </p>\n<h2 id=\"结果评析\"><a href=\"#结果评析\" class=\"headerlink\" title=\"结果评析\"></a>结果评析</h2><ul>\n<li>产线目前das带boot版本(&gt;&#x3D;v1.5)是大改过底层分区的，与当前ORAN底层、以前ORAN底层、以前DAS底层均不兼容，无法通过在线升级进行更新。</li>\n<li>DAS带boot备份版本(&gt;&#x3D;v1.5),无法与现网中ORAN设备进行兼容，当前似乎也没有ORAN版本与之搭配使用。</li>\n<li>该新方案仅需满足在制、库存、返修设备的适用范围，不需要兼容当前产线最新das设备，似乎也没法进行兼容。</li>\n</ul>\n"},{"title":"M2RU底层详细设计","date":"2022-03-14T16:00:00.000Z","_content":"<div align=\"center\">\n<font size=7 > M2RU底层详细设计\n\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n|版本|简介|编辑日期|作者|\n|---|----|----|----|\n|V0.1|初稿|2022-03-15|January|\n\n\n</div>\n\n<div STYLE=\"page-break-after: always;\"></div>\n\n<div align=\"center\">\n<font size=7 > \n目录\n\n</font>\n</div>\n\n[toc]\n\n\n<div STYLE=\"page-break-after: always;\"></div>\n#综述\n\n#  1. 概述 \n\n## 详细设计背景\n- <font color=\"black\">m2ru-oran底层只有一个boot备份，一旦启动坏掉，设备即刻成砖，急需提高设备容错率</font>\n- <font color=\"black\">目前产线生产流程中，ORAN设备需要在DAS设备基础上进行烧写底层，才能转换成ORAN设备，增加了产线负担</font>\n- <font color=\"black\">外场das设备升级成oran设备过程中，往往伴随着升级风险</font>\n\n## 详细设计目的\n\n- boot启动分区增加至4个，大大减小设备启动失败的风险\n- 减少产线在线升级oran底层带来的额外操作及风险\n- 合并das/oran底层版本，减少底层后期维护成本\n\n---\n\n# 2. 模块设计\n\n## UBOOT模块设计\n\n### uboot启动逻辑设计\n- 在uboot加载内核kernel时，通过解析kernel头部信息获取内核加载地址、设备树等信息\n- 通过获取到的fit_uname_config到kernel头部轮询到设备树节点(按字符串为key值)，再将其加载到内存中\n- uboot将设备树dtb的地址传给kernel，然后进行加载内核，控制权移交给内核即可\n\n### 设备识别das/oran\n\n- 设备采用环境变量的方式进行das/oran机型识别\n- 该环境变量名称为das_platform\n- 当设备处于默认情况下，das_platform环境变量为空，该设备为oran设备\n- 当setenv das_platform das@system-top.dtb时，设备转变成das设备\n\n```mermaid\ngraph LR\n    A[fsbl] --> B(uboot) \n    B --> C{platform}\n    C -->|platform = das| D(das_dtb)\n    C -->|platform = NULL| E(oran_dtb)\n    E -->|加载| G[kernel]\n    D --> |加载| G\n```\n\n## 设备树模块设计\n\n- 由于m2ru平台的das和oran的FPGA完全不同，无法做到兼容，故需要设备自己知道是oran还是das设备，以按照不同的FPGA版本加载对应的设备树，进而加载不同的设备驱动\n- m2ru设备按照das和oran的FPGA的xsa文件进行分开编译各自平台设备树\n- 根据oran/das项目需求，自行添加完善设备树\n\n## 内核模块设计\n\n- das/oran共用驱动，如flash驱动、eth0驱动等不用特殊进行处理\n- ptp驱动、ecpri/cpri网卡驱动等务必使用设备树配置进行加载\n- DTB文件按照das_fdt@system-top.dtb/fdt@system-top.dtb描述符链接到image文件中\n<div align=\"center\">\n\n![bd](picture/pic1.svg)\n\n</div>\n\n## 驱动模块设计\n\n### ecpri/cpri网卡加载\n\n- das设备加载cpri网卡，对时钟没有额外要求，故不受影响，可正常进行加载\n- oran设备加载ecpri网卡时，由于该网卡需要n850晶振输出时钟作为clk，因此，加载该网卡时需要配置850晶振\n- 目前m2的设计是850晶振通过FPGA连线到ARM侧，因此需要提前加载FPGA，然后控制850时钟，最后加载ecpri网卡\n\n此时有个疑问，没有加载FPGA的话，xilinx_axienet驱动能否正常加载PHY驱动，因为此时mdio是找不到PHY的(由FPGA模拟产生)\n```mermaid\ngraph LR\n    A(axienet_open) --> B(axienet_device_reset) -.-> K(重置xilinx_axienet mac)\n    A --> C(of_phy_connect) \n    C --> D(phy_connect_direct) -->E(phy_init_hw)\n    D --> X(phy_start_machine) -.-> 开启phy状态机\n    C --> T(of_phy_find_device) -->bus_find_device-.->找到PHY设备\n    E --> F(phy_device_reset)\n    E --> G(soft_reset)\n    E --> H(phy_scan_fixups)\n```\n通过上述梳理源码可知，xilinx_axienet的Mac驱动初始化只针对Mac层操作，虚拟phy并不需要对应的驱动，包含在axienet_open操作中\n\n**DAS设备加载cpri网卡加载顺序为：**\n\n```mermaid\ngraph LR\n    A(kernel) --> |加载|B(FPGA.bit) \n    B --> |启用网卡| D(ifconfig eth0 up)-.->E(使用网卡)\n```\n**或者**\n```mermaid\ngraph LR\n    A(kernel) --> |启用网卡| D(ifconfig eth0 up) --> |加载|B(FPGA.bit) -.->E(使用网卡)\n```\n**ORAN设备加载ecpri网卡加载顺序为：**\n```mermaid\ngraph LR\n    A(kernel) --> |加载|B(FPGA.bit) \n    B --> |配置| C(n850时钟)\n    C --> |启用网卡| D(ifconfig eth0 up)\n```\n### ptp驱动加载\n\n**由于只有oran设备才有ptp驱动，故需要在驱动和设备树中进行修改**\n- 在oran平台的设备树中添加关于ptp的节点描述sunwave,timer-1588-2.0\n- 将sunwave_ptp_timer驱动移植到内核中进行加载，加载的描述符由设备树进行指定\n- ptp驱动针对FPGA的timer模块进行相应的功能控制和中断注册\n\n\n## 设备分区划分\n\n<div align=\"center\">\n\n![bd](picture/pic_partition.svg)\n\n</div>\n\n## 升级模块设计\n\n#### <font color=\"black\">向前升级兼容</font>\n\n##### 需求描述\n\n- 在外的oran设备，有些客户需要对以前的大包进行升级，因为该以前版本大包是其仔细验证过的版本，是可靠的，只认准该版本进行升级，所以m2ru项目需要向前升级进行兼容。\n- 升级过程中，设备应用层数据确保不能丢失。\n\n##### 存在问题\n\n- 以前oran版本大包是自带底层升级包的，该底层版本是没有备份系统的，分区划分也不一致，执行旧的大包中的升级底层脚本会导致设备挂掉。\n- 设备应用层的数据是不能丢失的，一旦分区改变，该ubi文件系统被破坏掉，arm等配置文件均会丢失\n\n##### 解决方案\n\n- kernel分区和rootfs分区的flash相对偏移offset均保持不变，详情见下图分区划分对比。这样可以做到升级过程中不破坏rootfs及rootfs_bak分区，完好保留上层数据。\n- boot分区(boot0)分配32M内存，用以保留升级以前boot文件的能力，还能保证当初底层默认bit文件(以前的oran设备是使用底层bit文件的，并不另行加载)\n\n\n<div align=\"center\">\n\n![bd](picture/pic_compare_partition.svg)\n\n</div>\n\n##### 结果验证\n\n- 由于目前在线升级系统，均是使用mtd进行升级，因此按照之前升级脚本逻辑，会对mtd0/mtd2进行擦写操作。\n- 对于新底层而言，擦写以前的boot是可以执行成功的(mtd0空间足够)，但mtd2由于分区改变只有2M，因此读写操作失败，退出升级流程。\n- 结果而言，设备重启后，设备的boot换成了旧大包中的boot，boot_bak1/boot_bak3仍为升级前boot备份，boot_bak2被擦掉。kernel保留升级前内核。\n- 设备可以正常运行，应用层数据完好无损，已通过测试验证。\n\n##### 升级风险\n\n- 以前存在某个版本的大包里的升级脚本，有个升级逻辑是，只要读写flash不一致，就会无限次数进行升级操作，断电重启后仍然会继续无线升级。该大包会导致设备陷入无限重启中，设备无法正常运行。\n- 由于需要向前兼容，所以，该版本是没有对boot进行备份的，仅有boot_bak1/3的新底层boot备份，可能会有坏块等未知风险存在，建议升级使用最新的底层包。\n\n#### <font color=\"black\">向后升级兼容</font>\n\n- 向后进行兼容升级，由于分区一致，故可以直接使用升级脚本进行升级操作即可。\n- 目前经过测试，该升级功能一切正常，未出现升级失败情况。\n\n#### <font color=\"black\">das/oran互相升级</font>\n\n##### 需求描述\n\n- 产线生产过程中，先是生产处das版本，然后通过在线升级成oran版本进行测试的\n- 外面的das设备也是有需求转换成oran设备的\n- 某些特点情况下，oran设备需要保留转换成das设备的能力\n\n##### 实现方案\n\n**<font size = \"3\" color = \"purple\">DAS设备转换成ORAN设备：</font>**\n\n- 擦除env分区，或者擦除das_platform环境变量\n- 升级大包中包含kernel_load_fpga.sh脚本进行替换，默认使用initramfs文件系统中的bit文件进行加载，若/dryfly/app/FPGA.bit存在即加载最新的bit文件\n- 使用n850时钟配置工具配置ORAN时钟\n- 再启用ecpri网卡进行使用\n\n**<font size = \"3\" color = \"purple\">ORAN设备转换成DAS设备：</font>**\n\n- 烧写env分区，或者修改das_platform环境变量\n- 升级大包中将/drgfly/etc/kernel_load_fpga.sh脚本使用/etc/kernel_load_fpga.sh底层默认脚本进行替换\n\n**<font size = \"3\" color = \"purple\">产线裸板升级成DAS设备：</font>**\n\n- 产线自动烧写脚本中增加一行命令\"setenv das_platform das@system-top.dtb\" \"seveenv\"命令即可底层进行切换\n\n**<font size = \"3\" color = \"purple\">注意事项：</font>**\n\n- 理论上不支持ORAN设备切换成DAS设备，只是设计上保留该情况下设备的升级能力，实际测试也ok，但不建议。\n- 目前该设计底层不存在ORAN/DAS底层，需搭配相应的上层才能切换到相应的平台。\n\n# 接口设计\n\n## FPGA驱动接口设计\n\n**略**\n\n## GPIO驱动接口设计\n\n**略**\n\n## N850时钟驱动接口设计\n\n**略**\n\n## PTP状态/配置/驱动接口设计\n\n**略**\n\n\n# 评审结果须知\n\n## 底层方案评审结果\n\n以下是评审得出的新底层v4.0需要满足的要求，如下：\n\n1、Das和oran共用底层（v4.0）  \n2、Das应用层不需修改  \n3、Das不带boot备份底层可以升级新版本  \n4、Oran新旧版本互相升级版本，不会挂掉  \n5、Das带boot备份版本（>=v1.5）不能升级到v4.0版本  \n6、V4.0适用范围在制、库存、返修 \n\n## 结果评析\n\n- 产线目前das带boot版本(>=v1.5)是大改过底层分区的，与当前ORAN底层、以前ORAN底层、以前DAS底层均不兼容，无法通过在线升级进行更新。\n- DAS带boot备份版本(>=v1.5),无法与现网中ORAN设备进行兼容，当前似乎也没有ORAN版本与之搭配使用。\n- 该新方案仅需满足在制、库存、返修设备的适用范围，不需要兼容当前产线最新das设备，似乎也没法进行兼容。","source":"_posts/m2ru底层启动详细设计.md","raw":"---\ntitle: M2RU底层详细设计\ndate: 2022-03-15\ntags:\n- Linux\n---\n<div align=\"center\">\n<font size=7 > M2RU底层详细设计\n\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n|版本|简介|编辑日期|作者|\n|---|----|----|----|\n|V0.1|初稿|2022-03-15|January|\n\n\n</div>\n\n<div STYLE=\"page-break-after: always;\"></div>\n\n<div align=\"center\">\n<font size=7 > \n目录\n\n</font>\n</div>\n\n[toc]\n\n\n<div STYLE=\"page-break-after: always;\"></div>\n#综述\n\n#  1. 概述 \n\n## 详细设计背景\n- <font color=\"black\">m2ru-oran底层只有一个boot备份，一旦启动坏掉，设备即刻成砖，急需提高设备容错率</font>\n- <font color=\"black\">目前产线生产流程中，ORAN设备需要在DAS设备基础上进行烧写底层，才能转换成ORAN设备，增加了产线负担</font>\n- <font color=\"black\">外场das设备升级成oran设备过程中，往往伴随着升级风险</font>\n\n## 详细设计目的\n\n- boot启动分区增加至4个，大大减小设备启动失败的风险\n- 减少产线在线升级oran底层带来的额外操作及风险\n- 合并das/oran底层版本，减少底层后期维护成本\n\n---\n\n# 2. 模块设计\n\n## UBOOT模块设计\n\n### uboot启动逻辑设计\n- 在uboot加载内核kernel时，通过解析kernel头部信息获取内核加载地址、设备树等信息\n- 通过获取到的fit_uname_config到kernel头部轮询到设备树节点(按字符串为key值)，再将其加载到内存中\n- uboot将设备树dtb的地址传给kernel，然后进行加载内核，控制权移交给内核即可\n\n### 设备识别das/oran\n\n- 设备采用环境变量的方式进行das/oran机型识别\n- 该环境变量名称为das_platform\n- 当设备处于默认情况下，das_platform环境变量为空，该设备为oran设备\n- 当setenv das_platform das@system-top.dtb时，设备转变成das设备\n\n```mermaid\ngraph LR\n    A[fsbl] --> B(uboot) \n    B --> C{platform}\n    C -->|platform = das| D(das_dtb)\n    C -->|platform = NULL| E(oran_dtb)\n    E -->|加载| G[kernel]\n    D --> |加载| G\n```\n\n## 设备树模块设计\n\n- 由于m2ru平台的das和oran的FPGA完全不同，无法做到兼容，故需要设备自己知道是oran还是das设备，以按照不同的FPGA版本加载对应的设备树，进而加载不同的设备驱动\n- m2ru设备按照das和oran的FPGA的xsa文件进行分开编译各自平台设备树\n- 根据oran/das项目需求，自行添加完善设备树\n\n## 内核模块设计\n\n- das/oran共用驱动，如flash驱动、eth0驱动等不用特殊进行处理\n- ptp驱动、ecpri/cpri网卡驱动等务必使用设备树配置进行加载\n- DTB文件按照das_fdt@system-top.dtb/fdt@system-top.dtb描述符链接到image文件中\n<div align=\"center\">\n\n![bd](picture/pic1.svg)\n\n</div>\n\n## 驱动模块设计\n\n### ecpri/cpri网卡加载\n\n- das设备加载cpri网卡，对时钟没有额外要求，故不受影响，可正常进行加载\n- oran设备加载ecpri网卡时，由于该网卡需要n850晶振输出时钟作为clk，因此，加载该网卡时需要配置850晶振\n- 目前m2的设计是850晶振通过FPGA连线到ARM侧，因此需要提前加载FPGA，然后控制850时钟，最后加载ecpri网卡\n\n此时有个疑问，没有加载FPGA的话，xilinx_axienet驱动能否正常加载PHY驱动，因为此时mdio是找不到PHY的(由FPGA模拟产生)\n```mermaid\ngraph LR\n    A(axienet_open) --> B(axienet_device_reset) -.-> K(重置xilinx_axienet mac)\n    A --> C(of_phy_connect) \n    C --> D(phy_connect_direct) -->E(phy_init_hw)\n    D --> X(phy_start_machine) -.-> 开启phy状态机\n    C --> T(of_phy_find_device) -->bus_find_device-.->找到PHY设备\n    E --> F(phy_device_reset)\n    E --> G(soft_reset)\n    E --> H(phy_scan_fixups)\n```\n通过上述梳理源码可知，xilinx_axienet的Mac驱动初始化只针对Mac层操作，虚拟phy并不需要对应的驱动，包含在axienet_open操作中\n\n**DAS设备加载cpri网卡加载顺序为：**\n\n```mermaid\ngraph LR\n    A(kernel) --> |加载|B(FPGA.bit) \n    B --> |启用网卡| D(ifconfig eth0 up)-.->E(使用网卡)\n```\n**或者**\n```mermaid\ngraph LR\n    A(kernel) --> |启用网卡| D(ifconfig eth0 up) --> |加载|B(FPGA.bit) -.->E(使用网卡)\n```\n**ORAN设备加载ecpri网卡加载顺序为：**\n```mermaid\ngraph LR\n    A(kernel) --> |加载|B(FPGA.bit) \n    B --> |配置| C(n850时钟)\n    C --> |启用网卡| D(ifconfig eth0 up)\n```\n### ptp驱动加载\n\n**由于只有oran设备才有ptp驱动，故需要在驱动和设备树中进行修改**\n- 在oran平台的设备树中添加关于ptp的节点描述sunwave,timer-1588-2.0\n- 将sunwave_ptp_timer驱动移植到内核中进行加载，加载的描述符由设备树进行指定\n- ptp驱动针对FPGA的timer模块进行相应的功能控制和中断注册\n\n\n## 设备分区划分\n\n<div align=\"center\">\n\n![bd](picture/pic_partition.svg)\n\n</div>\n\n## 升级模块设计\n\n#### <font color=\"black\">向前升级兼容</font>\n\n##### 需求描述\n\n- 在外的oran设备，有些客户需要对以前的大包进行升级，因为该以前版本大包是其仔细验证过的版本，是可靠的，只认准该版本进行升级，所以m2ru项目需要向前升级进行兼容。\n- 升级过程中，设备应用层数据确保不能丢失。\n\n##### 存在问题\n\n- 以前oran版本大包是自带底层升级包的，该底层版本是没有备份系统的，分区划分也不一致，执行旧的大包中的升级底层脚本会导致设备挂掉。\n- 设备应用层的数据是不能丢失的，一旦分区改变，该ubi文件系统被破坏掉，arm等配置文件均会丢失\n\n##### 解决方案\n\n- kernel分区和rootfs分区的flash相对偏移offset均保持不变，详情见下图分区划分对比。这样可以做到升级过程中不破坏rootfs及rootfs_bak分区，完好保留上层数据。\n- boot分区(boot0)分配32M内存，用以保留升级以前boot文件的能力，还能保证当初底层默认bit文件(以前的oran设备是使用底层bit文件的，并不另行加载)\n\n\n<div align=\"center\">\n\n![bd](picture/pic_compare_partition.svg)\n\n</div>\n\n##### 结果验证\n\n- 由于目前在线升级系统，均是使用mtd进行升级，因此按照之前升级脚本逻辑，会对mtd0/mtd2进行擦写操作。\n- 对于新底层而言，擦写以前的boot是可以执行成功的(mtd0空间足够)，但mtd2由于分区改变只有2M，因此读写操作失败，退出升级流程。\n- 结果而言，设备重启后，设备的boot换成了旧大包中的boot，boot_bak1/boot_bak3仍为升级前boot备份，boot_bak2被擦掉。kernel保留升级前内核。\n- 设备可以正常运行，应用层数据完好无损，已通过测试验证。\n\n##### 升级风险\n\n- 以前存在某个版本的大包里的升级脚本，有个升级逻辑是，只要读写flash不一致，就会无限次数进行升级操作，断电重启后仍然会继续无线升级。该大包会导致设备陷入无限重启中，设备无法正常运行。\n- 由于需要向前兼容，所以，该版本是没有对boot进行备份的，仅有boot_bak1/3的新底层boot备份，可能会有坏块等未知风险存在，建议升级使用最新的底层包。\n\n#### <font color=\"black\">向后升级兼容</font>\n\n- 向后进行兼容升级，由于分区一致，故可以直接使用升级脚本进行升级操作即可。\n- 目前经过测试，该升级功能一切正常，未出现升级失败情况。\n\n#### <font color=\"black\">das/oran互相升级</font>\n\n##### 需求描述\n\n- 产线生产过程中，先是生产处das版本，然后通过在线升级成oran版本进行测试的\n- 外面的das设备也是有需求转换成oran设备的\n- 某些特点情况下，oran设备需要保留转换成das设备的能力\n\n##### 实现方案\n\n**<font size = \"3\" color = \"purple\">DAS设备转换成ORAN设备：</font>**\n\n- 擦除env分区，或者擦除das_platform环境变量\n- 升级大包中包含kernel_load_fpga.sh脚本进行替换，默认使用initramfs文件系统中的bit文件进行加载，若/dryfly/app/FPGA.bit存在即加载最新的bit文件\n- 使用n850时钟配置工具配置ORAN时钟\n- 再启用ecpri网卡进行使用\n\n**<font size = \"3\" color = \"purple\">ORAN设备转换成DAS设备：</font>**\n\n- 烧写env分区，或者修改das_platform环境变量\n- 升级大包中将/drgfly/etc/kernel_load_fpga.sh脚本使用/etc/kernel_load_fpga.sh底层默认脚本进行替换\n\n**<font size = \"3\" color = \"purple\">产线裸板升级成DAS设备：</font>**\n\n- 产线自动烧写脚本中增加一行命令\"setenv das_platform das@system-top.dtb\" \"seveenv\"命令即可底层进行切换\n\n**<font size = \"3\" color = \"purple\">注意事项：</font>**\n\n- 理论上不支持ORAN设备切换成DAS设备，只是设计上保留该情况下设备的升级能力，实际测试也ok，但不建议。\n- 目前该设计底层不存在ORAN/DAS底层，需搭配相应的上层才能切换到相应的平台。\n\n# 接口设计\n\n## FPGA驱动接口设计\n\n**略**\n\n## GPIO驱动接口设计\n\n**略**\n\n## N850时钟驱动接口设计\n\n**略**\n\n## PTP状态/配置/驱动接口设计\n\n**略**\n\n\n# 评审结果须知\n\n## 底层方案评审结果\n\n以下是评审得出的新底层v4.0需要满足的要求，如下：\n\n1、Das和oran共用底层（v4.0）  \n2、Das应用层不需修改  \n3、Das不带boot备份底层可以升级新版本  \n4、Oran新旧版本互相升级版本，不会挂掉  \n5、Das带boot备份版本（>=v1.5）不能升级到v4.0版本  \n6、V4.0适用范围在制、库存、返修 \n\n## 结果评析\n\n- 产线目前das带boot版本(>=v1.5)是大改过底层分区的，与当前ORAN底层、以前ORAN底层、以前DAS底层均不兼容，无法通过在线升级进行更新。\n- DAS带boot备份版本(>=v1.5),无法与现网中ORAN设备进行兼容，当前似乎也没有ORAN版本与之搭配使用。\n- 该新方案仅需满足在制、库存、返修设备的适用范围，不需要兼容当前产线最新das设备，似乎也没法进行兼容。","slug":"m2ru底层启动详细设计","published":1,"updated":"2023-08-30T06:38:07.007Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllxdkidt00048sm42otsaq5g","content":"<div align=\"center\">\n<font size=7 > M2RU底层详细设计\n\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n<table>\n<thead>\n<tr>\n<th>版本</th>\n<th>简介</th>\n<th>编辑日期</th>\n<th>作者</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>V0.1</td>\n<td>初稿</td>\n<td>2022-03-15</td>\n<td>January</td>\n</tr>\n</tbody></table>\n</div>\n\n<div STYLE=\"page-break-after: always;\"></div>\n\n<div align=\"center\">\n<font size=7 > \n目录\n\n</font>\n</div>\n\n<p>[toc]</p>\n<div STYLE=\"page-break-after: always;\"></div>\n#综述\n\n<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h1><h2 id=\"详细设计背景\"><a href=\"#详细设计背景\" class=\"headerlink\" title=\"详细设计背景\"></a>详细设计背景</h2><ul>\n<li><font color=\"black\">m2ru-oran底层只有一个boot备份，一旦启动坏掉，设备即刻成砖，急需提高设备容错率</font></li>\n<li><font color=\"black\">目前产线生产流程中，ORAN设备需要在DAS设备基础上进行烧写底层，才能转换成ORAN设备，增加了产线负担</font></li>\n<li><font color=\"black\">外场das设备升级成oran设备过程中，往往伴随着升级风险</font></li>\n</ul>\n<h2 id=\"详细设计目的\"><a href=\"#详细设计目的\" class=\"headerlink\" title=\"详细设计目的\"></a>详细设计目的</h2><ul>\n<li>boot启动分区增加至4个，大大减小设备启动失败的风险</li>\n<li>减少产线在线升级oran底层带来的额外操作及风险</li>\n<li>合并das&#x2F;oran底层版本，减少底层后期维护成本</li>\n</ul>\n<hr>\n<h1 id=\"2-模块设计\"><a href=\"#2-模块设计\" class=\"headerlink\" title=\"2. 模块设计\"></a>2. 模块设计</h1><h2 id=\"UBOOT模块设计\"><a href=\"#UBOOT模块设计\" class=\"headerlink\" title=\"UBOOT模块设计\"></a>UBOOT模块设计</h2><h3 id=\"uboot启动逻辑设计\"><a href=\"#uboot启动逻辑设计\" class=\"headerlink\" title=\"uboot启动逻辑设计\"></a>uboot启动逻辑设计</h3><ul>\n<li>在uboot加载内核kernel时，通过解析kernel头部信息获取内核加载地址、设备树等信息</li>\n<li>通过获取到的fit_uname_config到kernel头部轮询到设备树节点(按字符串为key值)，再将其加载到内存中</li>\n<li>uboot将设备树dtb的地址传给kernel，然后进行加载内核，控制权移交给内核即可</li>\n</ul>\n<h3 id=\"设备识别das-oran\"><a href=\"#设备识别das-oran\" class=\"headerlink\" title=\"设备识别das&#x2F;oran\"></a>设备识别das&#x2F;oran</h3><ul>\n<li>设备采用环境变量的方式进行das&#x2F;oran机型识别</li>\n<li>该环境变量名称为das_platform</li>\n<li>当设备处于默认情况下，das_platform环境变量为空，该设备为oran设备</li>\n<li>当setenv das_platform <a href=\"mailto:&#x64;&#97;&#115;&#x40;&#115;&#x79;&#x73;&#x74;&#101;&#109;&#x2d;&#116;&#x6f;&#112;&#46;&#x64;&#116;&#x62;\">&#x64;&#97;&#115;&#x40;&#115;&#x79;&#x73;&#x74;&#101;&#109;&#x2d;&#116;&#x6f;&#112;&#46;&#x64;&#116;&#x62;</a>时，设备转变成das设备</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A[fsbl] --&gt; B(uboot) </span><br><span class=\"line\">    B --&gt; C&#123;platform&#125;</span><br><span class=\"line\">    C --&gt;|platform = das| D(das_dtb)</span><br><span class=\"line\">    C --&gt;|platform = NULL| E(oran_dtb)</span><br><span class=\"line\">    E --&gt;|加载| G[kernel]</span><br><span class=\"line\">    D --&gt; |加载| G</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设备树模块设计\"><a href=\"#设备树模块设计\" class=\"headerlink\" title=\"设备树模块设计\"></a>设备树模块设计</h2><ul>\n<li>由于m2ru平台的das和oran的FPGA完全不同，无法做到兼容，故需要设备自己知道是oran还是das设备，以按照不同的FPGA版本加载对应的设备树，进而加载不同的设备驱动</li>\n<li>m2ru设备按照das和oran的FPGA的xsa文件进行分开编译各自平台设备树</li>\n<li>根据oran&#x2F;das项目需求，自行添加完善设备树</li>\n</ul>\n<h2 id=\"内核模块设计\"><a href=\"#内核模块设计\" class=\"headerlink\" title=\"内核模块设计\"></a>内核模块设计</h2><ul>\n<li>das&#x2F;oran共用驱动，如flash驱动、eth0驱动等不用特殊进行处理</li>\n<li>ptp驱动、ecpri&#x2F;cpri网卡驱动等务必使用设备树配置进行加载</li>\n<li>DTB文件按照<a href=\"mailto:&#x64;&#97;&#115;&#95;&#x66;&#x64;&#116;&#x40;&#x73;&#x79;&#115;&#x74;&#101;&#x6d;&#45;&#116;&#111;&#x70;&#x2e;&#x64;&#116;&#x62;\">&#x64;&#97;&#115;&#95;&#x66;&#x64;&#116;&#x40;&#x73;&#x79;&#115;&#x74;&#101;&#x6d;&#45;&#116;&#111;&#x70;&#x2e;&#x64;&#116;&#x62;</a>&#x2F;<a href=\"mailto:&#102;&#x64;&#116;&#x40;&#115;&#121;&#x73;&#116;&#x65;&#x6d;&#45;&#116;&#x6f;&#112;&#46;&#100;&#x74;&#98;\">&#102;&#x64;&#116;&#x40;&#115;&#121;&#x73;&#116;&#x65;&#x6d;&#45;&#116;&#x6f;&#112;&#46;&#100;&#x74;&#98;</a>描述符链接到image文件中<div align=\"center\"></li>\n</ul>\n<p><img src=\"/picture/pic1.svg\" alt=\"bd\"></p>\n</div>\n\n<h2 id=\"驱动模块设计\"><a href=\"#驱动模块设计\" class=\"headerlink\" title=\"驱动模块设计\"></a>驱动模块设计</h2><h3 id=\"ecpri-cpri网卡加载\"><a href=\"#ecpri-cpri网卡加载\" class=\"headerlink\" title=\"ecpri&#x2F;cpri网卡加载\"></a>ecpri&#x2F;cpri网卡加载</h3><ul>\n<li>das设备加载cpri网卡，对时钟没有额外要求，故不受影响，可正常进行加载</li>\n<li>oran设备加载ecpri网卡时，由于该网卡需要n850晶振输出时钟作为clk，因此，加载该网卡时需要配置850晶振</li>\n<li>目前m2的设计是850晶振通过FPGA连线到ARM侧，因此需要提前加载FPGA，然后控制850时钟，最后加载ecpri网卡</li>\n</ul>\n<p>此时有个疑问，没有加载FPGA的话，xilinx_axienet驱动能否正常加载PHY驱动，因为此时mdio是找不到PHY的(由FPGA模拟产生)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(axienet_open) --&gt; B(axienet_device_reset) -.-&gt; K(重置xilinx_axienet mac)</span><br><span class=\"line\">    A --&gt; C(of_phy_connect) </span><br><span class=\"line\">    C --&gt; D(phy_connect_direct) --&gt;E(phy_init_hw)</span><br><span class=\"line\">    D --&gt; X(phy_start_machine) -.-&gt; 开启phy状态机</span><br><span class=\"line\">    C --&gt; T(of_phy_find_device) --&gt;bus_find_device-.-&gt;找到PHY设备</span><br><span class=\"line\">    E --&gt; F(phy_device_reset)</span><br><span class=\"line\">    E --&gt; G(soft_reset)</span><br><span class=\"line\">    E --&gt; H(phy_scan_fixups)</span><br></pre></td></tr></table></figure>\n<p>通过上述梳理源码可知，xilinx_axienet的Mac驱动初始化只针对Mac层操作，虚拟phy并不需要对应的驱动，包含在axienet_open操作中</p>\n<p><strong>DAS设备加载cpri网卡加载顺序为：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(kernel) --&gt; |加载|B(FPGA.bit) </span><br><span class=\"line\">    B --&gt; |启用网卡| D(ifconfig eth0 up)-.-&gt;E(使用网卡)</span><br></pre></td></tr></table></figure>\n<p><strong>或者</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(kernel) --&gt; |启用网卡| D(ifconfig eth0 up) --&gt; |加载|B(FPGA.bit) -.-&gt;E(使用网卡)</span><br></pre></td></tr></table></figure>\n<p><strong>ORAN设备加载ecpri网卡加载顺序为：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(kernel) --&gt; |加载|B(FPGA.bit) </span><br><span class=\"line\">    B --&gt; |配置| C(n850时钟)</span><br><span class=\"line\">    C --&gt; |启用网卡| D(ifconfig eth0 up)</span><br></pre></td></tr></table></figure>\n<h3 id=\"ptp驱动加载\"><a href=\"#ptp驱动加载\" class=\"headerlink\" title=\"ptp驱动加载\"></a>ptp驱动加载</h3><p><strong>由于只有oran设备才有ptp驱动，故需要在驱动和设备树中进行修改</strong></p>\n<ul>\n<li>在oran平台的设备树中添加关于ptp的节点描述sunwave,timer-1588-2.0</li>\n<li>将sunwave_ptp_timer驱动移植到内核中进行加载，加载的描述符由设备树进行指定</li>\n<li>ptp驱动针对FPGA的timer模块进行相应的功能控制和中断注册</li>\n</ul>\n<h2 id=\"设备分区划分\"><a href=\"#设备分区划分\" class=\"headerlink\" title=\"设备分区划分\"></a>设备分区划分</h2><div align=\"center\">\n\n<p><img src=\"/picture/pic_partition.svg\" alt=\"bd\"></p>\n</div>\n\n<h2 id=\"升级模块设计\"><a href=\"#升级模块设计\" class=\"headerlink\" title=\"升级模块设计\"></a>升级模块设计</h2><h4 id=\"向前升级兼容\"><a href=\"#向前升级兼容\" class=\"headerlink\" title=\"向前升级兼容\"></a><font color=\"black\">向前升级兼容</font></h4><h5 id=\"需求描述\"><a href=\"#需求描述\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h5><ul>\n<li>在外的oran设备，有些客户需要对以前的大包进行升级，因为该以前版本大包是其仔细验证过的版本，是可靠的，只认准该版本进行升级，所以m2ru项目需要向前升级进行兼容。</li>\n<li>升级过程中，设备应用层数据确保不能丢失。</li>\n</ul>\n<h5 id=\"存在问题\"><a href=\"#存在问题\" class=\"headerlink\" title=\"存在问题\"></a>存在问题</h5><ul>\n<li>以前oran版本大包是自带底层升级包的，该底层版本是没有备份系统的，分区划分也不一致，执行旧的大包中的升级底层脚本会导致设备挂掉。</li>\n<li>设备应用层的数据是不能丢失的，一旦分区改变，该ubi文件系统被破坏掉，arm等配置文件均会丢失</li>\n</ul>\n<h5 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h5><ul>\n<li>kernel分区和rootfs分区的flash相对偏移offset均保持不变，详情见下图分区划分对比。这样可以做到升级过程中不破坏rootfs及rootfs_bak分区，完好保留上层数据。</li>\n<li>boot分区(boot0)分配32M内存，用以保留升级以前boot文件的能力，还能保证当初底层默认bit文件(以前的oran设备是使用底层bit文件的，并不另行加载)</li>\n</ul>\n<div align=\"center\">\n\n<p><img src=\"/picture/pic_compare_partition.svg\" alt=\"bd\"></p>\n</div>\n\n<h5 id=\"结果验证\"><a href=\"#结果验证\" class=\"headerlink\" title=\"结果验证\"></a>结果验证</h5><ul>\n<li>由于目前在线升级系统，均是使用mtd进行升级，因此按照之前升级脚本逻辑，会对mtd0&#x2F;mtd2进行擦写操作。</li>\n<li>对于新底层而言，擦写以前的boot是可以执行成功的(mtd0空间足够)，但mtd2由于分区改变只有2M，因此读写操作失败，退出升级流程。</li>\n<li>结果而言，设备重启后，设备的boot换成了旧大包中的boot，boot_bak1&#x2F;boot_bak3仍为升级前boot备份，boot_bak2被擦掉。kernel保留升级前内核。</li>\n<li>设备可以正常运行，应用层数据完好无损，已通过测试验证。</li>\n</ul>\n<h5 id=\"升级风险\"><a href=\"#升级风险\" class=\"headerlink\" title=\"升级风险\"></a>升级风险</h5><ul>\n<li>以前存在某个版本的大包里的升级脚本，有个升级逻辑是，只要读写flash不一致，就会无限次数进行升级操作，断电重启后仍然会继续无线升级。该大包会导致设备陷入无限重启中，设备无法正常运行。</li>\n<li>由于需要向前兼容，所以，该版本是没有对boot进行备份的，仅有boot_bak1&#x2F;3的新底层boot备份，可能会有坏块等未知风险存在，建议升级使用最新的底层包。</li>\n</ul>\n<h4 id=\"向后升级兼容\"><a href=\"#向后升级兼容\" class=\"headerlink\" title=\"向后升级兼容\"></a><font color=\"black\">向后升级兼容</font></h4><ul>\n<li>向后进行兼容升级，由于分区一致，故可以直接使用升级脚本进行升级操作即可。</li>\n<li>目前经过测试，该升级功能一切正常，未出现升级失败情况。</li>\n</ul>\n<h4 id=\"das-oran互相升级\"><a href=\"#das-oran互相升级\" class=\"headerlink\" title=\"das&#x2F;oran互相升级\"></a><font color=\"black\">das&#x2F;oran互相升级</font></h4><h5 id=\"需求描述-1\"><a href=\"#需求描述-1\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h5><ul>\n<li>产线生产过程中，先是生产处das版本，然后通过在线升级成oran版本进行测试的</li>\n<li>外面的das设备也是有需求转换成oran设备的</li>\n<li>某些特点情况下，oran设备需要保留转换成das设备的能力</li>\n</ul>\n<h5 id=\"实现方案\"><a href=\"#实现方案\" class=\"headerlink\" title=\"实现方案\"></a>实现方案</h5><p><strong><font size = \"3\" color = \"purple\">DAS设备转换成ORAN设备：</font></strong></p>\n<ul>\n<li>擦除env分区，或者擦除das_platform环境变量</li>\n<li>升级大包中包含kernel_load_fpga.sh脚本进行替换，默认使用initramfs文件系统中的bit文件进行加载，若&#x2F;dryfly&#x2F;app&#x2F;FPGA.bit存在即加载最新的bit文件</li>\n<li>使用n850时钟配置工具配置ORAN时钟</li>\n<li>再启用ecpri网卡进行使用</li>\n</ul>\n<p><strong><font size = \"3\" color = \"purple\">ORAN设备转换成DAS设备：</font></strong></p>\n<ul>\n<li>烧写env分区，或者修改das_platform环境变量</li>\n<li>升级大包中将&#x2F;drgfly&#x2F;etc&#x2F;kernel_load_fpga.sh脚本使用&#x2F;etc&#x2F;kernel_load_fpga.sh底层默认脚本进行替换</li>\n</ul>\n<p><strong><font size = \"3\" color = \"purple\">产线裸板升级成DAS设备：</font></strong></p>\n<ul>\n<li>产线自动烧写脚本中增加一行命令”setenv das_platform <a href=\"mailto:&#100;&#97;&#115;&#x40;&#x73;&#x79;&#115;&#116;&#x65;&#109;&#x2d;&#116;&#x6f;&#x70;&#46;&#x64;&#116;&#x62;\">&#100;&#97;&#115;&#x40;&#x73;&#x79;&#115;&#116;&#x65;&#109;&#x2d;&#116;&#x6f;&#x70;&#46;&#x64;&#116;&#x62;</a>“ “seveenv”命令即可底层进行切换</li>\n</ul>\n<p><strong><font size = \"3\" color = \"purple\">注意事项：</font></strong></p>\n<ul>\n<li>理论上不支持ORAN设备切换成DAS设备，只是设计上保留该情况下设备的升级能力，实际测试也ok，但不建议。</li>\n<li>目前该设计底层不存在ORAN&#x2F;DAS底层，需搭配相应的上层才能切换到相应的平台。</li>\n</ul>\n<h1 id=\"接口设计\"><a href=\"#接口设计\" class=\"headerlink\" title=\"接口设计\"></a>接口设计</h1><h2 id=\"FPGA驱动接口设计\"><a href=\"#FPGA驱动接口设计\" class=\"headerlink\" title=\"FPGA驱动接口设计\"></a>FPGA驱动接口设计</h2><p><strong>略</strong></p>\n<h2 id=\"GPIO驱动接口设计\"><a href=\"#GPIO驱动接口设计\" class=\"headerlink\" title=\"GPIO驱动接口设计\"></a>GPIO驱动接口设计</h2><p><strong>略</strong></p>\n<h2 id=\"N850时钟驱动接口设计\"><a href=\"#N850时钟驱动接口设计\" class=\"headerlink\" title=\"N850时钟驱动接口设计\"></a>N850时钟驱动接口设计</h2><p><strong>略</strong></p>\n<h2 id=\"PTP状态-配置-驱动接口设计\"><a href=\"#PTP状态-配置-驱动接口设计\" class=\"headerlink\" title=\"PTP状态&#x2F;配置&#x2F;驱动接口设计\"></a>PTP状态&#x2F;配置&#x2F;驱动接口设计</h2><p><strong>略</strong></p>\n<h1 id=\"评审结果须知\"><a href=\"#评审结果须知\" class=\"headerlink\" title=\"评审结果须知\"></a>评审结果须知</h1><h2 id=\"底层方案评审结果\"><a href=\"#底层方案评审结果\" class=\"headerlink\" title=\"底层方案评审结果\"></a>底层方案评审结果</h2><p>以下是评审得出的新底层v4.0需要满足的要求，如下：</p>\n<p>1、Das和oran共用底层（v4.0）<br>2、Das应用层不需修改<br>3、Das不带boot备份底层可以升级新版本<br>4、Oran新旧版本互相升级版本，不会挂掉<br>5、Das带boot备份版本（&gt;&#x3D;v1.5）不能升级到v4.0版本<br>6、V4.0适用范围在制、库存、返修 </p>\n<h2 id=\"结果评析\"><a href=\"#结果评析\" class=\"headerlink\" title=\"结果评析\"></a>结果评析</h2><ul>\n<li>产线目前das带boot版本(&gt;&#x3D;v1.5)是大改过底层分区的，与当前ORAN底层、以前ORAN底层、以前DAS底层均不兼容，无法通过在线升级进行更新。</li>\n<li>DAS带boot备份版本(&gt;&#x3D;v1.5),无法与现网中ORAN设备进行兼容，当前似乎也没有ORAN版本与之搭配使用。</li>\n<li>该新方案仅需满足在制、库存、返修设备的适用范围，不需要兼容当前产线最新das设备，似乎也没法进行兼容。</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<div align=\"center\">\n<font size=7 > M2RU底层详细设计\n\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n<table>\n<thead>\n<tr>\n<th>版本</th>\n<th>简介</th>\n<th>编辑日期</th>\n<th>作者</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>V0.1</td>\n<td>初稿</td>\n<td>2022-03-15</td>\n<td>January</td>\n</tr>\n</tbody></table>\n</div>\n\n<div STYLE=\"page-break-after: always;\"></div>\n\n<div align=\"center\">\n<font size=7 > \n目录\n\n</font>\n</div>\n\n<p>[toc]</p>\n<div STYLE=\"page-break-after: always;\"></div>\n#综述\n\n<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h1><h2 id=\"详细设计背景\"><a href=\"#详细设计背景\" class=\"headerlink\" title=\"详细设计背景\"></a>详细设计背景</h2><ul>\n<li><font color=\"black\">m2ru-oran底层只有一个boot备份，一旦启动坏掉，设备即刻成砖，急需提高设备容错率</font></li>\n<li><font color=\"black\">目前产线生产流程中，ORAN设备需要在DAS设备基础上进行烧写底层，才能转换成ORAN设备，增加了产线负担</font></li>\n<li><font color=\"black\">外场das设备升级成oran设备过程中，往往伴随着升级风险</font></li>\n</ul>\n<h2 id=\"详细设计目的\"><a href=\"#详细设计目的\" class=\"headerlink\" title=\"详细设计目的\"></a>详细设计目的</h2><ul>\n<li>boot启动分区增加至4个，大大减小设备启动失败的风险</li>\n<li>减少产线在线升级oran底层带来的额外操作及风险</li>\n<li>合并das&#x2F;oran底层版本，减少底层后期维护成本</li>\n</ul>\n<hr>\n<h1 id=\"2-模块设计\"><a href=\"#2-模块设计\" class=\"headerlink\" title=\"2. 模块设计\"></a>2. 模块设计</h1><h2 id=\"UBOOT模块设计\"><a href=\"#UBOOT模块设计\" class=\"headerlink\" title=\"UBOOT模块设计\"></a>UBOOT模块设计</h2><h3 id=\"uboot启动逻辑设计\"><a href=\"#uboot启动逻辑设计\" class=\"headerlink\" title=\"uboot启动逻辑设计\"></a>uboot启动逻辑设计</h3><ul>\n<li>在uboot加载内核kernel时，通过解析kernel头部信息获取内核加载地址、设备树等信息</li>\n<li>通过获取到的fit_uname_config到kernel头部轮询到设备树节点(按字符串为key值)，再将其加载到内存中</li>\n<li>uboot将设备树dtb的地址传给kernel，然后进行加载内核，控制权移交给内核即可</li>\n</ul>\n<h3 id=\"设备识别das-oran\"><a href=\"#设备识别das-oran\" class=\"headerlink\" title=\"设备识别das&#x2F;oran\"></a>设备识别das&#x2F;oran</h3><ul>\n<li>设备采用环境变量的方式进行das&#x2F;oran机型识别</li>\n<li>该环境变量名称为das_platform</li>\n<li>当设备处于默认情况下，das_platform环境变量为空，该设备为oran设备</li>\n<li>当setenv das_platform <a href=\"mailto:&#x64;&#97;&#115;&#x40;&#115;&#x79;&#x73;&#x74;&#101;&#109;&#x2d;&#116;&#x6f;&#112;&#46;&#x64;&#116;&#x62;\">&#x64;&#97;&#115;&#x40;&#115;&#x79;&#x73;&#x74;&#101;&#109;&#x2d;&#116;&#x6f;&#112;&#46;&#x64;&#116;&#x62;</a>时，设备转变成das设备</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A[fsbl] --&gt; B(uboot) </span><br><span class=\"line\">    B --&gt; C&#123;platform&#125;</span><br><span class=\"line\">    C --&gt;|platform = das| D(das_dtb)</span><br><span class=\"line\">    C --&gt;|platform = NULL| E(oran_dtb)</span><br><span class=\"line\">    E --&gt;|加载| G[kernel]</span><br><span class=\"line\">    D --&gt; |加载| G</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"设备树模块设计\"><a href=\"#设备树模块设计\" class=\"headerlink\" title=\"设备树模块设计\"></a>设备树模块设计</h2><ul>\n<li>由于m2ru平台的das和oran的FPGA完全不同，无法做到兼容，故需要设备自己知道是oran还是das设备，以按照不同的FPGA版本加载对应的设备树，进而加载不同的设备驱动</li>\n<li>m2ru设备按照das和oran的FPGA的xsa文件进行分开编译各自平台设备树</li>\n<li>根据oran&#x2F;das项目需求，自行添加完善设备树</li>\n</ul>\n<h2 id=\"内核模块设计\"><a href=\"#内核模块设计\" class=\"headerlink\" title=\"内核模块设计\"></a>内核模块设计</h2><ul>\n<li>das&#x2F;oran共用驱动，如flash驱动、eth0驱动等不用特殊进行处理</li>\n<li>ptp驱动、ecpri&#x2F;cpri网卡驱动等务必使用设备树配置进行加载</li>\n<li>DTB文件按照<a href=\"mailto:&#x64;&#97;&#115;&#95;&#x66;&#x64;&#116;&#x40;&#x73;&#x79;&#115;&#x74;&#101;&#x6d;&#45;&#116;&#111;&#x70;&#x2e;&#x64;&#116;&#x62;\">&#x64;&#97;&#115;&#95;&#x66;&#x64;&#116;&#x40;&#x73;&#x79;&#115;&#x74;&#101;&#x6d;&#45;&#116;&#111;&#x70;&#x2e;&#x64;&#116;&#x62;</a>&#x2F;<a href=\"mailto:&#102;&#x64;&#116;&#x40;&#115;&#121;&#x73;&#116;&#x65;&#x6d;&#45;&#116;&#x6f;&#112;&#46;&#100;&#x74;&#98;\">&#102;&#x64;&#116;&#x40;&#115;&#121;&#x73;&#116;&#x65;&#x6d;&#45;&#116;&#x6f;&#112;&#46;&#100;&#x74;&#98;</a>描述符链接到image文件中<div align=\"center\"></li>\n</ul>\n<p><img src=\"/picture/pic1.svg\" alt=\"bd\"></p>\n</div>\n\n<h2 id=\"驱动模块设计\"><a href=\"#驱动模块设计\" class=\"headerlink\" title=\"驱动模块设计\"></a>驱动模块设计</h2><h3 id=\"ecpri-cpri网卡加载\"><a href=\"#ecpri-cpri网卡加载\" class=\"headerlink\" title=\"ecpri&#x2F;cpri网卡加载\"></a>ecpri&#x2F;cpri网卡加载</h3><ul>\n<li>das设备加载cpri网卡，对时钟没有额外要求，故不受影响，可正常进行加载</li>\n<li>oran设备加载ecpri网卡时，由于该网卡需要n850晶振输出时钟作为clk，因此，加载该网卡时需要配置850晶振</li>\n<li>目前m2的设计是850晶振通过FPGA连线到ARM侧，因此需要提前加载FPGA，然后控制850时钟，最后加载ecpri网卡</li>\n</ul>\n<p>此时有个疑问，没有加载FPGA的话，xilinx_axienet驱动能否正常加载PHY驱动，因为此时mdio是找不到PHY的(由FPGA模拟产生)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(axienet_open) --&gt; B(axienet_device_reset) -.-&gt; K(重置xilinx_axienet mac)</span><br><span class=\"line\">    A --&gt; C(of_phy_connect) </span><br><span class=\"line\">    C --&gt; D(phy_connect_direct) --&gt;E(phy_init_hw)</span><br><span class=\"line\">    D --&gt; X(phy_start_machine) -.-&gt; 开启phy状态机</span><br><span class=\"line\">    C --&gt; T(of_phy_find_device) --&gt;bus_find_device-.-&gt;找到PHY设备</span><br><span class=\"line\">    E --&gt; F(phy_device_reset)</span><br><span class=\"line\">    E --&gt; G(soft_reset)</span><br><span class=\"line\">    E --&gt; H(phy_scan_fixups)</span><br></pre></td></tr></table></figure>\n<p>通过上述梳理源码可知，xilinx_axienet的Mac驱动初始化只针对Mac层操作，虚拟phy并不需要对应的驱动，包含在axienet_open操作中</p>\n<p><strong>DAS设备加载cpri网卡加载顺序为：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(kernel) --&gt; |加载|B(FPGA.bit) </span><br><span class=\"line\">    B --&gt; |启用网卡| D(ifconfig eth0 up)-.-&gt;E(使用网卡)</span><br></pre></td></tr></table></figure>\n<p><strong>或者</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(kernel) --&gt; |启用网卡| D(ifconfig eth0 up) --&gt; |加载|B(FPGA.bit) -.-&gt;E(使用网卡)</span><br></pre></td></tr></table></figure>\n<p><strong>ORAN设备加载ecpri网卡加载顺序为：</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">graph LR</span><br><span class=\"line\">    A(kernel) --&gt; |加载|B(FPGA.bit) </span><br><span class=\"line\">    B --&gt; |配置| C(n850时钟)</span><br><span class=\"line\">    C --&gt; |启用网卡| D(ifconfig eth0 up)</span><br></pre></td></tr></table></figure>\n<h3 id=\"ptp驱动加载\"><a href=\"#ptp驱动加载\" class=\"headerlink\" title=\"ptp驱动加载\"></a>ptp驱动加载</h3><p><strong>由于只有oran设备才有ptp驱动，故需要在驱动和设备树中进行修改</strong></p>\n<ul>\n<li>在oran平台的设备树中添加关于ptp的节点描述sunwave,timer-1588-2.0</li>\n<li>将sunwave_ptp_timer驱动移植到内核中进行加载，加载的描述符由设备树进行指定</li>\n<li>ptp驱动针对FPGA的timer模块进行相应的功能控制和中断注册</li>\n</ul>\n<h2 id=\"设备分区划分\"><a href=\"#设备分区划分\" class=\"headerlink\" title=\"设备分区划分\"></a>设备分区划分</h2><div align=\"center\">\n\n<p><img src=\"/picture/pic_partition.svg\" alt=\"bd\"></p>\n</div>\n\n<h2 id=\"升级模块设计\"><a href=\"#升级模块设计\" class=\"headerlink\" title=\"升级模块设计\"></a>升级模块设计</h2><h4 id=\"向前升级兼容\"><a href=\"#向前升级兼容\" class=\"headerlink\" title=\"向前升级兼容\"></a><font color=\"black\">向前升级兼容</font></h4><h5 id=\"需求描述\"><a href=\"#需求描述\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h5><ul>\n<li>在外的oran设备，有些客户需要对以前的大包进行升级，因为该以前版本大包是其仔细验证过的版本，是可靠的，只认准该版本进行升级，所以m2ru项目需要向前升级进行兼容。</li>\n<li>升级过程中，设备应用层数据确保不能丢失。</li>\n</ul>\n<h5 id=\"存在问题\"><a href=\"#存在问题\" class=\"headerlink\" title=\"存在问题\"></a>存在问题</h5><ul>\n<li>以前oran版本大包是自带底层升级包的，该底层版本是没有备份系统的，分区划分也不一致，执行旧的大包中的升级底层脚本会导致设备挂掉。</li>\n<li>设备应用层的数据是不能丢失的，一旦分区改变，该ubi文件系统被破坏掉，arm等配置文件均会丢失</li>\n</ul>\n<h5 id=\"解决方案\"><a href=\"#解决方案\" class=\"headerlink\" title=\"解决方案\"></a>解决方案</h5><ul>\n<li>kernel分区和rootfs分区的flash相对偏移offset均保持不变，详情见下图分区划分对比。这样可以做到升级过程中不破坏rootfs及rootfs_bak分区，完好保留上层数据。</li>\n<li>boot分区(boot0)分配32M内存，用以保留升级以前boot文件的能力，还能保证当初底层默认bit文件(以前的oran设备是使用底层bit文件的，并不另行加载)</li>\n</ul>\n<div align=\"center\">\n\n<p><img src=\"/picture/pic_compare_partition.svg\" alt=\"bd\"></p>\n</div>\n\n<h5 id=\"结果验证\"><a href=\"#结果验证\" class=\"headerlink\" title=\"结果验证\"></a>结果验证</h5><ul>\n<li>由于目前在线升级系统，均是使用mtd进行升级，因此按照之前升级脚本逻辑，会对mtd0&#x2F;mtd2进行擦写操作。</li>\n<li>对于新底层而言，擦写以前的boot是可以执行成功的(mtd0空间足够)，但mtd2由于分区改变只有2M，因此读写操作失败，退出升级流程。</li>\n<li>结果而言，设备重启后，设备的boot换成了旧大包中的boot，boot_bak1&#x2F;boot_bak3仍为升级前boot备份，boot_bak2被擦掉。kernel保留升级前内核。</li>\n<li>设备可以正常运行，应用层数据完好无损，已通过测试验证。</li>\n</ul>\n<h5 id=\"升级风险\"><a href=\"#升级风险\" class=\"headerlink\" title=\"升级风险\"></a>升级风险</h5><ul>\n<li>以前存在某个版本的大包里的升级脚本，有个升级逻辑是，只要读写flash不一致，就会无限次数进行升级操作，断电重启后仍然会继续无线升级。该大包会导致设备陷入无限重启中，设备无法正常运行。</li>\n<li>由于需要向前兼容，所以，该版本是没有对boot进行备份的，仅有boot_bak1&#x2F;3的新底层boot备份，可能会有坏块等未知风险存在，建议升级使用最新的底层包。</li>\n</ul>\n<h4 id=\"向后升级兼容\"><a href=\"#向后升级兼容\" class=\"headerlink\" title=\"向后升级兼容\"></a><font color=\"black\">向后升级兼容</font></h4><ul>\n<li>向后进行兼容升级，由于分区一致，故可以直接使用升级脚本进行升级操作即可。</li>\n<li>目前经过测试，该升级功能一切正常，未出现升级失败情况。</li>\n</ul>\n<h4 id=\"das-oran互相升级\"><a href=\"#das-oran互相升级\" class=\"headerlink\" title=\"das&#x2F;oran互相升级\"></a><font color=\"black\">das&#x2F;oran互相升级</font></h4><h5 id=\"需求描述-1\"><a href=\"#需求描述-1\" class=\"headerlink\" title=\"需求描述\"></a>需求描述</h5><ul>\n<li>产线生产过程中，先是生产处das版本，然后通过在线升级成oran版本进行测试的</li>\n<li>外面的das设备也是有需求转换成oran设备的</li>\n<li>某些特点情况下，oran设备需要保留转换成das设备的能力</li>\n</ul>\n<h5 id=\"实现方案\"><a href=\"#实现方案\" class=\"headerlink\" title=\"实现方案\"></a>实现方案</h5><p><strong><font size = \"3\" color = \"purple\">DAS设备转换成ORAN设备：</font></strong></p>\n<ul>\n<li>擦除env分区，或者擦除das_platform环境变量</li>\n<li>升级大包中包含kernel_load_fpga.sh脚本进行替换，默认使用initramfs文件系统中的bit文件进行加载，若&#x2F;dryfly&#x2F;app&#x2F;FPGA.bit存在即加载最新的bit文件</li>\n<li>使用n850时钟配置工具配置ORAN时钟</li>\n<li>再启用ecpri网卡进行使用</li>\n</ul>\n<p><strong><font size = \"3\" color = \"purple\">ORAN设备转换成DAS设备：</font></strong></p>\n<ul>\n<li>烧写env分区，或者修改das_platform环境变量</li>\n<li>升级大包中将&#x2F;drgfly&#x2F;etc&#x2F;kernel_load_fpga.sh脚本使用&#x2F;etc&#x2F;kernel_load_fpga.sh底层默认脚本进行替换</li>\n</ul>\n<p><strong><font size = \"3\" color = \"purple\">产线裸板升级成DAS设备：</font></strong></p>\n<ul>\n<li>产线自动烧写脚本中增加一行命令”setenv das_platform <a href=\"mailto:&#100;&#97;&#115;&#x40;&#x73;&#x79;&#115;&#116;&#x65;&#109;&#x2d;&#116;&#x6f;&#x70;&#46;&#x64;&#116;&#x62;\">&#100;&#97;&#115;&#x40;&#x73;&#x79;&#115;&#116;&#x65;&#109;&#x2d;&#116;&#x6f;&#x70;&#46;&#x64;&#116;&#x62;</a>“ “seveenv”命令即可底层进行切换</li>\n</ul>\n<p><strong><font size = \"3\" color = \"purple\">注意事项：</font></strong></p>\n<ul>\n<li>理论上不支持ORAN设备切换成DAS设备，只是设计上保留该情况下设备的升级能力，实际测试也ok，但不建议。</li>\n<li>目前该设计底层不存在ORAN&#x2F;DAS底层，需搭配相应的上层才能切换到相应的平台。</li>\n</ul>\n<h1 id=\"接口设计\"><a href=\"#接口设计\" class=\"headerlink\" title=\"接口设计\"></a>接口设计</h1><h2 id=\"FPGA驱动接口设计\"><a href=\"#FPGA驱动接口设计\" class=\"headerlink\" title=\"FPGA驱动接口设计\"></a>FPGA驱动接口设计</h2><p><strong>略</strong></p>\n<h2 id=\"GPIO驱动接口设计\"><a href=\"#GPIO驱动接口设计\" class=\"headerlink\" title=\"GPIO驱动接口设计\"></a>GPIO驱动接口设计</h2><p><strong>略</strong></p>\n<h2 id=\"N850时钟驱动接口设计\"><a href=\"#N850时钟驱动接口设计\" class=\"headerlink\" title=\"N850时钟驱动接口设计\"></a>N850时钟驱动接口设计</h2><p><strong>略</strong></p>\n<h2 id=\"PTP状态-配置-驱动接口设计\"><a href=\"#PTP状态-配置-驱动接口设计\" class=\"headerlink\" title=\"PTP状态&#x2F;配置&#x2F;驱动接口设计\"></a>PTP状态&#x2F;配置&#x2F;驱动接口设计</h2><p><strong>略</strong></p>\n<h1 id=\"评审结果须知\"><a href=\"#评审结果须知\" class=\"headerlink\" title=\"评审结果须知\"></a>评审结果须知</h1><h2 id=\"底层方案评审结果\"><a href=\"#底层方案评审结果\" class=\"headerlink\" title=\"底层方案评审结果\"></a>底层方案评审结果</h2><p>以下是评审得出的新底层v4.0需要满足的要求，如下：</p>\n<p>1、Das和oran共用底层（v4.0）<br>2、Das应用层不需修改<br>3、Das不带boot备份底层可以升级新版本<br>4、Oran新旧版本互相升级版本，不会挂掉<br>5、Das带boot备份版本（&gt;&#x3D;v1.5）不能升级到v4.0版本<br>6、V4.0适用范围在制、库存、返修 </p>\n<h2 id=\"结果评析\"><a href=\"#结果评析\" class=\"headerlink\" title=\"结果评析\"></a>结果评析</h2><ul>\n<li>产线目前das带boot版本(&gt;&#x3D;v1.5)是大改过底层分区的，与当前ORAN底层、以前ORAN底层、以前DAS底层均不兼容，无法通过在线升级进行更新。</li>\n<li>DAS带boot备份版本(&gt;&#x3D;v1.5),无法与现网中ORAN设备进行兼容，当前似乎也没有ORAN版本与之搭配使用。</li>\n<li>该新方案仅需满足在制、库存、返修设备的适用范围，不需要兼容当前产线最新das设备，似乎也没法进行兼容。</li>\n</ul>\n"},{"title":"petalinux编译环境替换设计","date":"2020-05-19T16:00:00.000Z","_content":"<div align=\"center\">\n<font size=7 > petalinux编译环境替换设计\n\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n|版本|简介|编辑日期|作者|\n|---|----|----|----|\n|V1.0|初稿|2020/5/20|January|\n\n\n</div>\n\n\n#  1. 概述 \n\n## 设计背景\n\n1. petalinux环境占用内存过大，每个项目产品，都需要针对其创建一个petalinux的平台环境实测20G，每个项目实测26G，服务器上2022平台就占用了168G。\n2. petalinux编译过慢，快则40分钟，慢则两个小时，甚至更久。\n3. petalinux黑盒子较多，许多框架较为神秘，不知怎么编译，怎么实现，怎么链接的，全包含在他的编译工具里面。\n4. 编译过程中，出现各种错误，很难进行排查，常见错误python xxx错误，验证影响底层开发。\n5. 调试内核时，往往编个版本进行验证，需要花费许久时间，一点小改动，就得重新进行以小时为单位的编译时间花费。极其不人性化。\n6. busybox中的命令被xilinx内嵌进环境中，无法获取环境之外的命令支持。\n7. 要么得联网编译，网速感人，要么需要下载75G的环境安装包，占用内存太大。\n\n## 设计目的\n\n- 提高内核编译效率，有助于内核bug解决。\n- 减少搭建环境造成的资源浪费。（内存资源和搭建成本）\n- 底层开发项目复用。（petalinux环境有权限要求，需创建人权限才能编译）\n- 开源项目。\n\n# 2. petalinux环境介绍\n\n1. petalinux环境搭建\n    - xilinx官网下载petalinux-v2019.2-final-installer.run（以19版为例）\n    - 服务器/虚拟机下载好一系列环境库（python zlib1g-dev gcc-multilib zlib1g:i386 screen pax等）\n    - 运行run文件开始搭建petalinux环境（耗时很久）\n\n2. 创建项目及编译前准备\n    - petalinux-create --type project --template zynqMP --name test(创建项目)\n    - 生成源码（每次创建项目都需要重新生成源码，2015以后均不可复用）\n    - petalinux-config（配置各种环境，UBOOT、kernel、rootfs、config，uboot和kernel的config文件不知逻辑保存）\n\n3. 各个模块进行编译\n    - petalinux-build -c u-boot(编译UBOOT)\n    - petalinux-build -c kernel(编译kernel)\n    - petalinux-build -c rootfs(编译rootfs)\n    - petalinux-build -c device-tree(编译device-tree)\n\n4. 每次编译都需要40+min,第一次编译甚至更久。\n\n# 3. 设计思路\n\n## 底层内核image.ub组成\n\n- Linux内核编译出来的Image.gz（选择内核压缩方式为gzip）\n- rootfs.cpio.gz（包含busybox及一些底层命令和脚本文件）\n- system.dtb（设备树）\n\n## Linux内核编译\n\n- 官网下载Linux内核源码，目前下载的是和xilinx同版本内核linux-5.15.19\n- 下载arm官网编译器aarch64-none-linux-gnu-gcc，不采用xilinx的aarch64-linux-gnu-gcc\n- 移植arm芯片的soc及platform信息，以及一些xilinx驱动（dma、clk等xilinx打过补丁）\n- 配置linux内核config。（由于是标准内核，config文件都可找到）\n- 直接make进行编译内核，生成目录就在arch/arm64/boot/\n\n## rootfs编译\n\n- rootfs只是命令集合体和脚本文件\n- petalinux增减命令功能，可下载最新的busybox命令库，在busybox中选定需要的命令进行编译替换。\n- 脚本启动文件等，我直接借用A3的rootfs文件，暂未深入研究，不影响编译环境。\n- 用户名密码/shell命令行提示符等，均可通过修改passwd/host等实现（已完成测试）\n\n## 设备树编译\n\n- 目前我是将解析出来的FPGA的xsa文件移植到arch/arm64/boot/dts中\n- 通过设备树中的include链接成一个system.dts\n- 和linux内核一起编译成system.dtb，生成目录就在arch/arm64/boot/dts\n\n## 生成image.ub文件\n\n- 通过mkimage命令将Image.gz/rootfs.cpio.gz/system.dtb文件进行链接生成image.ub（xilinx同款链接方式）\n- 该种编译内核方式是linux官方给的一种参考，故与xilinx无关，暂不修改\n\n# 4. 个人测试结果\n\n1. 内核可以稳定启动，内核相关启动日志及驱动打印和petalinux环境生成的一模一样\n2. 网卡、串口、N850驱动、GPIO驱动、硬核驱动、UBI文件系统挂载正常、FPGA加载OK、WEB端显示正常（查询、操作等）、ARM运行未见异常。\n3. 底层自测表格测试OK，未深入测试。\n4. 内核编译花费3分钟，且使用几核编译均可参数控制。\n5. 内核占用内存1.5G,压缩包800MB。进行备份，可做到如ARM代码压缩备份。不依赖权限问题,指定编译器即可编译。\n\n# 5. 风险评估\n\n1. 稳定性风险，设备没有经过长时间稳定性测试，无法保证稳定性。\n2. 在线升级、网卡驱动等一些列，均只做过一次性测试，未做压力测试，故无法保证功能完整性。\n3. 设备性能可能存在风险，未做任何性能测试，无法保证性能。\n\n# 6. 工作量评估\n\n## 初次编译\n\n- 根据xilinx SDK源码移植xilinx相关驱动及控制器、平台信息等\n- 配置内核的config文件\n- 根据xsa，使用petalinux生成设备树（目前未研究设备树该如何生成）\n- 移植设备树到内核，进行编译\n- 按项目需求确定busybox的命令库及启动顺序\n\n## 二次编译/其他平台\n\n- 内核源码直接解压缩复用\n- 若是其他平台，生成设备树后替换设备树即可\n- 按实际项目需求进行处理\n\n# 7. 设计总结\n\n此次设计属于解决底层开发人员的去繁就简，提高开发效率，减少内存占用和提高可复用性，避免严重依赖xilinx而做的技术研究。单就设备底层而言，未有任何性能优化和提高的地方，只是给公司提供了另一种底层开发的思路。\n\n","source":"_posts/petalinux.md","raw":"---\ntitle: petalinux编译环境替换设计\ndate: 2020-05-20\ntags:\n- Linux\n---\n<div align=\"center\">\n<font size=7 > petalinux编译环境替换设计\n\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n|版本|简介|编辑日期|作者|\n|---|----|----|----|\n|V1.0|初稿|2020/5/20|January|\n\n\n</div>\n\n\n#  1. 概述 \n\n## 设计背景\n\n1. petalinux环境占用内存过大，每个项目产品，都需要针对其创建一个petalinux的平台环境实测20G，每个项目实测26G，服务器上2022平台就占用了168G。\n2. petalinux编译过慢，快则40分钟，慢则两个小时，甚至更久。\n3. petalinux黑盒子较多，许多框架较为神秘，不知怎么编译，怎么实现，怎么链接的，全包含在他的编译工具里面。\n4. 编译过程中，出现各种错误，很难进行排查，常见错误python xxx错误，验证影响底层开发。\n5. 调试内核时，往往编个版本进行验证，需要花费许久时间，一点小改动，就得重新进行以小时为单位的编译时间花费。极其不人性化。\n6. busybox中的命令被xilinx内嵌进环境中，无法获取环境之外的命令支持。\n7. 要么得联网编译，网速感人，要么需要下载75G的环境安装包，占用内存太大。\n\n## 设计目的\n\n- 提高内核编译效率，有助于内核bug解决。\n- 减少搭建环境造成的资源浪费。（内存资源和搭建成本）\n- 底层开发项目复用。（petalinux环境有权限要求，需创建人权限才能编译）\n- 开源项目。\n\n# 2. petalinux环境介绍\n\n1. petalinux环境搭建\n    - xilinx官网下载petalinux-v2019.2-final-installer.run（以19版为例）\n    - 服务器/虚拟机下载好一系列环境库（python zlib1g-dev gcc-multilib zlib1g:i386 screen pax等）\n    - 运行run文件开始搭建petalinux环境（耗时很久）\n\n2. 创建项目及编译前准备\n    - petalinux-create --type project --template zynqMP --name test(创建项目)\n    - 生成源码（每次创建项目都需要重新生成源码，2015以后均不可复用）\n    - petalinux-config（配置各种环境，UBOOT、kernel、rootfs、config，uboot和kernel的config文件不知逻辑保存）\n\n3. 各个模块进行编译\n    - petalinux-build -c u-boot(编译UBOOT)\n    - petalinux-build -c kernel(编译kernel)\n    - petalinux-build -c rootfs(编译rootfs)\n    - petalinux-build -c device-tree(编译device-tree)\n\n4. 每次编译都需要40+min,第一次编译甚至更久。\n\n# 3. 设计思路\n\n## 底层内核image.ub组成\n\n- Linux内核编译出来的Image.gz（选择内核压缩方式为gzip）\n- rootfs.cpio.gz（包含busybox及一些底层命令和脚本文件）\n- system.dtb（设备树）\n\n## Linux内核编译\n\n- 官网下载Linux内核源码，目前下载的是和xilinx同版本内核linux-5.15.19\n- 下载arm官网编译器aarch64-none-linux-gnu-gcc，不采用xilinx的aarch64-linux-gnu-gcc\n- 移植arm芯片的soc及platform信息，以及一些xilinx驱动（dma、clk等xilinx打过补丁）\n- 配置linux内核config。（由于是标准内核，config文件都可找到）\n- 直接make进行编译内核，生成目录就在arch/arm64/boot/\n\n## rootfs编译\n\n- rootfs只是命令集合体和脚本文件\n- petalinux增减命令功能，可下载最新的busybox命令库，在busybox中选定需要的命令进行编译替换。\n- 脚本启动文件等，我直接借用A3的rootfs文件，暂未深入研究，不影响编译环境。\n- 用户名密码/shell命令行提示符等，均可通过修改passwd/host等实现（已完成测试）\n\n## 设备树编译\n\n- 目前我是将解析出来的FPGA的xsa文件移植到arch/arm64/boot/dts中\n- 通过设备树中的include链接成一个system.dts\n- 和linux内核一起编译成system.dtb，生成目录就在arch/arm64/boot/dts\n\n## 生成image.ub文件\n\n- 通过mkimage命令将Image.gz/rootfs.cpio.gz/system.dtb文件进行链接生成image.ub（xilinx同款链接方式）\n- 该种编译内核方式是linux官方给的一种参考，故与xilinx无关，暂不修改\n\n# 4. 个人测试结果\n\n1. 内核可以稳定启动，内核相关启动日志及驱动打印和petalinux环境生成的一模一样\n2. 网卡、串口、N850驱动、GPIO驱动、硬核驱动、UBI文件系统挂载正常、FPGA加载OK、WEB端显示正常（查询、操作等）、ARM运行未见异常。\n3. 底层自测表格测试OK，未深入测试。\n4. 内核编译花费3分钟，且使用几核编译均可参数控制。\n5. 内核占用内存1.5G,压缩包800MB。进行备份，可做到如ARM代码压缩备份。不依赖权限问题,指定编译器即可编译。\n\n# 5. 风险评估\n\n1. 稳定性风险，设备没有经过长时间稳定性测试，无法保证稳定性。\n2. 在线升级、网卡驱动等一些列，均只做过一次性测试，未做压力测试，故无法保证功能完整性。\n3. 设备性能可能存在风险，未做任何性能测试，无法保证性能。\n\n# 6. 工作量评估\n\n## 初次编译\n\n- 根据xilinx SDK源码移植xilinx相关驱动及控制器、平台信息等\n- 配置内核的config文件\n- 根据xsa，使用petalinux生成设备树（目前未研究设备树该如何生成）\n- 移植设备树到内核，进行编译\n- 按项目需求确定busybox的命令库及启动顺序\n\n## 二次编译/其他平台\n\n- 内核源码直接解压缩复用\n- 若是其他平台，生成设备树后替换设备树即可\n- 按实际项目需求进行处理\n\n# 7. 设计总结\n\n此次设计属于解决底层开发人员的去繁就简，提高开发效率，减少内存占用和提高可复用性，避免严重依赖xilinx而做的技术研究。单就设备底层而言，未有任何性能优化和提高的地方，只是给公司提供了另一种底层开发的思路。\n\n","slug":"petalinux","published":1,"updated":"2023-08-30T06:38:42.629Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllxdkidx00098sm4hyaw2qpq","content":"<div align=\"center\">\n<font size=7 > petalinux编译环境替换设计\n\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n<table>\n<thead>\n<tr>\n<th>版本</th>\n<th>简介</th>\n<th>编辑日期</th>\n<th>作者</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>V1.0</td>\n<td>初稿</td>\n<td>2020&#x2F;5&#x2F;20</td>\n<td>January</td>\n</tr>\n</tbody></table>\n</div>\n\n\n<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h1><h2 id=\"设计背景\"><a href=\"#设计背景\" class=\"headerlink\" title=\"设计背景\"></a>设计背景</h2><ol>\n<li>petalinux环境占用内存过大，每个项目产品，都需要针对其创建一个petalinux的平台环境实测20G，每个项目实测26G，服务器上2022平台就占用了168G。</li>\n<li>petalinux编译过慢，快则40分钟，慢则两个小时，甚至更久。</li>\n<li>petalinux黑盒子较多，许多框架较为神秘，不知怎么编译，怎么实现，怎么链接的，全包含在他的编译工具里面。</li>\n<li>编译过程中，出现各种错误，很难进行排查，常见错误python xxx错误，验证影响底层开发。</li>\n<li>调试内核时，往往编个版本进行验证，需要花费许久时间，一点小改动，就得重新进行以小时为单位的编译时间花费。极其不人性化。</li>\n<li>busybox中的命令被xilinx内嵌进环境中，无法获取环境之外的命令支持。</li>\n<li>要么得联网编译，网速感人，要么需要下载75G的环境安装包，占用内存太大。</li>\n</ol>\n<h2 id=\"设计目的\"><a href=\"#设计目的\" class=\"headerlink\" title=\"设计目的\"></a>设计目的</h2><ul>\n<li>提高内核编译效率，有助于内核bug解决。</li>\n<li>减少搭建环境造成的资源浪费。（内存资源和搭建成本）</li>\n<li>底层开发项目复用。（petalinux环境有权限要求，需创建人权限才能编译）</li>\n<li>开源项目。</li>\n</ul>\n<h1 id=\"2-petalinux环境介绍\"><a href=\"#2-petalinux环境介绍\" class=\"headerlink\" title=\"2. petalinux环境介绍\"></a>2. petalinux环境介绍</h1><ol>\n<li><p>petalinux环境搭建</p>\n<ul>\n<li>xilinx官网下载petalinux-v2019.2-final-installer.run（以19版为例）</li>\n<li>服务器&#x2F;虚拟机下载好一系列环境库（python zlib1g-dev gcc-multilib zlib1g:i386 screen pax等）</li>\n<li>运行run文件开始搭建petalinux环境（耗时很久）</li>\n</ul>\n</li>\n<li><p>创建项目及编译前准备</p>\n<ul>\n<li>petalinux-create –type project –template zynqMP –name test(创建项目)</li>\n<li>生成源码（每次创建项目都需要重新生成源码，2015以后均不可复用）</li>\n<li>petalinux-config（配置各种环境，UBOOT、kernel、rootfs、config，uboot和kernel的config文件不知逻辑保存）</li>\n</ul>\n</li>\n<li><p>各个模块进行编译</p>\n<ul>\n<li>petalinux-build -c u-boot(编译UBOOT)</li>\n<li>petalinux-build -c kernel(编译kernel)</li>\n<li>petalinux-build -c rootfs(编译rootfs)</li>\n<li>petalinux-build -c device-tree(编译device-tree)</li>\n</ul>\n</li>\n<li><p>每次编译都需要40+min,第一次编译甚至更久。</p>\n</li>\n</ol>\n<h1 id=\"3-设计思路\"><a href=\"#3-设计思路\" class=\"headerlink\" title=\"3. 设计思路\"></a>3. 设计思路</h1><h2 id=\"底层内核image-ub组成\"><a href=\"#底层内核image-ub组成\" class=\"headerlink\" title=\"底层内核image.ub组成\"></a>底层内核image.ub组成</h2><ul>\n<li>Linux内核编译出来的Image.gz（选择内核压缩方式为gzip）</li>\n<li>rootfs.cpio.gz（包含busybox及一些底层命令和脚本文件）</li>\n<li>system.dtb（设备树）</li>\n</ul>\n<h2 id=\"Linux内核编译\"><a href=\"#Linux内核编译\" class=\"headerlink\" title=\"Linux内核编译\"></a>Linux内核编译</h2><ul>\n<li>官网下载Linux内核源码，目前下载的是和xilinx同版本内核linux-5.15.19</li>\n<li>下载arm官网编译器aarch64-none-linux-gnu-gcc，不采用xilinx的aarch64-linux-gnu-gcc</li>\n<li>移植arm芯片的soc及platform信息，以及一些xilinx驱动（dma、clk等xilinx打过补丁）</li>\n<li>配置linux内核config。（由于是标准内核，config文件都可找到）</li>\n<li>直接make进行编译内核，生成目录就在arch&#x2F;arm64&#x2F;boot&#x2F;</li>\n</ul>\n<h2 id=\"rootfs编译\"><a href=\"#rootfs编译\" class=\"headerlink\" title=\"rootfs编译\"></a>rootfs编译</h2><ul>\n<li>rootfs只是命令集合体和脚本文件</li>\n<li>petalinux增减命令功能，可下载最新的busybox命令库，在busybox中选定需要的命令进行编译替换。</li>\n<li>脚本启动文件等，我直接借用A3的rootfs文件，暂未深入研究，不影响编译环境。</li>\n<li>用户名密码&#x2F;shell命令行提示符等，均可通过修改passwd&#x2F;host等实现（已完成测试）</li>\n</ul>\n<h2 id=\"设备树编译\"><a href=\"#设备树编译\" class=\"headerlink\" title=\"设备树编译\"></a>设备树编译</h2><ul>\n<li>目前我是将解析出来的FPGA的xsa文件移植到arch&#x2F;arm64&#x2F;boot&#x2F;dts中</li>\n<li>通过设备树中的include链接成一个system.dts</li>\n<li>和linux内核一起编译成system.dtb，生成目录就在arch&#x2F;arm64&#x2F;boot&#x2F;dts</li>\n</ul>\n<h2 id=\"生成image-ub文件\"><a href=\"#生成image-ub文件\" class=\"headerlink\" title=\"生成image.ub文件\"></a>生成image.ub文件</h2><ul>\n<li>通过mkimage命令将Image.gz&#x2F;rootfs.cpio.gz&#x2F;system.dtb文件进行链接生成image.ub（xilinx同款链接方式）</li>\n<li>该种编译内核方式是linux官方给的一种参考，故与xilinx无关，暂不修改</li>\n</ul>\n<h1 id=\"4-个人测试结果\"><a href=\"#4-个人测试结果\" class=\"headerlink\" title=\"4. 个人测试结果\"></a>4. 个人测试结果</h1><ol>\n<li>内核可以稳定启动，内核相关启动日志及驱动打印和petalinux环境生成的一模一样</li>\n<li>网卡、串口、N850驱动、GPIO驱动、硬核驱动、UBI文件系统挂载正常、FPGA加载OK、WEB端显示正常（查询、操作等）、ARM运行未见异常。</li>\n<li>底层自测表格测试OK，未深入测试。</li>\n<li>内核编译花费3分钟，且使用几核编译均可参数控制。</li>\n<li>内核占用内存1.5G,压缩包800MB。进行备份，可做到如ARM代码压缩备份。不依赖权限问题,指定编译器即可编译。</li>\n</ol>\n<h1 id=\"5-风险评估\"><a href=\"#5-风险评估\" class=\"headerlink\" title=\"5. 风险评估\"></a>5. 风险评估</h1><ol>\n<li>稳定性风险，设备没有经过长时间稳定性测试，无法保证稳定性。</li>\n<li>在线升级、网卡驱动等一些列，均只做过一次性测试，未做压力测试，故无法保证功能完整性。</li>\n<li>设备性能可能存在风险，未做任何性能测试，无法保证性能。</li>\n</ol>\n<h1 id=\"6-工作量评估\"><a href=\"#6-工作量评估\" class=\"headerlink\" title=\"6. 工作量评估\"></a>6. 工作量评估</h1><h2 id=\"初次编译\"><a href=\"#初次编译\" class=\"headerlink\" title=\"初次编译\"></a>初次编译</h2><ul>\n<li>根据xilinx SDK源码移植xilinx相关驱动及控制器、平台信息等</li>\n<li>配置内核的config文件</li>\n<li>根据xsa，使用petalinux生成设备树（目前未研究设备树该如何生成）</li>\n<li>移植设备树到内核，进行编译</li>\n<li>按项目需求确定busybox的命令库及启动顺序</li>\n</ul>\n<h2 id=\"二次编译-其他平台\"><a href=\"#二次编译-其他平台\" class=\"headerlink\" title=\"二次编译&#x2F;其他平台\"></a>二次编译&#x2F;其他平台</h2><ul>\n<li>内核源码直接解压缩复用</li>\n<li>若是其他平台，生成设备树后替换设备树即可</li>\n<li>按实际项目需求进行处理</li>\n</ul>\n<h1 id=\"7-设计总结\"><a href=\"#7-设计总结\" class=\"headerlink\" title=\"7. 设计总结\"></a>7. 设计总结</h1><p>此次设计属于解决底层开发人员的去繁就简，提高开发效率，减少内存占用和提高可复用性，避免严重依赖xilinx而做的技术研究。单就设备底层而言，未有任何性能优化和提高的地方，只是给公司提供了另一种底层开发的思路。</p>\n","site":{"data":{}},"excerpt":"","more":"<div align=\"center\">\n<font size=7 > petalinux编译环境替换设计\n\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n<table>\n<thead>\n<tr>\n<th>版本</th>\n<th>简介</th>\n<th>编辑日期</th>\n<th>作者</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>V1.0</td>\n<td>初稿</td>\n<td>2020&#x2F;5&#x2F;20</td>\n<td>January</td>\n</tr>\n</tbody></table>\n</div>\n\n\n<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h1><h2 id=\"设计背景\"><a href=\"#设计背景\" class=\"headerlink\" title=\"设计背景\"></a>设计背景</h2><ol>\n<li>petalinux环境占用内存过大，每个项目产品，都需要针对其创建一个petalinux的平台环境实测20G，每个项目实测26G，服务器上2022平台就占用了168G。</li>\n<li>petalinux编译过慢，快则40分钟，慢则两个小时，甚至更久。</li>\n<li>petalinux黑盒子较多，许多框架较为神秘，不知怎么编译，怎么实现，怎么链接的，全包含在他的编译工具里面。</li>\n<li>编译过程中，出现各种错误，很难进行排查，常见错误python xxx错误，验证影响底层开发。</li>\n<li>调试内核时，往往编个版本进行验证，需要花费许久时间，一点小改动，就得重新进行以小时为单位的编译时间花费。极其不人性化。</li>\n<li>busybox中的命令被xilinx内嵌进环境中，无法获取环境之外的命令支持。</li>\n<li>要么得联网编译，网速感人，要么需要下载75G的环境安装包，占用内存太大。</li>\n</ol>\n<h2 id=\"设计目的\"><a href=\"#设计目的\" class=\"headerlink\" title=\"设计目的\"></a>设计目的</h2><ul>\n<li>提高内核编译效率，有助于内核bug解决。</li>\n<li>减少搭建环境造成的资源浪费。（内存资源和搭建成本）</li>\n<li>底层开发项目复用。（petalinux环境有权限要求，需创建人权限才能编译）</li>\n<li>开源项目。</li>\n</ul>\n<h1 id=\"2-petalinux环境介绍\"><a href=\"#2-petalinux环境介绍\" class=\"headerlink\" title=\"2. petalinux环境介绍\"></a>2. petalinux环境介绍</h1><ol>\n<li><p>petalinux环境搭建</p>\n<ul>\n<li>xilinx官网下载petalinux-v2019.2-final-installer.run（以19版为例）</li>\n<li>服务器&#x2F;虚拟机下载好一系列环境库（python zlib1g-dev gcc-multilib zlib1g:i386 screen pax等）</li>\n<li>运行run文件开始搭建petalinux环境（耗时很久）</li>\n</ul>\n</li>\n<li><p>创建项目及编译前准备</p>\n<ul>\n<li>petalinux-create –type project –template zynqMP –name test(创建项目)</li>\n<li>生成源码（每次创建项目都需要重新生成源码，2015以后均不可复用）</li>\n<li>petalinux-config（配置各种环境，UBOOT、kernel、rootfs、config，uboot和kernel的config文件不知逻辑保存）</li>\n</ul>\n</li>\n<li><p>各个模块进行编译</p>\n<ul>\n<li>petalinux-build -c u-boot(编译UBOOT)</li>\n<li>petalinux-build -c kernel(编译kernel)</li>\n<li>petalinux-build -c rootfs(编译rootfs)</li>\n<li>petalinux-build -c device-tree(编译device-tree)</li>\n</ul>\n</li>\n<li><p>每次编译都需要40+min,第一次编译甚至更久。</p>\n</li>\n</ol>\n<h1 id=\"3-设计思路\"><a href=\"#3-设计思路\" class=\"headerlink\" title=\"3. 设计思路\"></a>3. 设计思路</h1><h2 id=\"底层内核image-ub组成\"><a href=\"#底层内核image-ub组成\" class=\"headerlink\" title=\"底层内核image.ub组成\"></a>底层内核image.ub组成</h2><ul>\n<li>Linux内核编译出来的Image.gz（选择内核压缩方式为gzip）</li>\n<li>rootfs.cpio.gz（包含busybox及一些底层命令和脚本文件）</li>\n<li>system.dtb（设备树）</li>\n</ul>\n<h2 id=\"Linux内核编译\"><a href=\"#Linux内核编译\" class=\"headerlink\" title=\"Linux内核编译\"></a>Linux内核编译</h2><ul>\n<li>官网下载Linux内核源码，目前下载的是和xilinx同版本内核linux-5.15.19</li>\n<li>下载arm官网编译器aarch64-none-linux-gnu-gcc，不采用xilinx的aarch64-linux-gnu-gcc</li>\n<li>移植arm芯片的soc及platform信息，以及一些xilinx驱动（dma、clk等xilinx打过补丁）</li>\n<li>配置linux内核config。（由于是标准内核，config文件都可找到）</li>\n<li>直接make进行编译内核，生成目录就在arch&#x2F;arm64&#x2F;boot&#x2F;</li>\n</ul>\n<h2 id=\"rootfs编译\"><a href=\"#rootfs编译\" class=\"headerlink\" title=\"rootfs编译\"></a>rootfs编译</h2><ul>\n<li>rootfs只是命令集合体和脚本文件</li>\n<li>petalinux增减命令功能，可下载最新的busybox命令库，在busybox中选定需要的命令进行编译替换。</li>\n<li>脚本启动文件等，我直接借用A3的rootfs文件，暂未深入研究，不影响编译环境。</li>\n<li>用户名密码&#x2F;shell命令行提示符等，均可通过修改passwd&#x2F;host等实现（已完成测试）</li>\n</ul>\n<h2 id=\"设备树编译\"><a href=\"#设备树编译\" class=\"headerlink\" title=\"设备树编译\"></a>设备树编译</h2><ul>\n<li>目前我是将解析出来的FPGA的xsa文件移植到arch&#x2F;arm64&#x2F;boot&#x2F;dts中</li>\n<li>通过设备树中的include链接成一个system.dts</li>\n<li>和linux内核一起编译成system.dtb，生成目录就在arch&#x2F;arm64&#x2F;boot&#x2F;dts</li>\n</ul>\n<h2 id=\"生成image-ub文件\"><a href=\"#生成image-ub文件\" class=\"headerlink\" title=\"生成image.ub文件\"></a>生成image.ub文件</h2><ul>\n<li>通过mkimage命令将Image.gz&#x2F;rootfs.cpio.gz&#x2F;system.dtb文件进行链接生成image.ub（xilinx同款链接方式）</li>\n<li>该种编译内核方式是linux官方给的一种参考，故与xilinx无关，暂不修改</li>\n</ul>\n<h1 id=\"4-个人测试结果\"><a href=\"#4-个人测试结果\" class=\"headerlink\" title=\"4. 个人测试结果\"></a>4. 个人测试结果</h1><ol>\n<li>内核可以稳定启动，内核相关启动日志及驱动打印和petalinux环境生成的一模一样</li>\n<li>网卡、串口、N850驱动、GPIO驱动、硬核驱动、UBI文件系统挂载正常、FPGA加载OK、WEB端显示正常（查询、操作等）、ARM运行未见异常。</li>\n<li>底层自测表格测试OK，未深入测试。</li>\n<li>内核编译花费3分钟，且使用几核编译均可参数控制。</li>\n<li>内核占用内存1.5G,压缩包800MB。进行备份，可做到如ARM代码压缩备份。不依赖权限问题,指定编译器即可编译。</li>\n</ol>\n<h1 id=\"5-风险评估\"><a href=\"#5-风险评估\" class=\"headerlink\" title=\"5. 风险评估\"></a>5. 风险评估</h1><ol>\n<li>稳定性风险，设备没有经过长时间稳定性测试，无法保证稳定性。</li>\n<li>在线升级、网卡驱动等一些列，均只做过一次性测试，未做压力测试，故无法保证功能完整性。</li>\n<li>设备性能可能存在风险，未做任何性能测试，无法保证性能。</li>\n</ol>\n<h1 id=\"6-工作量评估\"><a href=\"#6-工作量评估\" class=\"headerlink\" title=\"6. 工作量评估\"></a>6. 工作量评估</h1><h2 id=\"初次编译\"><a href=\"#初次编译\" class=\"headerlink\" title=\"初次编译\"></a>初次编译</h2><ul>\n<li>根据xilinx SDK源码移植xilinx相关驱动及控制器、平台信息等</li>\n<li>配置内核的config文件</li>\n<li>根据xsa，使用petalinux生成设备树（目前未研究设备树该如何生成）</li>\n<li>移植设备树到内核，进行编译</li>\n<li>按项目需求确定busybox的命令库及启动顺序</li>\n</ul>\n<h2 id=\"二次编译-其他平台\"><a href=\"#二次编译-其他平台\" class=\"headerlink\" title=\"二次编译&#x2F;其他平台\"></a>二次编译&#x2F;其他平台</h2><ul>\n<li>内核源码直接解压缩复用</li>\n<li>若是其他平台，生成设备树后替换设备树即可</li>\n<li>按实际项目需求进行处理</li>\n</ul>\n<h1 id=\"7-设计总结\"><a href=\"#7-设计总结\" class=\"headerlink\" title=\"7. 设计总结\"></a>7. 设计总结</h1><p>此次设计属于解决底层开发人员的去繁就简，提高开发效率，减少内存占用和提高可复用性，避免严重依赖xilinx而做的技术研究。单就设备底层而言，未有任何性能优化和提高的地方，只是给公司提供了另一种底层开发的思路。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[{"post_id":"cllxdkidr00038sm4asyiar5r","tag_id":"cllxdkidt00058sm4h6p6gw4x","_id":"cllxdkidw00078sm47czl681d"},{"post_id":"cllxdkidt00048sm42otsaq5g","tag_id":"cllxdkidt00058sm4h6p6gw4x","_id":"cllxdkidx00088sm47bpv4q4f"},{"post_id":"cllxdkidx00098sm4hyaw2qpq","tag_id":"cllxdkidt00058sm4h6p6gw4x","_id":"cllxdkidz000a8sm41d2effn5"}],"Tag":[{"name":"Linux","_id":"cllxdkidt00058sm4h6p6gw4x"}]}}