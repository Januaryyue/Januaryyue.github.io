{"meta":{"version":1,"warehouse":"4.0.2"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-Landscape/source/css/style.styl","path":"css/style.styl","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-Landscape/source/js/jquery-3.6.4.min.js","path":"js/jquery-3.6.4.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-Landscape/source/js/script.js","path":"js/script.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-Landscape/source/fancybox/jquery.fancybox.min.css","path":"fancybox/jquery.fancybox.min.css","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-Landscape/source/fancybox/jquery.fancybox.min.js","path":"fancybox/jquery.fancybox.min.js","modified":1,"renderable":1},{"_id":"node_modules/hexo-theme-Landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/picture/pic2.drawio","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1683269865257},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1693207408726},{"_id":"source/_posts/kddi_mu底层版本详细设计.md","hash":"c2a4a6e15d8b737e33d78961507265a1fb1adbc8","modified":1693207804201},{"_id":"source/_posts/m2ru底层启动详细设计.md","hash":"100effc5b833d2560a1ddc49cdc8de5d95e7fe46","modified":1693207799497},{"_id":"source/_posts/petalinux.md","hash":"ae3eb0a92bc11673ab287c774eaccd2a42205287","modified":1693207980385},{"_id":"source/_posts/picture/pic-分区.svg","hash":"e9a73ec9e57649eddfe349dc34c57118595214f6","modified":1683271041984},{"_id":"source/_posts/picture/pic1.svg","hash":"90fe4e48722b03c92cbbe6a83c783ae5adba8ea1","modified":1683269617906},{"_id":"source/_posts/picture/pic1.drawio","hash":"e76caaef9635eca9e68b91571d07aeecfae3bc37","modified":1683267249670},{"_id":"source/_posts/picture/pic_compare_partition.svg","hash":"3350dbc34c84406b6e5af5b95ddcd148189ddf65","modified":1683339603081},{"_id":"source/_posts/picture/pic_partition.svg","hash":"c64aa60fb9010a4cf583a3159b4516fb242e763f","modified":1683279992197},{"_id":"node_modules/hexo-theme-Landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1693204563994},{"_id":"node_modules/hexo-theme-Landscape/README.md","hash":"1a9b279e6dd29fd19245f913f0c4a316ffaa62db","modified":1693204566148},{"_id":"node_modules/hexo-theme-Landscape/package.json","hash":"4bf95d52f77edf811f23f6d264a7493311a8d078","modified":1693204566143},{"_id":"node_modules/hexo-theme-Landscape/_config.yml","hash":"b608c1f1322760dce9805285a602a95832730a2e","modified":1693204566965},{"_id":"node_modules/hexo-theme-Landscape/languages/de-DE.yml","hash":"d29d1c4256b7ed9df42f511c2ff0a23ad5fd6c1f","modified":1693204566969},{"_id":"node_modules/hexo-theme-Landscape/languages/de.yml","hash":"3ebf0775abbee928c8d7bda943c191d166ded0d3","modified":1693204566971},{"_id":"node_modules/hexo-theme-Landscape/languages/default.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1693204566973},{"_id":"node_modules/hexo-theme-Landscape/languages/en-US.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1693204566997},{"_id":"node_modules/hexo-theme-Landscape/languages/en-GB.yml","hash":"ea5e6aee4cb14510793ac4593a3bddffe23e530c","modified":1693204566995},{"_id":"node_modules/hexo-theme-Landscape/languages/es-ES.yml","hash":"7008a8fc91f18d2a735864817b8ebda30c7a2c66","modified":1693204567014},{"_id":"node_modules/hexo-theme-Landscape/languages/en.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1693204566999},{"_id":"node_modules/hexo-theme-Landscape/languages/es.yml","hash":"76edb1171b86532ef12cfd15f5f2c1ac3949f061","modified":1693204567016},{"_id":"node_modules/hexo-theme-Landscape/languages/fr-FR.yml","hash":"8d09dbdab00a30a2870b56f7c0a7ca7deafa7b88","modified":1693204567018},{"_id":"node_modules/hexo-theme-Landscape/languages/fr.yml","hash":"415e1c580ced8e4ce20b3b0aeedc3610341c76fb","modified":1693204567040},{"_id":"node_modules/hexo-theme-Landscape/languages/hu-HU.yml","hash":"712d18664898fa21ba38d4973e90ef41a324ea25","modified":1693204567044},{"_id":"node_modules/hexo-theme-Landscape/languages/hu.yml","hash":"284d557130bf54a74e7dcef9d42096130e4d9550","modified":1693204567049},{"_id":"node_modules/hexo-theme-Landscape/languages/it-IT.yml","hash":"2cb6dc2fab9bd2dbe1c8bb869a9e8bf85a564fdd","modified":1693204567051},{"_id":"node_modules/hexo-theme-Landscape/languages/it.yml","hash":"89b7d91306b2c1a0f3ac023b657bf974f798a1e8","modified":1693204567054},{"_id":"node_modules/hexo-theme-Landscape/languages/ja-JP.yml","hash":"08481267e0c112e1f6855620f2837ec4c4a98bbd","modified":1693204567055},{"_id":"node_modules/hexo-theme-Landscape/languages/ja.yml","hash":"a73e1b9c80fd6e930e2628b393bfe3fb716a21a9","modified":1693204567090},{"_id":"node_modules/hexo-theme-Landscape/languages/ko-KR.yml","hash":"19209ad8f9d4057e8df808937f950eb265e1db69","modified":1693204567092},{"_id":"node_modules/hexo-theme-Landscape/languages/ko.yml","hash":"881d6a0a101706e0452af81c580218e0bfddd9cf","modified":1693204567093},{"_id":"node_modules/hexo-theme-Landscape/languages/mn-MN.yml","hash":"b9e5f3e7c0c2f779cf2cfded6db847b5941637ca","modified":1693204567096},{"_id":"node_modules/hexo-theme-Landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1693204567104},{"_id":"node_modules/hexo-theme-Landscape/languages/nl-NL.yml","hash":"5ebbc30021f05d99938f96dfff280392df7f91f0","modified":1693204567102},{"_id":"node_modules/hexo-theme-Landscape/languages/mn.yml","hash":"2e7523951072a9403ead3840ad823edd1084c116","modified":1693204567098},{"_id":"node_modules/hexo-theme-Landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1693204567107},{"_id":"node_modules/hexo-theme-Landscape/languages/pt-PT.yml","hash":"0f852b6b228e6ea59aa3540574bb89b233f2a098","modified":1693204567124},{"_id":"node_modules/hexo-theme-Landscape/languages/pt.yml","hash":"57d07b75d434fbfc33b0ddb543021cb5f53318a8","modified":1693204567125},{"_id":"node_modules/hexo-theme-Landscape/languages/ru-RU.yml","hash":"360d11a28bb768afb1dd15f63fa7fd3a8cc547ee","modified":1693204567128},{"_id":"node_modules/hexo-theme-Landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1693204567129},{"_id":"node_modules/hexo-theme-Landscape/languages/th.yml","hash":"84a55b00aa01f03982be294e43c33a20e6d32862","modified":1693204567173},{"_id":"node_modules/hexo-theme-Landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1693204567334},{"_id":"node_modules/hexo-theme-Landscape/languages/zh-CN.yml","hash":"1efd95774f401c80193eac6ee3f1794bfe93dc5a","modified":1693204567292},{"_id":"node_modules/hexo-theme-Landscape/languages/tr.yml","hash":"a1cdbfa17682d7a971de8ab8588bf57c74224b5b","modified":1693204567206},{"_id":"node_modules/hexo-theme-Landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1693204564712},{"_id":"node_modules/hexo-theme-Landscape/languages/th-TH.yml","hash":"ebfdba9bc4842c829473c1e6e4544344f182724d","modified":1693204567142},{"_id":"node_modules/hexo-theme-Landscape/layout/layout.ejs","hash":"0d1765036e4874500e68256fedb7470e96eeb6ee","modified":1693204565203},{"_id":"node_modules/hexo-theme-Landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1693204565239},{"_id":"node_modules/hexo-theme-Landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1693204564908},{"_id":"node_modules/hexo-theme-Landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1693204565246},{"_id":"node_modules/hexo-theme-Landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1693204565158},{"_id":"node_modules/hexo-theme-Landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1693204565326},{"_id":"node_modules/hexo-theme-Landscape/scripts/fancybox.js","hash":"c857d7a5e4a5d71c743a009c5932bf84229db428","modified":1693204565415},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/after-footer.ejs","hash":"377d257d5d16e0158a4405c72401517b074fd7ff","modified":1693204564196},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1693204564340},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/archive.ejs","hash":"7cb70a7a54f8c7ae49b10d1f37c0a9b74eab8826","modified":1693204564471},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/article.ejs","hash":"56597e951203dd662a6d2c817c7c4f1c920d4a25","modified":1693204564797},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/footer.ejs","hash":"3656eb692254346671abc03cb3ba1459829e0dce","modified":1693204564978},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/gauges-analytics.ejs","hash":"21a1e2a3907d1a3dad1cd0ab855fe6735f233c74","modified":1693204565067},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/google-analytics.ejs","hash":"2ea7442ea1e1a8ab4e41e26c563f58413b59a3d0","modified":1693204565078},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/head.ejs","hash":"f05bced793b0314d4f2ef0c993b3a51d0b7d203a","modified":1693204565086},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1693204565217},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/header.ejs","hash":"6a5033d189554c9a6d42e2ef7952ae5c9742648e","modified":1693204565094},{"_id":"node_modules/hexo-theme-Landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1693204564625},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1693204565257},{"_id":"node_modules/hexo-theme-Landscape/layout/_widget/recent_posts.ejs","hash":"60c4b012dcc656438ff59997e60367e5a21ab746","modified":1693204565251},{"_id":"node_modules/hexo-theme-Landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1693204564891},{"_id":"node_modules/hexo-theme-Landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1693204565338},{"_id":"node_modules/hexo-theme-Landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1693204565307},{"_id":"node_modules/hexo-theme-Landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1693204566154},{"_id":"node_modules/hexo-theme-Landscape/source/css/_variables.styl","hash":"ca28281423ae57d76b6c1eb91cd845fd4e518bd6","modified":1693204566157},{"_id":"node_modules/hexo-theme-Landscape/source/css/style.styl","hash":"e55a1d92954ed20f6887f92dc727bb995a010a43","modified":1693204566844},{"_id":"node_modules/hexo-theme-Landscape/source/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1693204566080},{"_id":"node_modules/hexo-theme-Landscape/source/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1693204564057},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1693204564858},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/post/date.ejs","hash":"f1458584b679545830b75bef2526e2f3eb931045","modified":1693204564964},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1693204565028},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/post/title.ejs","hash":"4d7e62574ddf46de9b41605fe3140d77b5ddb26d","modified":1693204565347},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1693204565228},{"_id":"node_modules/hexo-theme-Landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1693204565262},{"_id":"node_modules/hexo-theme-Landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1693204566163},{"_id":"node_modules/hexo-theme-Landscape/source/css/_partial/article.styl","hash":"2d1f6f79ebf9cb55ebdb3865a2474437eb2b37c6","modified":1693204566167},{"_id":"node_modules/hexo-theme-Landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1693204566170},{"_id":"node_modules/hexo-theme-Landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1693204566173},{"_id":"node_modules/hexo-theme-Landscape/source/css/_partial/header.styl","hash":"268d2989acb06e2ddd06cc36a6918c6cd865476b","modified":1693204566184},{"_id":"node_modules/hexo-theme-Landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1693204566256},{"_id":"node_modules/hexo-theme-Landscape/source/css/_partial/highlight.styl","hash":"9cc3b2927d814f2f6e8e188f9d3657b94f4c6ef3","modified":1693204566188},{"_id":"node_modules/hexo-theme-Landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1693204566266},{"_id":"node_modules/hexo-theme-Landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1693204566278},{"_id":"node_modules/hexo-theme-Landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1693204566276},{"_id":"node_modules/hexo-theme-Landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1693204566180},{"_id":"node_modules/hexo-theme-Landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1693204566245},{"_id":"node_modules/hexo-theme-Landscape/source/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1693204565470},{"_id":"node_modules/hexo-theme-Landscape/source/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1693204565828},{"_id":"node_modules/hexo-theme-Landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1693204565410},{"_id":"public/2023/08/28/petalinux/index.html","hash":"fc8c047567bb9c0f20fe432613fbf0922489728a","modified":1693297399790},{"_id":"public/2023/08/28/hello-world/index.html","hash":"311333c0c40a508afd57f2c64f610fcbc6675033","modified":1693297399790},{"_id":"public/archives/index.html","hash":"3c877703d94dbea6beb47dba06135cdfced2c5c8","modified":1693297399790},{"_id":"public/archives/2023/index.html","hash":"edac26a54eca0fc7c3e40e6d412d6c5f254c297d","modified":1693297399790},{"_id":"public/archives/2023/08/index.html","hash":"bc162cad0a36454bf4992df2360a86deaf4d2911","modified":1693297399790},{"_id":"public/index.html","hash":"25b610a1b27c06402990a42bf32b4ba9d1a1e4c9","modified":1693297399790},{"_id":"public/fancybox/jquery.fancybox.min.css","hash":"1be9b79be02a1cfc5d96c4a5e0feb8f472babd95","modified":1693297399790},{"_id":"public/js/script.js","hash":"49773efcb2221bbdf2d86f3f5c5ff2d841b528cc","modified":1693297399790},{"_id":"public/css/style.css","hash":"ddb3792605d744ab3d9f0a649c82b62e9b16daa6","modified":1693297399790},{"_id":"public/js/jquery-3.6.4.min.js","hash":"eda46747c71d38a880bee44f9a439c3858bb8f99","modified":1693297399790},{"_id":"public/fancybox/jquery.fancybox.min.js","hash":"6181412e73966696d08e1e5b1243a572d0f22ba6","modified":1693297399790},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1693297399790}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2023-08-28T06:35:28.264Z","updated":"2023-08-28T07:23:28.726Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllw1jvvu0000zsm4a6fj8nez","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"petalinux编译环境替换设计","_content":"<div align=\"center\">\n<font size=7 > petalinux编译环境替换设计\n\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n|版本|简介|编辑日期|作者|\n|---|----|----|----|\n|V1.0|初稿|2023/6/5|李政|\n\n\n</div>\n\n\n#  1. 概述 \n\n## 设计背景\n\n1. petalinux环境占用内存过大，每个项目产品，都需要针对其创建一个petalinux的平台环境实测20G，每个项目实测26G，服务器上2022平台就占用了168G。\n2. petalinux编译过慢，快则40分钟，慢则两个小时，甚至更久。\n3. petalinux黑盒子较多，许多框架较为神秘，不知怎么编译，怎么实现，怎么链接的，全包含在他的编译工具里面。\n4. 编译过程中，出现各种错误，很难进行排查，常见错误python xxx错误，验证影响底层开发。\n5. 调试内核时，往往编个版本进行验证，需要花费许久时间，一点小改动，就得重新进行以小时为单位的编译时间花费。极其不人性化。\n6. busybox中的命令被xilinx内嵌进环境中，无法获取环境之外的命令支持。\n7. 要么得联网编译，网速感人，要么需要下载75G的环境安装包，占用内存太大。\n\n## 设计目的\n\n- 提高内核编译效率，有助于内核bug解决。\n- 减少搭建环境造成的资源浪费。（内存资源和搭建成本）\n- 底层开发项目复用。（petalinux环境有权限要求，需创建人权限才能编译）\n- 开源项目。\n\n# 2. petalinux环境介绍\n\n1. petalinux环境搭建\n    - xilinx官网下载petalinux-v2019.2-final-installer.run（以19版为例）\n    - 服务器/虚拟机下载好一系列环境库（python zlib1g-dev gcc-multilib zlib1g:i386 screen pax等）\n    - 运行run文件开始搭建petalinux环境（耗时很久）\n\n2. 创建项目及编译前准备\n    - petalinux-create --type project --template zynqMP --name test(创建项目)\n    - 生成源码（每次创建项目都需要重新生成源码，2015以后均不可复用）\n    - petalinux-config（配置各种环境，UBOOT、kernel、rootfs、config，uboot和kernel的config文件不知逻辑保存）\n\n3. 各个模块进行编译\n    - petalinux-build -c u-boot(编译UBOOT)\n    - petalinux-build -c kernel(编译kernel)\n    - petalinux-build -c rootfs(编译rootfs)\n    - petalinux-build -c device-tree(编译device-tree)\n\n4. 每次编译都需要40+min,第一次编译甚至更久。\n\n# 3. 设计思路\n\n## 底层内核image.ub组成\n\n- Linux内核编译出来的Image.gz（选择内核压缩方式为gzip）\n- rootfs.cpio.gz（包含busybox及一些底层命令和脚本文件）\n- system.dtb（设备树）\n\n## Linux内核编译\n\n- 官网下载Linux内核源码，目前下载的是和xilinx同版本内核linux-5.15.19\n- 下载arm官网编译器aarch64-none-linux-gnu-gcc，不采用xilinx的aarch64-linux-gnu-gcc\n- 移植arm芯片的soc及platform信息，以及一些xilinx驱动（dma、clk等xilinx打过补丁）\n- 配置linux内核config。（由于是标准内核，config文件都可找到）\n- 直接make进行编译内核，生成目录就在arch/arm64/boot/\n\n## rootfs编译\n\n- rootfs只是命令集合体和脚本文件\n- petalinux增减命令功能，可下载最新的busybox命令库，在busybox中选定需要的命令进行编译替换。\n- 脚本启动文件等，我直接借用A3的rootfs文件，暂未深入研究，不影响编译环境。\n- 用户名密码/shell命令行提示符等，均可通过修改passwd/host等实现（已完成测试）\n\n## 设备树编译\n\n- 目前我是将解析出来的FPGA的xsa文件移植到arch/arm64/boot/dts中\n- 通过设备树中的include链接成一个system.dts\n- 和linux内核一起编译成system.dtb，生成目录就在arch/arm64/boot/dts\n\n## 生成image.ub文件\n\n- 通过mkimage命令将Image.gz/rootfs.cpio.gz/system.dtb文件进行链接生成image.ub（xilinx同款链接方式）\n- 该种编译内核方式是linux官方给的一种参考，故与xilinx无关，暂不修改\n\n# 4. 个人测试结果\n\n1. 内核可以稳定启动，内核相关启动日志及驱动打印和petalinux环境生成的一模一样\n2. 网卡、串口、N850驱动、GPIO驱动、硬核驱动、UBI文件系统挂载正常、FPGA加载OK、WEB端显示正常（查询、操作等）、ARM运行未见异常。\n3. 底层自测表格测试OK，未深入测试。\n4. 内核编译花费3分钟，且使用几核编译均可参数控制。\n5. 内核占用内存1.5G,压缩包800MB。进行备份，可做到如ARM代码压缩备份。不依赖权限问题,指定编译器即可编译。\n\n# 5. 风险评估\n\n1. 稳定性风险，设备没有经过长时间稳定性测试，无法保证稳定性。\n2. 在线升级、网卡驱动等一些列，均只做过一次性测试，未做压力测试，故无法保证功能完整性。\n3. 设备性能可能存在风险，未做任何性能测试，无法保证性能。\n\n# 6. 工作量评估\n\n## 初次编译\n\n- 根据xilinx SDK源码移植xilinx相关驱动及控制器、平台信息等\n- 配置内核的config文件\n- 根据xsa，使用petalinux生成设备树（目前未研究设备树该如何生成）\n- 移植设备树到内核，进行编译\n- 按项目需求确定busybox的命令库及启动顺序\n\n## 二次编译/其他平台\n\n- 内核源码直接解压缩复用\n- 若是其他平台，生成设备树后替换设备树即可\n- 按实际项目需求进行处理\n\n# 7. 设计总结\n\n此次设计属于解决底层开发人员的去繁就简，提高开发效率，减少内存占用和提高可复用性，避免严重依赖xilinx而做的技术研究。单就设备底层而言，未有任何性能优化和提高的地方，只是给公司提供了另一种底层开发的思路。\n\n","source":"_posts/petalinux.md","raw":"---\ntitle: petalinux编译环境替换设计\n---\n<div align=\"center\">\n<font size=7 > petalinux编译环境替换设计\n\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n|版本|简介|编辑日期|作者|\n|---|----|----|----|\n|V1.0|初稿|2023/6/5|李政|\n\n\n</div>\n\n\n#  1. 概述 \n\n## 设计背景\n\n1. petalinux环境占用内存过大，每个项目产品，都需要针对其创建一个petalinux的平台环境实测20G，每个项目实测26G，服务器上2022平台就占用了168G。\n2. petalinux编译过慢，快则40分钟，慢则两个小时，甚至更久。\n3. petalinux黑盒子较多，许多框架较为神秘，不知怎么编译，怎么实现，怎么链接的，全包含在他的编译工具里面。\n4. 编译过程中，出现各种错误，很难进行排查，常见错误python xxx错误，验证影响底层开发。\n5. 调试内核时，往往编个版本进行验证，需要花费许久时间，一点小改动，就得重新进行以小时为单位的编译时间花费。极其不人性化。\n6. busybox中的命令被xilinx内嵌进环境中，无法获取环境之外的命令支持。\n7. 要么得联网编译，网速感人，要么需要下载75G的环境安装包，占用内存太大。\n\n## 设计目的\n\n- 提高内核编译效率，有助于内核bug解决。\n- 减少搭建环境造成的资源浪费。（内存资源和搭建成本）\n- 底层开发项目复用。（petalinux环境有权限要求，需创建人权限才能编译）\n- 开源项目。\n\n# 2. petalinux环境介绍\n\n1. petalinux环境搭建\n    - xilinx官网下载petalinux-v2019.2-final-installer.run（以19版为例）\n    - 服务器/虚拟机下载好一系列环境库（python zlib1g-dev gcc-multilib zlib1g:i386 screen pax等）\n    - 运行run文件开始搭建petalinux环境（耗时很久）\n\n2. 创建项目及编译前准备\n    - petalinux-create --type project --template zynqMP --name test(创建项目)\n    - 生成源码（每次创建项目都需要重新生成源码，2015以后均不可复用）\n    - petalinux-config（配置各种环境，UBOOT、kernel、rootfs、config，uboot和kernel的config文件不知逻辑保存）\n\n3. 各个模块进行编译\n    - petalinux-build -c u-boot(编译UBOOT)\n    - petalinux-build -c kernel(编译kernel)\n    - petalinux-build -c rootfs(编译rootfs)\n    - petalinux-build -c device-tree(编译device-tree)\n\n4. 每次编译都需要40+min,第一次编译甚至更久。\n\n# 3. 设计思路\n\n## 底层内核image.ub组成\n\n- Linux内核编译出来的Image.gz（选择内核压缩方式为gzip）\n- rootfs.cpio.gz（包含busybox及一些底层命令和脚本文件）\n- system.dtb（设备树）\n\n## Linux内核编译\n\n- 官网下载Linux内核源码，目前下载的是和xilinx同版本内核linux-5.15.19\n- 下载arm官网编译器aarch64-none-linux-gnu-gcc，不采用xilinx的aarch64-linux-gnu-gcc\n- 移植arm芯片的soc及platform信息，以及一些xilinx驱动（dma、clk等xilinx打过补丁）\n- 配置linux内核config。（由于是标准内核，config文件都可找到）\n- 直接make进行编译内核，生成目录就在arch/arm64/boot/\n\n## rootfs编译\n\n- rootfs只是命令集合体和脚本文件\n- petalinux增减命令功能，可下载最新的busybox命令库，在busybox中选定需要的命令进行编译替换。\n- 脚本启动文件等，我直接借用A3的rootfs文件，暂未深入研究，不影响编译环境。\n- 用户名密码/shell命令行提示符等，均可通过修改passwd/host等实现（已完成测试）\n\n## 设备树编译\n\n- 目前我是将解析出来的FPGA的xsa文件移植到arch/arm64/boot/dts中\n- 通过设备树中的include链接成一个system.dts\n- 和linux内核一起编译成system.dtb，生成目录就在arch/arm64/boot/dts\n\n## 生成image.ub文件\n\n- 通过mkimage命令将Image.gz/rootfs.cpio.gz/system.dtb文件进行链接生成image.ub（xilinx同款链接方式）\n- 该种编译内核方式是linux官方给的一种参考，故与xilinx无关，暂不修改\n\n# 4. 个人测试结果\n\n1. 内核可以稳定启动，内核相关启动日志及驱动打印和petalinux环境生成的一模一样\n2. 网卡、串口、N850驱动、GPIO驱动、硬核驱动、UBI文件系统挂载正常、FPGA加载OK、WEB端显示正常（查询、操作等）、ARM运行未见异常。\n3. 底层自测表格测试OK，未深入测试。\n4. 内核编译花费3分钟，且使用几核编译均可参数控制。\n5. 内核占用内存1.5G,压缩包800MB。进行备份，可做到如ARM代码压缩备份。不依赖权限问题,指定编译器即可编译。\n\n# 5. 风险评估\n\n1. 稳定性风险，设备没有经过长时间稳定性测试，无法保证稳定性。\n2. 在线升级、网卡驱动等一些列，均只做过一次性测试，未做压力测试，故无法保证功能完整性。\n3. 设备性能可能存在风险，未做任何性能测试，无法保证性能。\n\n# 6. 工作量评估\n\n## 初次编译\n\n- 根据xilinx SDK源码移植xilinx相关驱动及控制器、平台信息等\n- 配置内核的config文件\n- 根据xsa，使用petalinux生成设备树（目前未研究设备树该如何生成）\n- 移植设备树到内核，进行编译\n- 按项目需求确定busybox的命令库及启动顺序\n\n## 二次编译/其他平台\n\n- 内核源码直接解压缩复用\n- 若是其他平台，生成设备树后替换设备树即可\n- 按实际项目需求进行处理\n\n# 7. 设计总结\n\n此次设计属于解决底层开发人员的去繁就简，提高开发效率，减少内存占用和提高可复用性，避免严重依赖xilinx而做的技术研究。单就设备底层而言，未有任何性能优化和提高的地方，只是给公司提供了另一种底层开发的思路。\n\n","slug":"petalinux","published":1,"date":"2023-08-28T07:17:39.184Z","updated":"2023-08-28T07:33:00.385Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cllw1jvw20001zsm417hi8a32","content":"<div align=\"center\">\n<font size=7 > petalinux编译环境替换设计\n\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n<table>\n<thead>\n<tr>\n<th>版本</th>\n<th>简介</th>\n<th>编辑日期</th>\n<th>作者</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>V1.0</td>\n<td>初稿</td>\n<td>2023&#x2F;6&#x2F;5</td>\n<td>李政</td>\n</tr>\n</tbody></table>\n</div>\n\n\n<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h1><h2 id=\"设计背景\"><a href=\"#设计背景\" class=\"headerlink\" title=\"设计背景\"></a>设计背景</h2><ol>\n<li>petalinux环境占用内存过大，每个项目产品，都需要针对其创建一个petalinux的平台环境实测20G，每个项目实测26G，服务器上2022平台就占用了168G。</li>\n<li>petalinux编译过慢，快则40分钟，慢则两个小时，甚至更久。</li>\n<li>petalinux黑盒子较多，许多框架较为神秘，不知怎么编译，怎么实现，怎么链接的，全包含在他的编译工具里面。</li>\n<li>编译过程中，出现各种错误，很难进行排查，常见错误python xxx错误，验证影响底层开发。</li>\n<li>调试内核时，往往编个版本进行验证，需要花费许久时间，一点小改动，就得重新进行以小时为单位的编译时间花费。极其不人性化。</li>\n<li>busybox中的命令被xilinx内嵌进环境中，无法获取环境之外的命令支持。</li>\n<li>要么得联网编译，网速感人，要么需要下载75G的环境安装包，占用内存太大。</li>\n</ol>\n<h2 id=\"设计目的\"><a href=\"#设计目的\" class=\"headerlink\" title=\"设计目的\"></a>设计目的</h2><ul>\n<li>提高内核编译效率，有助于内核bug解决。</li>\n<li>减少搭建环境造成的资源浪费。（内存资源和搭建成本）</li>\n<li>底层开发项目复用。（petalinux环境有权限要求，需创建人权限才能编译）</li>\n<li>开源项目。</li>\n</ul>\n<h1 id=\"2-petalinux环境介绍\"><a href=\"#2-petalinux环境介绍\" class=\"headerlink\" title=\"2. petalinux环境介绍\"></a>2. petalinux环境介绍</h1><ol>\n<li><p>petalinux环境搭建</p>\n<ul>\n<li>xilinx官网下载petalinux-v2019.2-final-installer.run（以19版为例）</li>\n<li>服务器&#x2F;虚拟机下载好一系列环境库（python zlib1g-dev gcc-multilib zlib1g:i386 screen pax等）</li>\n<li>运行run文件开始搭建petalinux环境（耗时很久）</li>\n</ul>\n</li>\n<li><p>创建项目及编译前准备</p>\n<ul>\n<li>petalinux-create –type project –template zynqMP –name test(创建项目)</li>\n<li>生成源码（每次创建项目都需要重新生成源码，2015以后均不可复用）</li>\n<li>petalinux-config（配置各种环境，UBOOT、kernel、rootfs、config，uboot和kernel的config文件不知逻辑保存）</li>\n</ul>\n</li>\n<li><p>各个模块进行编译</p>\n<ul>\n<li>petalinux-build -c u-boot(编译UBOOT)</li>\n<li>petalinux-build -c kernel(编译kernel)</li>\n<li>petalinux-build -c rootfs(编译rootfs)</li>\n<li>petalinux-build -c device-tree(编译device-tree)</li>\n</ul>\n</li>\n<li><p>每次编译都需要40+min,第一次编译甚至更久。</p>\n</li>\n</ol>\n<h1 id=\"3-设计思路\"><a href=\"#3-设计思路\" class=\"headerlink\" title=\"3. 设计思路\"></a>3. 设计思路</h1><h2 id=\"底层内核image-ub组成\"><a href=\"#底层内核image-ub组成\" class=\"headerlink\" title=\"底层内核image.ub组成\"></a>底层内核image.ub组成</h2><ul>\n<li>Linux内核编译出来的Image.gz（选择内核压缩方式为gzip）</li>\n<li>rootfs.cpio.gz（包含busybox及一些底层命令和脚本文件）</li>\n<li>system.dtb（设备树）</li>\n</ul>\n<h2 id=\"Linux内核编译\"><a href=\"#Linux内核编译\" class=\"headerlink\" title=\"Linux内核编译\"></a>Linux内核编译</h2><ul>\n<li>官网下载Linux内核源码，目前下载的是和xilinx同版本内核linux-5.15.19</li>\n<li>下载arm官网编译器aarch64-none-linux-gnu-gcc，不采用xilinx的aarch64-linux-gnu-gcc</li>\n<li>移植arm芯片的soc及platform信息，以及一些xilinx驱动（dma、clk等xilinx打过补丁）</li>\n<li>配置linux内核config。（由于是标准内核，config文件都可找到）</li>\n<li>直接make进行编译内核，生成目录就在arch&#x2F;arm64&#x2F;boot&#x2F;</li>\n</ul>\n<h2 id=\"rootfs编译\"><a href=\"#rootfs编译\" class=\"headerlink\" title=\"rootfs编译\"></a>rootfs编译</h2><ul>\n<li>rootfs只是命令集合体和脚本文件</li>\n<li>petalinux增减命令功能，可下载最新的busybox命令库，在busybox中选定需要的命令进行编译替换。</li>\n<li>脚本启动文件等，我直接借用A3的rootfs文件，暂未深入研究，不影响编译环境。</li>\n<li>用户名密码&#x2F;shell命令行提示符等，均可通过修改passwd&#x2F;host等实现（已完成测试）</li>\n</ul>\n<h2 id=\"设备树编译\"><a href=\"#设备树编译\" class=\"headerlink\" title=\"设备树编译\"></a>设备树编译</h2><ul>\n<li>目前我是将解析出来的FPGA的xsa文件移植到arch&#x2F;arm64&#x2F;boot&#x2F;dts中</li>\n<li>通过设备树中的include链接成一个system.dts</li>\n<li>和linux内核一起编译成system.dtb，生成目录就在arch&#x2F;arm64&#x2F;boot&#x2F;dts</li>\n</ul>\n<h2 id=\"生成image-ub文件\"><a href=\"#生成image-ub文件\" class=\"headerlink\" title=\"生成image.ub文件\"></a>生成image.ub文件</h2><ul>\n<li>通过mkimage命令将Image.gz&#x2F;rootfs.cpio.gz&#x2F;system.dtb文件进行链接生成image.ub（xilinx同款链接方式）</li>\n<li>该种编译内核方式是linux官方给的一种参考，故与xilinx无关，暂不修改</li>\n</ul>\n<h1 id=\"4-个人测试结果\"><a href=\"#4-个人测试结果\" class=\"headerlink\" title=\"4. 个人测试结果\"></a>4. 个人测试结果</h1><ol>\n<li>内核可以稳定启动，内核相关启动日志及驱动打印和petalinux环境生成的一模一样</li>\n<li>网卡、串口、N850驱动、GPIO驱动、硬核驱动、UBI文件系统挂载正常、FPGA加载OK、WEB端显示正常（查询、操作等）、ARM运行未见异常。</li>\n<li>底层自测表格测试OK，未深入测试。</li>\n<li>内核编译花费3分钟，且使用几核编译均可参数控制。</li>\n<li>内核占用内存1.5G,压缩包800MB。进行备份，可做到如ARM代码压缩备份。不依赖权限问题,指定编译器即可编译。</li>\n</ol>\n<h1 id=\"5-风险评估\"><a href=\"#5-风险评估\" class=\"headerlink\" title=\"5. 风险评估\"></a>5. 风险评估</h1><ol>\n<li>稳定性风险，设备没有经过长时间稳定性测试，无法保证稳定性。</li>\n<li>在线升级、网卡驱动等一些列，均只做过一次性测试，未做压力测试，故无法保证功能完整性。</li>\n<li>设备性能可能存在风险，未做任何性能测试，无法保证性能。</li>\n</ol>\n<h1 id=\"6-工作量评估\"><a href=\"#6-工作量评估\" class=\"headerlink\" title=\"6. 工作量评估\"></a>6. 工作量评估</h1><h2 id=\"初次编译\"><a href=\"#初次编译\" class=\"headerlink\" title=\"初次编译\"></a>初次编译</h2><ul>\n<li>根据xilinx SDK源码移植xilinx相关驱动及控制器、平台信息等</li>\n<li>配置内核的config文件</li>\n<li>根据xsa，使用petalinux生成设备树（目前未研究设备树该如何生成）</li>\n<li>移植设备树到内核，进行编译</li>\n<li>按项目需求确定busybox的命令库及启动顺序</li>\n</ul>\n<h2 id=\"二次编译-其他平台\"><a href=\"#二次编译-其他平台\" class=\"headerlink\" title=\"二次编译&#x2F;其他平台\"></a>二次编译&#x2F;其他平台</h2><ul>\n<li>内核源码直接解压缩复用</li>\n<li>若是其他平台，生成设备树后替换设备树即可</li>\n<li>按实际项目需求进行处理</li>\n</ul>\n<h1 id=\"7-设计总结\"><a href=\"#7-设计总结\" class=\"headerlink\" title=\"7. 设计总结\"></a>7. 设计总结</h1><p>此次设计属于解决底层开发人员的去繁就简，提高开发效率，减少内存占用和提高可复用性，避免严重依赖xilinx而做的技术研究。单就设备底层而言，未有任何性能优化和提高的地方，只是给公司提供了另一种底层开发的思路。</p>\n","site":{"data":{}},"excerpt":"","more":"<div align=\"center\">\n<font size=7 > petalinux编译环境替换设计\n\n</font>\n</div>\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n&nbsp;\n\n<div align=\"center\">\n\n<table>\n<thead>\n<tr>\n<th>版本</th>\n<th>简介</th>\n<th>编辑日期</th>\n<th>作者</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>V1.0</td>\n<td>初稿</td>\n<td>2023&#x2F;6&#x2F;5</td>\n<td>李政</td>\n</tr>\n</tbody></table>\n</div>\n\n\n<h1 id=\"1-概述\"><a href=\"#1-概述\" class=\"headerlink\" title=\"1. 概述\"></a>1. 概述</h1><h2 id=\"设计背景\"><a href=\"#设计背景\" class=\"headerlink\" title=\"设计背景\"></a>设计背景</h2><ol>\n<li>petalinux环境占用内存过大，每个项目产品，都需要针对其创建一个petalinux的平台环境实测20G，每个项目实测26G，服务器上2022平台就占用了168G。</li>\n<li>petalinux编译过慢，快则40分钟，慢则两个小时，甚至更久。</li>\n<li>petalinux黑盒子较多，许多框架较为神秘，不知怎么编译，怎么实现，怎么链接的，全包含在他的编译工具里面。</li>\n<li>编译过程中，出现各种错误，很难进行排查，常见错误python xxx错误，验证影响底层开发。</li>\n<li>调试内核时，往往编个版本进行验证，需要花费许久时间，一点小改动，就得重新进行以小时为单位的编译时间花费。极其不人性化。</li>\n<li>busybox中的命令被xilinx内嵌进环境中，无法获取环境之外的命令支持。</li>\n<li>要么得联网编译，网速感人，要么需要下载75G的环境安装包，占用内存太大。</li>\n</ol>\n<h2 id=\"设计目的\"><a href=\"#设计目的\" class=\"headerlink\" title=\"设计目的\"></a>设计目的</h2><ul>\n<li>提高内核编译效率，有助于内核bug解决。</li>\n<li>减少搭建环境造成的资源浪费。（内存资源和搭建成本）</li>\n<li>底层开发项目复用。（petalinux环境有权限要求，需创建人权限才能编译）</li>\n<li>开源项目。</li>\n</ul>\n<h1 id=\"2-petalinux环境介绍\"><a href=\"#2-petalinux环境介绍\" class=\"headerlink\" title=\"2. petalinux环境介绍\"></a>2. petalinux环境介绍</h1><ol>\n<li><p>petalinux环境搭建</p>\n<ul>\n<li>xilinx官网下载petalinux-v2019.2-final-installer.run（以19版为例）</li>\n<li>服务器&#x2F;虚拟机下载好一系列环境库（python zlib1g-dev gcc-multilib zlib1g:i386 screen pax等）</li>\n<li>运行run文件开始搭建petalinux环境（耗时很久）</li>\n</ul>\n</li>\n<li><p>创建项目及编译前准备</p>\n<ul>\n<li>petalinux-create –type project –template zynqMP –name test(创建项目)</li>\n<li>生成源码（每次创建项目都需要重新生成源码，2015以后均不可复用）</li>\n<li>petalinux-config（配置各种环境，UBOOT、kernel、rootfs、config，uboot和kernel的config文件不知逻辑保存）</li>\n</ul>\n</li>\n<li><p>各个模块进行编译</p>\n<ul>\n<li>petalinux-build -c u-boot(编译UBOOT)</li>\n<li>petalinux-build -c kernel(编译kernel)</li>\n<li>petalinux-build -c rootfs(编译rootfs)</li>\n<li>petalinux-build -c device-tree(编译device-tree)</li>\n</ul>\n</li>\n<li><p>每次编译都需要40+min,第一次编译甚至更久。</p>\n</li>\n</ol>\n<h1 id=\"3-设计思路\"><a href=\"#3-设计思路\" class=\"headerlink\" title=\"3. 设计思路\"></a>3. 设计思路</h1><h2 id=\"底层内核image-ub组成\"><a href=\"#底层内核image-ub组成\" class=\"headerlink\" title=\"底层内核image.ub组成\"></a>底层内核image.ub组成</h2><ul>\n<li>Linux内核编译出来的Image.gz（选择内核压缩方式为gzip）</li>\n<li>rootfs.cpio.gz（包含busybox及一些底层命令和脚本文件）</li>\n<li>system.dtb（设备树）</li>\n</ul>\n<h2 id=\"Linux内核编译\"><a href=\"#Linux内核编译\" class=\"headerlink\" title=\"Linux内核编译\"></a>Linux内核编译</h2><ul>\n<li>官网下载Linux内核源码，目前下载的是和xilinx同版本内核linux-5.15.19</li>\n<li>下载arm官网编译器aarch64-none-linux-gnu-gcc，不采用xilinx的aarch64-linux-gnu-gcc</li>\n<li>移植arm芯片的soc及platform信息，以及一些xilinx驱动（dma、clk等xilinx打过补丁）</li>\n<li>配置linux内核config。（由于是标准内核，config文件都可找到）</li>\n<li>直接make进行编译内核，生成目录就在arch&#x2F;arm64&#x2F;boot&#x2F;</li>\n</ul>\n<h2 id=\"rootfs编译\"><a href=\"#rootfs编译\" class=\"headerlink\" title=\"rootfs编译\"></a>rootfs编译</h2><ul>\n<li>rootfs只是命令集合体和脚本文件</li>\n<li>petalinux增减命令功能，可下载最新的busybox命令库，在busybox中选定需要的命令进行编译替换。</li>\n<li>脚本启动文件等，我直接借用A3的rootfs文件，暂未深入研究，不影响编译环境。</li>\n<li>用户名密码&#x2F;shell命令行提示符等，均可通过修改passwd&#x2F;host等实现（已完成测试）</li>\n</ul>\n<h2 id=\"设备树编译\"><a href=\"#设备树编译\" class=\"headerlink\" title=\"设备树编译\"></a>设备树编译</h2><ul>\n<li>目前我是将解析出来的FPGA的xsa文件移植到arch&#x2F;arm64&#x2F;boot&#x2F;dts中</li>\n<li>通过设备树中的include链接成一个system.dts</li>\n<li>和linux内核一起编译成system.dtb，生成目录就在arch&#x2F;arm64&#x2F;boot&#x2F;dts</li>\n</ul>\n<h2 id=\"生成image-ub文件\"><a href=\"#生成image-ub文件\" class=\"headerlink\" title=\"生成image.ub文件\"></a>生成image.ub文件</h2><ul>\n<li>通过mkimage命令将Image.gz&#x2F;rootfs.cpio.gz&#x2F;system.dtb文件进行链接生成image.ub（xilinx同款链接方式）</li>\n<li>该种编译内核方式是linux官方给的一种参考，故与xilinx无关，暂不修改</li>\n</ul>\n<h1 id=\"4-个人测试结果\"><a href=\"#4-个人测试结果\" class=\"headerlink\" title=\"4. 个人测试结果\"></a>4. 个人测试结果</h1><ol>\n<li>内核可以稳定启动，内核相关启动日志及驱动打印和petalinux环境生成的一模一样</li>\n<li>网卡、串口、N850驱动、GPIO驱动、硬核驱动、UBI文件系统挂载正常、FPGA加载OK、WEB端显示正常（查询、操作等）、ARM运行未见异常。</li>\n<li>底层自测表格测试OK，未深入测试。</li>\n<li>内核编译花费3分钟，且使用几核编译均可参数控制。</li>\n<li>内核占用内存1.5G,压缩包800MB。进行备份，可做到如ARM代码压缩备份。不依赖权限问题,指定编译器即可编译。</li>\n</ol>\n<h1 id=\"5-风险评估\"><a href=\"#5-风险评估\" class=\"headerlink\" title=\"5. 风险评估\"></a>5. 风险评估</h1><ol>\n<li>稳定性风险，设备没有经过长时间稳定性测试，无法保证稳定性。</li>\n<li>在线升级、网卡驱动等一些列，均只做过一次性测试，未做压力测试，故无法保证功能完整性。</li>\n<li>设备性能可能存在风险，未做任何性能测试，无法保证性能。</li>\n</ol>\n<h1 id=\"6-工作量评估\"><a href=\"#6-工作量评估\" class=\"headerlink\" title=\"6. 工作量评估\"></a>6. 工作量评估</h1><h2 id=\"初次编译\"><a href=\"#初次编译\" class=\"headerlink\" title=\"初次编译\"></a>初次编译</h2><ul>\n<li>根据xilinx SDK源码移植xilinx相关驱动及控制器、平台信息等</li>\n<li>配置内核的config文件</li>\n<li>根据xsa，使用petalinux生成设备树（目前未研究设备树该如何生成）</li>\n<li>移植设备树到内核，进行编译</li>\n<li>按项目需求确定busybox的命令库及启动顺序</li>\n</ul>\n<h2 id=\"二次编译-其他平台\"><a href=\"#二次编译-其他平台\" class=\"headerlink\" title=\"二次编译&#x2F;其他平台\"></a>二次编译&#x2F;其他平台</h2><ul>\n<li>内核源码直接解压缩复用</li>\n<li>若是其他平台，生成设备树后替换设备树即可</li>\n<li>按实际项目需求进行处理</li>\n</ul>\n<h1 id=\"7-设计总结\"><a href=\"#7-设计总结\" class=\"headerlink\" title=\"7. 设计总结\"></a>7. 设计总结</h1><p>此次设计属于解决底层开发人员的去繁就简，提高开发效率，减少内存占用和提高可复用性，避免严重依赖xilinx而做的技术研究。单就设备底层而言，未有任何性能优化和提高的地方，只是给公司提供了另一种底层开发的思路。</p>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}